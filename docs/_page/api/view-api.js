define(["exports","../furo-shell.js"],function(_exports,_furoShell){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.$attrDefault=attr;_exports.parser=_exports.$parserDefault=parser;_exports.find=_exports.$selectorDefault=baseFind;_exports.addClass=addClass;_exports.addMethodNames=addMethodNames;_exports.adopt=adopt;_exports.after=after;_exports.array=array;_exports.assignNewId=assignNewId;_exports.back=back;_exports.backward=backward;_exports.bbox=bbox;_exports.before=before;_exports.camelCase=camelCase;_exports.capitalize=capitalize;_exports.classes=classes;_exports.clear=clear;_exports.create=create;_exports.css=css;_exports.ctm=ctm;_exports.cx=cx;_exports.cy=cy;_exports.data=data;_exports.degrees=degrees;_exports.dispatch$1=_exports.dispatch=dispatch;_exports.eid=eid;_exports.extend=extend;_exports.filter=filter;_exports.find$1=find;_exports.findOne=findOne;_exports.forget=forget;_exports.forward=forward;_exports.from=from;_exports.front=front;_exports.getClass=getClass;_exports.getMethodNames=getMethodNames;_exports.getMethodsFor=getMethodsFor;_exports.getOrigin=getOrigin;_exports.getWindow=getWindow;_exports.hasClass=hasClass;_exports.height=height;_exports.height$1=height$1;_exports.hide=hide;_exports.insertAfter=insertAfter;_exports.insertBefore=insertBefore;_exports.invent=invent;_exports.length=length;_exports.makeInstance=makeInstance;_exports.makeMorphable$1=_exports.makeMorphable=makeMorphable;_exports.map=map;_exports.matrixify=matrixify;_exports.memory=memory;_exports.mockAdopt=mockAdopt;_exports.move=move;_exports.next=next;_exports.nodeOrNew=nodeOrNew;_exports.noop=noop;_exports.off$1=_exports.off=off;_exports.on$1=_exports.on=on;_exports.pathRegReplace=pathRegReplace;_exports.plain=plain;_exports.plot=plot;_exports.point=point;_exports.position=position;_exports.prev=prev;_exports.proportionalSize=proportionalSize;_exports.radians=radians;_exports.rbox=rbox;_exports.register=register;_exports.registerAttrHook=registerAttrHook;_exports.registerMethods=registerMethods;_exports.registerMorphableType$1=_exports.registerMorphableType=registerMorphableType;_exports.registerWindow$1=_exports.registerWindow=registerWindow;_exports.remember=remember;_exports.removeClass=removeClass;_exports.restoreWindow=restoreWindow;_exports.rx=rx;_exports.ry=ry;_exports.saveWindow=saveWindow;_exports.screenCTM=screenCTM;_exports.show=show;_exports.siblings=siblings;_exports.size=size;_exports.to=to;_exports.toParent=toParent;_exports.toRoot=toRoot;_exports.toggleClass=toggleClass;_exports.transform=transform;_exports.unCamelCase=unCamelCase;_exports.untransform=untransform;_exports.visible=visible;_exports.width=width;_exports.width$1=width$1;_exports.withWindow=withWindow;_exports.wrapWithAttrCheck=wrapWithAttrCheck;_exports.x=x;_exports.x$1=x$1;_exports.y=y;_exports.y$1=y$1;_exports.Queue=_exports.$QueueDefault=_exports.$Queue=_exports.Polyline=_exports.$PolylineDefault=_exports.$Polyline=_exports.Polygon=_exports.$PolygonDefault=_exports.$Polygon=_exports.Point=_exports.$PointDefault=_exports.PointArray=_exports.$PointArrayDefault=_exports.$PointArray=_exports.$Point=_exports.Pattern=_exports.$PatternDefault=_exports.$Pattern=_exports.Path=_exports.$PathDefault=_exports.PathArray=_exports.$PathArrayDefault=_exports.$PathArray=_exports.$Path=_exports.Morphable=_exports.$MorphableDefault=_exports.$Morphable=_exports.Matrix=_exports.$MatrixDefault=_exports.$Matrix=_exports.Mask=_exports.$MaskDefault=_exports.$Mask=_exports.Marker=_exports.$MarkerDefault=_exports.$Marker=_exports.List=_exports.$ListDefault=_exports.$List=_exports.Line=_exports.$LineDefault=_exports.$Line=_exports.Image=_exports.$ImageDefault=_exports.$Image=_exports.Gradient=_exports.$GradientDefault=_exports.$Gradient=_exports.G=_exports.$GDefault=_exports.$G=_exports.$FuroInputBase=_exports.ForeignObject=_exports.$ForeignObjectDefault=_exports.$ForeignObject=_exports.$FieldNode=_exports.$EventTreeNode=_exports.EventTarget=_exports.$EventTargetDefault=_exports.$EventTarget=_exports.$EntityNode=_exports.Ellipse=_exports.$EllipseDefault=_exports.$Ellipse=_exports.Element=_exports.$ElementDefault=_exports.$Element=_exports.Dom=_exports.$DomDefault=_exports.$Dom=_exports.Defs=_exports.$DefsDefault=_exports.$Defs=_exports.$Controller=_exports.Container=_exports.$ContainerDefault=_exports.$Container=_exports.Color=_exports.$ColorDefault=_exports.$Color=_exports.$CollectionNode=_exports.$CollectionControls=_exports.ClipPath=_exports.$ClipPathDefault=_exports.$ClipPath=_exports.Circle=_exports.$CircleDefault=_exports.$Circle=_exports.Box=_exports.$BoxDefault=_exports.$Box=_exports.$BaseDefault=_exports.$Base=_exports.$ArrayPolyfill=_exports.Animator=_exports.$AnimatorDefault=_exports.$Animator=_exports.A=_exports.$ADefault=_exports.$A=void 0;_exports.Stepper=_exports.Spring$1=_exports.Spring=_exports.Services=_exports.SVG=_exports.RepeaterNode=_exports.PID$1=_exports.PID=_exports.ObjectBag$1=_exports.ObjectBag=_exports.NonMorphable$1=_exports.NonMorphable=_exports.NodeEvent=_exports.MorphArray=_exports.FuroTreeItem=_exports.FuroInputBase=_exports.FieldNode=_exports.EventTreeNode=_exports.EntityNode=_exports.Ease$1=_exports.Ease=_exports.Controller$1=_exports.Controller=_exports.CollectionNode=_exports.CollectionControls=_exports.$window=_exports.utils=_exports.$utils=_exports.$transform=_exports.$textable=_exports.$styling=_exports.$selector=_exports.regex=_exports.$regex=_exports.$poly=_exports.$pointed=_exports.$parser=_exports.$panelRegistry=_exports.namespaces=_exports.$namespaces=_exports.$methods=_exports.$memory=_exports.$main=_exports.$gradiented=_exports.$furoTreeItem=_exports.$event=_exports.defaults=_exports.$defaults=_exports.$data=_exports.$css=_exports.$class=_exports.$circled=_exports.$attr=_exports.$arrange=_exports.$apiConfig$1=_exports.$apiConfig=_exports.$adopter=_exports.Use=_exports.$UseDefault=_exports.$Use=_exports.Tspan=_exports.$TspanDefault=_exports.$Tspan=_exports.Timeline=_exports.$TimelineDefault=_exports.$Timeline=_exports.TextPath=_exports.$TextPathDefault=_exports.$TextPath=_exports.Text=_exports.$TextDefault=_exports.$Text=_exports.Symbol=_exports.$SymbolDefault=_exports.$Symbol=_exports.Svg=_exports.$SvgDefault=_exports.$Svg=_exports.Style=_exports.$StyleDefault=_exports.$Style=_exports.Stop=_exports.$StopDefault=_exports.$Stop=_exports.Shape=_exports.$ShapeDefault=_exports.$Shape=_exports.Number=_exports.$SVGNumberDefault=_exports.$SVGNumber=_exports.Array=_exports.$SVGArrayDefault=_exports.$SVGArray=_exports.Runner=_exports.$RunnerDefault=_exports.$Runner=_exports.$RepeaterNode=_exports.Rect=_exports.$RectDefault=_exports.$Rect=void 0;_exports.xmlns=_exports.xlink=_exports.whitespace=_exports.transforms=_exports.timeline=_exports.svgjs=_exports.subClassArray=_exports.root=_exports.rgb=_exports.reference=_exports.pathLetters=_exports.panelRegistry=_exports.numbersWithDots=_exports.numberAndUnit=_exports.ns=_exports.isRgb=_exports.isPercent=_exports.isPathLetter=_exports.isNumber=_exports.isImage=_exports.isHex=_exports.isCss=_exports.isBlank=_exports.hyphen=_exports.hex=_exports.globals=_exports.easing$1=_exports.easing=_exports.dots=_exports.delimiter=_exports.attrs=_exports.Types$1=_exports.Types=_exports.TransformBag$1=_exports.TransformBag=_exports.Styling=void 0;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object))}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});return keys}function _objectSpread(target){for(var i=1,source;i<arguments.length;i++){source=null!=arguments[i]?arguments[i]:{};if(i%2){ownKeys(source,!0).forEach(function(key){babelHelpers.defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}class FuroDocPropertiesItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.prop}data(data){this.prop=data;if("protected"===data.privacy){this.setAttribute("hidden","")}this._FBPTriggerWire("--data",data);this.requestUpdate()}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-size: 13px;
            margin-bottom: 36px;
        }


        :host([hidden]) {
            display: none;
        }
        span.default{
            color:green;
        }
        span.propname{
            font-family: 'Roboto Mono', 'Courier New', 'Courier', monospace;
            font-weight: 900;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){this.cname=this.prop.name.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();// language=HTML
return _furoShell.html`
      <span class="propname">${this.cname}</span>   <span class="propname">(${this.prop.name}):</span>  ${this.prop.type} = <span class="default">${this.prop.defaultValue}</span>  <i>${this.prop.inheritedFrom}</i>
      <furo-markdown ƒ-parse-markdown="--data(*.description)">></furo-markdown>
      
    `}}window.customElements.define("furo-doc-properties-item",FuroDocPropertiesItem);class FuroDocProperties extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.hidden=!0}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * hide props if empty
       */hidden:{type:Boolean,reflect:!0}}}data(data){if(Array.isArray(data)){data=data.sort((a,b)=>{var textA=a.name.toUpperCase(),textB=b.name.toUpperCase();return textA<textB?-1:textA>textB?1:0});this._FBPTriggerWire("--data",data);this.removeAttribute("hidden")}else{this.setAttribute("hidden","")}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }

        h2 {
            margin-top: 48px;
            font-size: 1.25rem;
            font-weight: 500;
            letter-spacing: 0.0125em;
            border-bottom: 1px solid rgba(0, 0, 0, 0.87);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Attributes & Properties</h2>
      <template is="flow-repeat" ƒ-inject-items="--data">
        <furo-doc-properties-item ƒ-data="--item"></furo-doc-properties-item>

      </template>
    `}}window.customElements.define("furo-doc-properties",FuroDocProperties);class FuroDocMethodsItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.method}data(data){this.method=data;if("protected"===data.privacy){this.setAttribute("hidden","")}this._FBPTriggerWire("--data",data);this.requestUpdate()}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-size: 13px;
            margin-bottom: 36px;
        }

        strong {
            font-weight: 700;
            font-family: "Roboto Mono";

        }

        :host([hidden]) {
            display: none;
        }

        span.name {
            color: green;
        }

        span.paramname {
            font-family: "Roboto Mono";
            color: #717171;
        }

        span.type, span.return {
            color: #717171;
            font-weight: 900;
        }


        span.type:after {
            content: ","
        }
        .inherited{
            font-style: italic;
            line-height: 24px;
            color: #7f7f7f;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
if(!this.method.return){this.method.return={}}this.cname=this.method.name.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return _furoShell.html`
      <strong>ƒ-${this.cname}</strong>  (<template is="flow-repeat" ƒ-inject-items="--data(*.params)">
      <span class="name" ƒ-.inner-text="--item(*.name)"></span> : 
      <span class="type" ƒ-.inner-text="--item(*.type)"></span></template>) ⟹ <span class="return">${this.method.return.type}</span>
      
      <furo-markdown ƒ-parse-markdown="--data(*.description)"></furo-markdown>
      <ul>
      <template is="flow-repeat" ƒ-inject-items="--data(*.params)">
    <li><span class="paramname" ƒ-.inner-text="--item(*.name)">fd</span> <br>
    <furo-markdown ƒ-parse-markdown="--item(*.description)">></furo-markdown></li>   
</template></ul> 
    `}}window.customElements.define("furo-doc-methods-item",FuroDocMethodsItem);class FuroDocMethods extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.hidden=!0}/**
     * @private
     * @return {Object}
     */static get methods(){return{/**
       * hide props if empty
       */hidden:{type:Boolean,reflect:!0}}}data(data){if(Array.isArray(data)){// show public fields only hide inhterite from inheritedFrom: "LitElement"
data=data.filter(m=>{// todo: filter out inherited stuff like connectedCallback and so
return"public"===m.privacy&&!m.inheritedFrom});data=data.sort((a,b)=>{var textA=a.name.toUpperCase(),textB=b.name.toUpperCase();return textA<textB?-1:textA>textB?1:0});this._FBPTriggerWire("--data",data);this.removeAttribute("hidden")}else{this.setAttribute("hidden","")}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }

        h2 {
            margin-top: 48px;
            font-size: 1.25rem;
            font-weight: 500;
            letter-spacing: 0.0125em;
            border-bottom: 1px solid rgba(0, 0, 0, 0.87);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Methods</h2>
      <template is="flow-repeat" ƒ-inject-items="--data">
        <furo-doc-methods-item ƒ-data="--item"></furo-doc-methods-item>

      </template>
    `}}window.customElements.define("furo-doc-methods",FuroDocMethods);class FuroDocEventsItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.prop}data(data){this.prop=data;if("protected"===data.privacy){this.setAttribute("hidden","")}this._FBPTriggerWire("--data",data);this.requestUpdate()}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-size: 13px;
            margin-bottom: 36px;
        }
        strong {
            font-weight: 700;
            font-family: "Roboto Mono";
            
        }
        :host([hidden]) {
            display: none;
        }
        span.type, span.return {
            color: #717171;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <strong>@-${this.prop.name}</strong> : <span class="type">${this.prop.type}</span> 
      <furo-markdown ƒ-parse-markdown="--data(*.description)">></furo-markdown>
      
    `}}window.customElements.define("furo-doc-events-item",FuroDocEventsItem);class FuroDocEvents extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.hidden=!0}/**
     * @private
     * @return {Object}
     */static get events(){return{/**
       * hide props if empty
       */hidden:{type:Boolean,reflect:!0}}}data(data){if(Array.isArray(data)){this._FBPTriggerWire("--data",data);data=data.sort((a,b)=>{var textA=a.name.toUpperCase(),textB=b.name.toUpperCase();return textA<textB?-1:textA>textB?1:0});this.removeAttribute("hidden")}else{this.setAttribute("hidden","")}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        

        :host([hidden]) {
            display: none;
        }

        h2 {
            margin-top: 48px;
            font-size: 1.25rem;
            font-weight: 500;
            letter-spacing: 0.0125em;
            border-bottom: 1px solid rgba(0, 0, 0, 0.87);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Events</h2>
      <template is="flow-repeat" ƒ-inject-items="--data">
        <furo-doc-events-item ƒ-data="--item"></furo-doc-events-item>

      </template>
    `}}window.customElements.define("furo-doc-events",FuroDocEvents);class FuroDemoLink extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}/**
    * flow is ready lifecycle method
    */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
    `}injectData(data){this.data=data}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <a href="../demo/${this.data.url}">${this.data.url}</a> <i>${this.data.description}</i>
    `}}window.customElements.define("furo-demo-link",FuroDemoLink);class FuroDocElement extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.element={}}hide(){this.setAttribute("hidden","")}print(analysisElement){this.element=analysisElement;this._FBPTriggerWire("--data",this.element);if(this.element.demos){this.element.demos.forEach(d=>{d.package=this.element.__package});this._FBPTriggerWire("--demos",this.element.demos)}this.removeAttribute("hidden");this.requestUpdate();this.scrollTop=0}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-weight: 400;
            font-size: 14px;
        }

        :host([hidden]) {
            display: none;
        }

        h1{
            font-size: 2.8rem;
            font-weight: 400;
            line-height: 3.5rem;
            margin-top: 0;
            letter-spacing: normal;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        h2.description {
            margin-top: 20px;
            margin-bottom: 24px;
            max-width: 600px;
            color: #999;
            border-bottom: none;
        }
        h2 {
            font-size: 1.25rem;
            font-weight: 500;
            letter-spacing: 0.0125em;
            border-bottom: 1px solid rgba(0, 0, 0, 0.87);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h1><${this.element.tagname}&gt;</h1>
      <h2 class="description">${this.element.summary}</h2>         
      <h2>Description</h2>
      <furo-markdown unsafe ƒ-parse-markdown="--data(*.description)"></furo-markdown>
      <h2>Demos</h2>
      <template is="flow-repeat" ƒ-inject-items="--demos">
          <furo-demo-link ƒ-inject-data="--item"></furo-demo-link>
      </template>
      <furo-doc-properties ƒ-data="--data(*.properties)"></furo-doc-properties>
      <furo-doc-events ƒ-data="--data(*.events)"></furo-doc-events>
      <furo-doc-methods ƒ-data="--data(*.methods)"></furo-doc-methods>
    `}}window.customElements.define("furo-doc-element",FuroDocElement);class FuroDocClassMethodsItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.method}data(data){this.method=data;if("protected"===data.privacy){this.setAttribute("hidden","")}this._FBPTriggerWire("--data",data);this.requestUpdate()}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-size: 13px;
            margin-bottom: 36px;
        }

        strong {
            font-weight: 700;
            font-family: "Roboto Mono";
           
        }

        :host([hidden]) {
            display: none;
        }

        span.name {
            color: green;
        }

        span.paramname {
            font-family: "Roboto Mono";
            color: #717171;
        }

        span.type, span.return {
            color: #717171;
            font-weight: 900;
        }
        

        span.type:after {
            content: ","
        }
        .inherited{
            font-style: italic;
            line-height: 24px;
            color: #7f7f7f;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
if(!this.method.return){this.method.return={}}return _furoShell.html`
      <strong>${this.method.name}</strong>  (<template is="flow-repeat" ƒ-inject-items="--data(*.params)">
      <span class="name" ƒ-.inner-text="--item(*.name)"></span> : 
      <span class="type" ƒ-.inner-text="--item(*.type)"></span></template>) ⟹ <span class="return">${this.method.return.type}</span>
       <span class="inherited"> Inherited from ${this.method.inheritedFrom}</span>
      <furo-markdown ƒ-parse-markdown="--data(*.description)"></furo-markdown>
      <ul>
      <template is="flow-repeat" ƒ-inject-items="--data(*.params)">
    <li><span class="paramname" ƒ-.inner-text="--item(*.name)">fd</span> <br>
    <furo-markdown ƒ-parse-markdown="--item(*.description)">></furo-markdown></li>   
</template></ul> 
    `}}window.customElements.define("furo-doc-class-methods-item",FuroDocClassMethodsItem);class FuroDocClassMethods extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.hidden=!0}/**
     * @private
     * @return {Object}
     */static get methods(){return{/**
       * hide props if empty
       */hidden:{type:Boolean,reflect:!0}}}data(data){if(Array.isArray(data)){// show public fields only
data=data.filter(m=>{return"public"===m.privacy});this._FBPTriggerWire("--data",data);this.removeAttribute("hidden")}else{this.setAttribute("hidden","")}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }

        h2 {
            font-weight: 400;
            line-height: 28px;
            font-size: 20px;
            margin-top: 48px;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Methods</h2>
      <template is="flow-repeat" ƒ-inject-items="--data">
        <furo-doc-class-methods-item ƒ-data="--item"></furo-doc-class-methods-item>

      </template>
    `}}window.customElements.define("furo-doc-class-methods",FuroDocClassMethods);class FuroDocClass extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.class={}}hide(){this.setAttribute("hidden","")}print(analysisElement){this.class=analysisElement;this._FBPTriggerWire("--data",this.class);this.removeAttribute("hidden");this.requestUpdate();this.scrollTop=0}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            font-weight: 400;
            font-size: 14px;
        }

        :host([hidden]) {
            display: none;
        }
        h1{
            font-size: 2.8rem;
            font-weight: 400;
            line-height: 3.5rem;
            margin-top: 0;
            letter-spacing: normal;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        h2.description {
            margin-top: 20px;
            margin-bottom: 24px;
            max-width: 600px;
            color: #999;
            border-bottom: none;
        }
        h2 {
            font-weight: 400;
            line-height: 28px;
            font-size: 20px;
            margin-top: 48px;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h1>${this.class.name}</h1>
      <h2 class="description">${this.class.summary}</h2>  
      <h2>Description</h2>
      <furo-markdown ƒ-parse-markdown="--data(*.description)"></furo-markdown>
      <furo-doc-properties ƒ-data="--data(*.properties)"></furo-doc-properties>     
      <furo-doc-class-methods ƒ-data="--data(*.methods)"></furo-doc-class-methods>
    `}}window.customElements.define("furo-doc-class",FuroDocClass);class FuroDocMenuElementItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();//forward click to a
this.addEventListener("click",e=>{this._FBPTriggerWire("--click",e)})}setItem(item){this.item=item;this.selected=item.__selected;if(this.selected){setTimeout(()=>{if(this.scrollIntoViewIfNeeded){this.scrollIntoViewIfNeeded()}},16)}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */selected:{type:Boolean,reflect:!0}}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: list-item;
            padding-left: var(--spacing-s);
            line-height: 30px;
            margin-bottom: 4px;
            color: var(--on-background);
            letter-spacing: 0.0178571em;
            font-size: 0.875rem;
            font-weight: 300;
            transition: all 0.2s ease 0s;
            cursor: pointer;
        }
        
        :host([hidden]) {
            display: none;
        }
        

        :host(:hover), :host([selected]) {
            background-color: var(--secondary);
            border-radius: 4px;
            color: var(--on-secondary);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
<a href="${this.item.tagname}" ƒ-click=":STOP,--click"></a>&lt;${this.item.tagname}&gt;
      
    `}}window.customElements.define("furo-doc-menu-element-item",FuroDocMenuElementItem);class FuroDocMenuClassItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.addEventListener("click",e=>{this._FBPTriggerWire("--click",e)})}setItem(item){this.item=item;this.selected=item.__selected;if(this.selected){setTimeout(()=>{if(this.scrollIntoViewIfNeeded){this.scrollIntoViewIfNeeded()}},16)}// remove classes without names (ie superclasses)
if(!this.item.name){this.remove()}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */selected:{type:Boolean,reflect:!0}}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: list-item;
            padding-left: var(--spacing-s);
            line-height: 30px;
            margin-bottom: 4px;
            color: var(--on-background);
            letter-spacing: 0.0178571em;
            font-size: 0.875rem;
            font-weight: 300;
            transition: all 0.2s ease 0s;
            cursor: pointer;
        }

        :host([hidden]) {
            display: none;
        }


        :host(:hover), :host([selected]) {
            background-color: var(--secondary);
            border-radius: 4px;
            color: var(--on-secondary);
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <a href="${this.item.name}" ƒ-click=":STOP,--click"></a>${this.item.name}
    `}}window.customElements.define("furo-doc-menu-class-item",FuroDocMenuClassItem);class FuroDocMenu extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}analysis(analysis){if(analysis.elements){this._FBPTriggerWire("--elements",analysis.elements)}else{//clear
this._FBPTriggerWire("--elements",[])}if(analysis.classes){this._FBPTriggerWire("--classes",analysis.classes)}else{//clear
this._FBPTriggerWire("--classes",[])}if(analysis.mixins){this._FBPTriggerWire("--mixins",analysis.mixins)}else{//clear
this._FBPTriggerWire("--mixins",[])}// send selected, analysis.__selectedElement is set from furo-doc-fetch-analysis
if(analysis.__selectedElement){/**
       * @event element
       * Fired when element is selected
       * detail payload: element analysis data
       */let customEvent=new Event("element",{composed:!0,bubbles:!0});customEvent.detail=analysis.__selectedElement;this.dispatchEvent(customEvent)}// send selected class
if(analysis.__selectedClass){/**
       * @event element
       * Fired when element is selected
       * detail payload: element analysis data
       */let customEvent=new Event("class",{composed:!0,bubbles:!0});customEvent.detail=analysis.__selectedClass;this.dispatchEvent(customEvent)}// send selected mixin
if(analysis.__selectedMixin){/**
       * @event element
       * Fired when element is selected
       * detail payload: element analysis data
       */let customEvent=new Event("mixin",{composed:!0,bubbles:!0});customEvent.detail=analysis.__selectedMixin;this.dispatchEvent(customEvent)}}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing-s);
            background-color: var(--background);
        }

        :host([hidden]) {
            display: none;
        }

        h3 {
            position: sticky;
            top: 0;
            background-color: var(--background);
            z-index: 1;
            margin-top: 0;
            color: var(--on-background);
            letter-spacing: .07272727em;
            font-size: 12px;
            font-weight: 500;
            text-transform: uppercase;
        }


        ul {
            list-style: none;
            padding: 0;
        }
        

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`

      <h3>Elements</h3>
      <ul>
        <template is="flow-repeat" ƒ-inject-items="--elements" identity-path="name">
          <furo-doc-menu-element-item ƒ-set-item="--item"></furo-doc-menu-element-item>
        </template>
      </ul>


      <h3>Mixins</h3>
      <ul>
        <template is="flow-repeat" ƒ-inject-items="--mixins" identity-path="name">
          <furo-doc-menu-class-item ƒ-set-item="--item"></furo-doc-menu-class-item>
        </template>
      </ul>

      <h3>Classes</h3>
      <ul>
        <template is="flow-repeat" ƒ-inject-items="--classes" identity-path="name">
          <furo-doc-menu-class-item ƒ-set-item="--item"></furo-doc-menu-class-item>
        </template>
      </ul>

    `}}window.customElements.define("furo-doc-menu",FuroDocMenu);class Styling{static get theme(){// language=CSS
return _furoShell.css`
        :host {

            /* Inspired by https://material.io/design/color/the-color-system.html#color-theme-creation */
            /* https://material.io/design/material-theming/implementing-your-theme.html#color */
            --primary-light: #4ccd50;
            --primary: #4caf50;
            --primary-dark: #4b9b4f;
            --primary-variant: #f4f4f4;
            --on-primary: #212121;

            --secondary-light: #ffe525;
            --secondary: #ffeb3b;
            --secondary-dark: #efdb3b;
            --secondary-variant: #edeeed;
            --on-secondary: #000000;

            --accent-light: #419bff;
            --accent: #3f83e3;
            --accent-dark: #3f6ece;
            --on-accent: #e5e5e5;

            --background: #ffffff;
            --on-background: #212121;

            --surface-light: #f2f2f2;
            --surface: #eeeeee;
            --surface-dark: #DEDEDE;
            --on-surface: #212121;
            --separator: #c3c4c3;

            /* Input, Forms, Toast*/
            --error: #C51162;
            --on-error: #ffffff;

            --danger-light: #FA0202;
            --danger: #e20202;
            --danger-dark: #b50202;
            --on-danger: #FAFAFA;

            --success: #129991;
            --on-success: #202124;

            --disabled: #c3c4c3;
            --on-disabled: #585858;


            /* Spacing */
            --spacing-xxs: 4px;
            --spacing-xs: 8px;
            --spacing-s: 16px;
            --spacing: 24px;
            --spacing-m: 24px;
            --spacing-l: 32px;
            --spacing-xl: 48px;
            --spacing-xxl: 96px;


        }

    `}}_exports.Styling=Styling;var styling={Styling:Styling};_exports.$styling=styling;(function(f){if("object"===typeof exports&&"undefined"!==typeof module){module.exports=f()}else if("function"===typeof define&&define.amd){define([],f)}else{var g;if("undefined"!==typeof window){g=window}else if("undefined"!==typeof global){g=global}else if("undefined"!==typeof self){g=self}else{g=this}g.dagre=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){/*
      Copyright (c) 2012-2014 Chris Pettitt

      Permission is hereby granted, free of charge, to any person obtaining a copy
      of this software and associated documentation files (the "Software"), to deal
      in the Software without restriction, including without limitation the rights
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      copies of the Software, and to permit persons to whom the Software is
      furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
      THE SOFTWARE.
      */module.exports={graphlib:require("./lib/graphlib"),layout:require("./lib/layout"),debug:require("./lib/debug"),util:{time:require("./lib/util").time,notime:require("./lib/util").notime},version:require("./lib/version")}},{"./lib/debug":6,"./lib/graphlib":7,"./lib/layout":9,"./lib/util":29,"./lib/version":30}],2:[function(require,module,exports){"use strict";var _=require("./lodash"),greedyFAS=require("./greedy-fas");module.exports={run:run,undo:undo};function run(g){var fas="greedy"===g.graph().acyclicer?greedyFAS(g,weightFn(g)):dfsFAS(g);_.forEach(fas,function(e){var label=g.edge(e);g.removeEdge(e);label.forwardName=e.name;label.reversed=!0;g.setEdge(e.w,e.v,label,_.uniqueId("rev"))});function weightFn(g){return function(e){return g.edge(e).weight}}}function dfsFAS(g){var fas=[],stack={},visited={};function dfs(v){if(_.has(visited,v)){return}visited[v]=!0;stack[v]=!0;_.forEach(g.outEdges(v),function(e){if(_.has(stack,e.w)){fas.push(e)}else{dfs(e.w)}});delete stack[v]}_.forEach(g.nodes(),dfs);return fas}function undo(g){_.forEach(g.edges(),function(e){var label=g.edge(e);if(label.reversed){g.removeEdge(e);var forwardName=label.forwardName;delete label.reversed;delete label.forwardName;g.setEdge(e.w,e.v,label,forwardName)}})}},{"./greedy-fas":8,"./lodash":10}],3:[function(require,module,exports){var _=require("./lodash"),util=require("./util");module.exports=addBorderSegments;function addBorderSegments(g){function dfs(v){var children=g.children(v),node=g.node(v);if(children.length){_.forEach(children,dfs)}if(_.has(node,"minRank")){node.borderLeft=[];node.borderRight=[];for(var rank=node.minRank,maxRank=node.maxRank+1;rank<maxRank;++rank){addBorderNode(g,"borderLeft","_bl",v,node,rank);addBorderNode(g,"borderRight","_br",v,node,rank)}}}_.forEach(g.children(),dfs)}function addBorderNode(g,prop,prefix,sg,sgNode,rank){var label={width:0,height:0,rank:rank,borderType:prop},prev=sgNode[prop][rank-1],curr=util.addDummyNode(g,"border",label,prefix);sgNode[prop][rank]=curr;g.setParent(curr,sg);if(prev){g.setEdge(prev,curr,{weight:1})}}},{"./lodash":10,"./util":29}],4:[function(require,module,exports){"use strict";var _=require("./lodash");module.exports={adjust:adjust,undo:undo};function adjust(g){var rankDir=g.graph().rankdir.toLowerCase();if("lr"===rankDir||"rl"===rankDir){swapWidthHeight(g)}}function undo(g){var rankDir=g.graph().rankdir.toLowerCase();if("bt"===rankDir||"rl"===rankDir){reverseY(g)}if("lr"===rankDir||"rl"===rankDir){swapXY(g);swapWidthHeight(g)}}function swapWidthHeight(g){_.forEach(g.nodes(),function(v){swapWidthHeightOne(g.node(v))});_.forEach(g.edges(),function(e){swapWidthHeightOne(g.edge(e))})}function swapWidthHeightOne(attrs){var w=attrs.width;attrs.width=attrs.height;attrs.height=w}function reverseY(g){_.forEach(g.nodes(),function(v){reverseYOne(g.node(v))});_.forEach(g.edges(),function(e){var edge=g.edge(e);_.forEach(edge.points,reverseYOne);if(_.has(edge,"y")){reverseYOne(edge)}})}function reverseYOne(attrs){attrs.y=-attrs.y}function swapXY(g){_.forEach(g.nodes(),function(v){swapXYOne(g.node(v))});_.forEach(g.edges(),function(e){var edge=g.edge(e);_.forEach(edge.points,swapXYOne);if(_.has(edge,"x")){swapXYOne(edge)}})}function swapXYOne(attrs){var x=attrs.x;attrs.x=attrs.y;attrs.y=x}},{"./lodash":10}],5:[function(require,module,exports){/*
       * Simple doubly linked list implementation derived from Cormen, et al.,
       * "Introduction to Algorithms".
       */module.exports=List;function List(){var sentinel={};sentinel._next=sentinel._prev=sentinel;this._sentinel=sentinel}List.prototype.dequeue=function(){var sentinel=this._sentinel,entry=sentinel._prev;if(entry!==sentinel){unlink(entry);return entry}};List.prototype.enqueue=function(entry){var sentinel=this._sentinel;if(entry._prev&&entry._next){unlink(entry)}entry._next=sentinel._next;sentinel._next._prev=entry;sentinel._next=entry;entry._prev=sentinel};List.prototype.toString=function(){var strs=[],sentinel=this._sentinel,curr=sentinel._prev;while(curr!==sentinel){strs.push(JSON.stringify(curr,filterOutLinks));curr=curr._prev}return"["+strs.join(", ")+"]"};function unlink(entry){entry._prev._next=entry._next;entry._next._prev=entry._prev;delete entry._next;delete entry._prev}function filterOutLinks(k,v){if("_next"!==k&&"_prev"!==k){return v}}},{}],6:[function(require,module,exports){var _=require("./lodash"),util=require("./util"),Graph=require("./graphlib").Graph;module.exports={debugOrdering:debugOrdering};/* istanbul ignore next */function debugOrdering(g){var layerMatrix=util.buildLayerMatrix(g),h=new Graph({compound:!0,multigraph:!0}).setGraph({});_.forEach(g.nodes(),function(v){h.setNode(v,{label:v});h.setParent(v,"layer"+g.node(v).rank)});_.forEach(g.edges(),function(e){h.setEdge(e.v,e.w,{},e.name)});_.forEach(layerMatrix,function(layer,i){var layerV="layer"+i;h.setNode(layerV,{rank:"same"});_.reduce(layer,function(u,v){h.setEdge(u,v,{style:"invis"});return v})});return h}},{"./graphlib":7,"./lodash":10,"./util":29}],7:[function(require,module,exports){/* global window */var graphlib;if("function"===typeof require){try{graphlib=require("graphlib")}catch(e){}}if(!graphlib){graphlib=window.graphlib}module.exports=graphlib},{graphlib:31}],8:[function(require,module,exports){var _=require("./lodash"),Graph=require("./graphlib").Graph,List=require("./data/list");/*
                                          * A greedy heuristic for finding a feedback arc set for a graph. A feedback
                                          * arc set is a set of edges that can be removed to make a graph acyclic.
                                          * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, "A fast and
                                          * effective heuristic for the feedback arc set problem." This implementation
                                          * adjusts that from the paper to allow for weighted edges.
                                          */module.exports=greedyFAS;var DEFAULT_WEIGHT_FN=_.constant(1);function greedyFAS(g,weightFn){if(1>=g.nodeCount()){return[]}var state=buildState(g,weightFn||DEFAULT_WEIGHT_FN),results=doGreedyFAS(state.graph,state.buckets,state.zeroIdx);// Expand multi-edges
return _.flatten(_.map(results,function(e){return g.outEdges(e.v,e.w)}),!0)}function doGreedyFAS(g,buckets,zeroIdx){var results=[],sources=buckets[buckets.length-1],sinks=buckets[0],entry;while(g.nodeCount()){while(entry=sinks.dequeue()){removeNode(g,buckets,zeroIdx,entry)}while(entry=sources.dequeue()){removeNode(g,buckets,zeroIdx,entry)}if(g.nodeCount()){for(var i=buckets.length-2;0<i;--i){entry=buckets[i].dequeue();if(entry){results=results.concat(removeNode(g,buckets,zeroIdx,entry,!0));break}}}}return results}function removeNode(g,buckets,zeroIdx,entry,collectPredecessors){var results=collectPredecessors?[]:void 0;_.forEach(g.inEdges(entry.v),function(edge){var weight=g.edge(edge),uEntry=g.node(edge.v);if(collectPredecessors){results.push({v:edge.v,w:edge.w})}uEntry.out-=weight;assignBucket(buckets,zeroIdx,uEntry)});_.forEach(g.outEdges(entry.v),function(edge){var weight=g.edge(edge),w=edge.w,wEntry=g.node(w);wEntry["in"]-=weight;assignBucket(buckets,zeroIdx,wEntry)});g.removeNode(entry.v);return results}function buildState(g,weightFn){var fasGraph=new Graph,maxIn=0,maxOut=0;_.forEach(g.nodes(),function(v){fasGraph.setNode(v,{v:v,in:0,out:0})});// Aggregate weights on nodes, but also sum the weights across multi-edges
// into a single edge for the fasGraph.
_.forEach(g.edges(),function(e){var prevWeight=fasGraph.edge(e.v,e.w)||0,weight=weightFn(e),edgeWeight=prevWeight+weight;fasGraph.setEdge(e.v,e.w,edgeWeight);maxOut=Math.max(maxOut,fasGraph.node(e.v).out+=weight);maxIn=Math.max(maxIn,fasGraph.node(e.w)["in"]+=weight)});var buckets=_.range(maxOut+maxIn+3).map(function(){return new List}),zeroIdx=maxIn+1;_.forEach(fasGraph.nodes(),function(v){assignBucket(buckets,zeroIdx,fasGraph.node(v))});return{graph:fasGraph,buckets:buckets,zeroIdx:zeroIdx}}function assignBucket(buckets,zeroIdx,entry){if(!entry.out){buckets[0].enqueue(entry)}else if(!entry["in"]){buckets[buckets.length-1].enqueue(entry)}else{buckets[entry.out-entry["in"]+zeroIdx].enqueue(entry)}}},{"./data/list":5,"./graphlib":7,"./lodash":10}],9:[function(require,module,exports){"use strict";var _=require("./lodash"),acyclic=require("./acyclic"),normalize=require("./normalize"),rank=require("./rank"),normalizeRanks=require("./util").normalizeRanks,parentDummyChains=require("./parent-dummy-chains"),removeEmptyRanks=require("./util").removeEmptyRanks,nestingGraph=require("./nesting-graph"),addBorderSegments=require("./add-border-segments"),coordinateSystem=require("./coordinate-system"),order=require("./order"),position=require("./position"),util=require("./util"),Graph=require("./graphlib").Graph;module.exports=layout;function layout(g,opts){var time=opts&&opts.debugTiming?util.time:util.notime;time("layout",function(){var layoutGraph=time("  buildLayoutGraph",function(){return buildLayoutGraph(g)});time("  runLayout",function(){runLayout(layoutGraph,time)});time("  updateInputGraph",function(){updateInputGraph(g,layoutGraph)})})}function runLayout(g,time){time("    makeSpaceForEdgeLabels",function(){makeSpaceForEdgeLabels(g)});time("    removeSelfEdges",function(){removeSelfEdges(g)});time("    acyclic",function(){acyclic.run(g)});time("    nestingGraph.run",function(){nestingGraph.run(g)});time("    rank",function(){rank(util.asNonCompoundGraph(g))});time("    injectEdgeLabelProxies",function(){injectEdgeLabelProxies(g)});time("    removeEmptyRanks",function(){removeEmptyRanks(g)});time("    nestingGraph.cleanup",function(){nestingGraph.cleanup(g)});time("    normalizeRanks",function(){normalizeRanks(g)});time("    assignRankMinMax",function(){assignRankMinMax(g)});time("    removeEdgeLabelProxies",function(){removeEdgeLabelProxies(g)});time("    normalize.run",function(){normalize.run(g)});time("    parentDummyChains",function(){parentDummyChains(g)});time("    addBorderSegments",function(){addBorderSegments(g)});time("    order",function(){order(g)});time("    insertSelfEdges",function(){insertSelfEdges(g)});time("    adjustCoordinateSystem",function(){coordinateSystem.adjust(g)});time("    position",function(){position(g)});time("    positionSelfEdges",function(){positionSelfEdges(g)});time("    removeBorderNodes",function(){removeBorderNodes(g)});time("    normalize.undo",function(){normalize.undo(g)});time("    fixupEdgeLabelCoords",function(){fixupEdgeLabelCoords(g)});time("    undoCoordinateSystem",function(){coordinateSystem.undo(g)});time("    translateGraph",function(){translateGraph(g)});time("    assignNodeIntersects",function(){assignNodeIntersects(g)});time("    reversePoints",function(){reversePointsForReversedEdges(g)});time("    acyclic.undo",function(){acyclic.undo(g)})}/*
         * Copies final layout information from the layout graph back to the input
         * graph. This process only copies whitelisted attributes from the layout graph
         * to the input graph, so it serves as a good place to determine what
         * attributes can influence layout.
         */function updateInputGraph(inputGraph,layoutGraph){_.forEach(inputGraph.nodes(),function(v){var inputLabel=inputGraph.node(v),layoutLabel=layoutGraph.node(v);if(inputLabel){inputLabel.x=layoutLabel.x;inputLabel.y=layoutLabel.y;if(layoutGraph.children(v).length){inputLabel.width=layoutLabel.width;inputLabel.height=layoutLabel.height}}});_.forEach(inputGraph.edges(),function(e){var inputLabel=inputGraph.edge(e),layoutLabel=layoutGraph.edge(e);inputLabel.points=layoutLabel.points;if(_.has(layoutLabel,"x")){inputLabel.x=layoutLabel.x;inputLabel.y=layoutLabel.y}});inputGraph.graph().width=layoutGraph.graph().width;inputGraph.graph().height=layoutGraph.graph().height}var graphNumAttrs=["nodesep","edgesep","ranksep","marginx","marginy"],graphDefaults={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb"},graphAttrs=["acyclicer","ranker","rankdir","align"],nodeNumAttrs=["width","height"],nodeDefaults={width:0,height:0},edgeNumAttrs=["minlen","weight","width","height","labeloffset"],edgeDefaults={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},edgeAttrs=["labelpos"];/*
                                     * Constructs a new graph from the input graph, which can be used for layout.
                                     * This process copies only whitelisted attributes from the input graph to the
                                     * layout graph. Thus this function serves as a good place to determine what
                                     * attributes can influence layout.
                                     */function buildLayoutGraph(inputGraph){var g=new Graph({multigraph:!0,compound:!0}),graph=canonicalize(inputGraph.graph());g.setGraph(_.merge({},graphDefaults,selectNumberAttrs(graph,graphNumAttrs),_.pick(graph,graphAttrs)));_.forEach(inputGraph.nodes(),function(v){var node=canonicalize(inputGraph.node(v));g.setNode(v,_.defaults(selectNumberAttrs(node,nodeNumAttrs),nodeDefaults));g.setParent(v,inputGraph.parent(v))});_.forEach(inputGraph.edges(),function(e){var edge=canonicalize(inputGraph.edge(e));g.setEdge(e,_.merge({},edgeDefaults,selectNumberAttrs(edge,edgeNumAttrs),_.pick(edge,edgeAttrs)))});return g}/*
         * This idea comes from the Gansner paper: to account for edge labels in our
         * layout we split each rank in half by doubling minlen and halving ranksep.
         * Then we can place labels at these mid-points between nodes.
         *
         * We also add some minimal padding to the width to push the label for the edge
         * away from the edge itself a bit.
         */function makeSpaceForEdgeLabels(g){var graph=g.graph();graph.ranksep/=2;_.forEach(g.edges(),function(e){var edge=g.edge(e);edge.minlen*=2;if("c"!==edge.labelpos.toLowerCase()){if("TB"===graph.rankdir||"BT"===graph.rankdir){edge.width+=edge.labeloffset}else{edge.height+=edge.labeloffset}}})}/*
         * Creates temporary dummy nodes that capture the rank in which each edge's
         * label is going to, if it has one of non-zero width and height. We do this
         * so that we can safely remove empty ranks while preserving balance for the
         * label's position.
         */function injectEdgeLabelProxies(g){_.forEach(g.edges(),function(e){var edge=g.edge(e);if(edge.width&&edge.height){var v=g.node(e.v),w=g.node(e.w),label={rank:(w.rank-v.rank)/2+v.rank,e:e};util.addDummyNode(g,"edge-proxy",label,"_ep")}})}function assignRankMinMax(g){var maxRank=0;_.forEach(g.nodes(),function(v){var node=g.node(v);if(node.borderTop){node.minRank=g.node(node.borderTop).rank;node.maxRank=g.node(node.borderBottom).rank;maxRank=_.max(maxRank,node.maxRank)}});g.graph().maxRank=maxRank}function removeEdgeLabelProxies(g){_.forEach(g.nodes(),function(v){var node=g.node(v);if("edge-proxy"===node.dummy){g.edge(node.e).labelRank=node.rank;g.removeNode(v)}})}function translateGraph(g){var minX=Number.POSITIVE_INFINITY,maxX=0,minY=Number.POSITIVE_INFINITY,maxY=0,graphLabel=g.graph(),marginX=graphLabel.marginx||0,marginY=graphLabel.marginy||0;function getExtremes(attrs){var x=attrs.x,y=attrs.y,w=attrs.width,h=attrs.height;minX=Math.min(minX,x-w/2);maxX=Math.max(maxX,x+w/2);minY=Math.min(minY,y-h/2);maxY=Math.max(maxY,y+h/2)}_.forEach(g.nodes(),function(v){getExtremes(g.node(v))});_.forEach(g.edges(),function(e){var edge=g.edge(e);if(_.has(edge,"x")){getExtremes(edge)}});minX-=marginX;minY-=marginY;_.forEach(g.nodes(),function(v){var node=g.node(v);node.x-=minX;node.y-=minY});_.forEach(g.edges(),function(e){var edge=g.edge(e);_.forEach(edge.points,function(p){p.x-=minX;p.y-=minY});if(_.has(edge,"x")){edge.x-=minX}if(_.has(edge,"y")){edge.y-=minY}});graphLabel.width=maxX-minX+marginX;graphLabel.height=maxY-minY+marginY}function assignNodeIntersects(g){_.forEach(g.edges(),function(e){var edge=g.edge(e),nodeV=g.node(e.v),nodeW=g.node(e.w),p1,p2;if(!edge.points){edge.points=[];p1=nodeW;p2=nodeV}else{p1=edge.points[0];p2=edge.points[edge.points.length-1]}edge.points.unshift(util.intersectRect(nodeV,p1));edge.points.push(util.intersectRect(nodeW,p2))})}function fixupEdgeLabelCoords(g){_.forEach(g.edges(),function(e){var edge=g.edge(e);if(_.has(edge,"x")){if("l"===edge.labelpos||"r"===edge.labelpos){edge.width-=edge.labeloffset}switch(edge.labelpos){case"l":edge.x-=edge.width/2+edge.labeloffset;break;case"r":edge.x+=edge.width/2+edge.labeloffset;break;}}})}function reversePointsForReversedEdges(g){_.forEach(g.edges(),function(e){var edge=g.edge(e);if(edge.reversed){edge.points.reverse()}})}function removeBorderNodes(g){_.forEach(g.nodes(),function(v){if(g.children(v).length){var node=g.node(v),t=g.node(node.borderTop),b=g.node(node.borderBottom),l=g.node(_.last(node.borderLeft)),r=g.node(_.last(node.borderRight));node.width=Math.abs(r.x-l.x);node.height=Math.abs(b.y-t.y);node.x=l.x+node.width/2;node.y=t.y+node.height/2}});_.forEach(g.nodes(),function(v){if("border"===g.node(v).dummy){g.removeNode(v)}})}function removeSelfEdges(g){_.forEach(g.edges(),function(e){if(e.v===e.w){var node=g.node(e.v);if(!node.selfEdges){node.selfEdges=[]}node.selfEdges.push({e:e,label:g.edge(e)});g.removeEdge(e)}})}function insertSelfEdges(g){var layers=util.buildLayerMatrix(g);_.forEach(layers,function(layer){var orderShift=0;_.forEach(layer,function(v,i){var node=g.node(v);node.order=i+orderShift;_.forEach(node.selfEdges,function(selfEdge){util.addDummyNode(g,"selfedge",{width:selfEdge.label.width,height:selfEdge.label.height,rank:node.rank,order:i+ ++orderShift,e:selfEdge.e,label:selfEdge.label},"_se")});delete node.selfEdges})})}function positionSelfEdges(g){_.forEach(g.nodes(),function(v){var node=g.node(v);if("selfedge"===node.dummy){var selfNode=g.node(node.e.v),x=selfNode.x+selfNode.width/2,y=selfNode.y,dx=node.x-x,dy=selfNode.height/2;g.setEdge(node.e,node.label);g.removeNode(v);node.label.points=[{x:x+2*dx/3,y:y-dy},{x:x+5*dx/6,y:y-dy},{x:x+dx,y:y},{x:x+5*dx/6,y:y+dy},{x:x+2*dx/3,y:y+dy}];node.label.x=node.x;node.label.y=node.y}})}function selectNumberAttrs(obj,attrs){return _.mapValues(_.pick(obj,attrs),Number)}function canonicalize(attrs){var newAttrs={};_.forEach(attrs,function(v,k){newAttrs[k.toLowerCase()]=v});return newAttrs}},{"./acyclic":2,"./add-border-segments":3,"./coordinate-system":4,"./graphlib":7,"./lodash":10,"./nesting-graph":11,"./normalize":12,"./order":17,"./parent-dummy-chains":22,"./position":24,"./rank":26,"./util":29}],10:[function(require,module,exports){/* global window */var lodash;if("function"===typeof require){try{lodash={cloneDeep:require("lodash/cloneDeep"),constant:require("lodash/constant"),defaults:require("lodash/defaults"),each:require("lodash/each"),filter:require("lodash/filter"),find:require("lodash/find"),flatten:require("lodash/flatten"),forEach:require("lodash/forEach"),forIn:require("lodash/forIn"),has:require("lodash/has"),isUndefined:require("lodash/isUndefined"),last:require("lodash/last"),map:require("lodash/map"),mapValues:require("lodash/mapValues"),max:require("lodash/max"),merge:require("lodash/merge"),min:require("lodash/min"),minBy:require("lodash/minBy"),now:require("lodash/now"),pick:require("lodash/pick"),range:require("lodash/range"),reduce:require("lodash/reduce"),sortBy:require("lodash/sortBy"),uniqueId:require("lodash/uniqueId"),values:require("lodash/values"),zipObject:require("lodash/zipObject")}}catch(e){}}if(!lodash){lodash=window._}module.exports=lodash},{"lodash/cloneDeep":227,"lodash/constant":228,"lodash/defaults":229,"lodash/each":230,"lodash/filter":232,"lodash/find":233,"lodash/flatten":235,"lodash/forEach":236,"lodash/forIn":237,"lodash/has":239,"lodash/isUndefined":258,"lodash/last":261,"lodash/map":262,"lodash/mapValues":263,"lodash/max":264,"lodash/merge":266,"lodash/min":267,"lodash/minBy":268,"lodash/now":270,"lodash/pick":271,"lodash/range":273,"lodash/reduce":274,"lodash/sortBy":276,"lodash/uniqueId":286,"lodash/values":287,"lodash/zipObject":288}],11:[function(require,module,exports){var _=require("./lodash"),util=require("./util");module.exports={run:run,cleanup:cleanup};/*
          * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,
          * adds appropriate edges to ensure that all cluster nodes are placed between
          * these boundries, and ensures that the graph is connected.
          *
          * In addition we ensure, through the use of the minlen property, that nodes
          * and subgraph border nodes to not end up on the same rank.
          *
          * Preconditions:
          *
          *    1. Input graph is a DAG
          *    2. Nodes in the input graph has a minlen attribute
          *
          * Postconditions:
          *
          *    1. Input graph is connected.
          *    2. Dummy nodes are added for the tops and bottoms of subgraphs.
          *    3. The minlen attribute for nodes is adjusted to ensure nodes do not
          *       get placed on the same rank as subgraph border nodes.
          *
          * The nesting graph idea comes from Sander, "Layout of Compound Directed
          * Graphs."
          */function run(g){var root=util.addDummyNode(g,"root",{},"_root"),depths=treeDepths(g),height=_.max(_.values(depths))-1,nodeSep=2*height+1;g.graph().nestingRoot=root;// Multiply minlen by nodeSep to align nodes on non-border ranks.
_.forEach(g.edges(),function(e){g.edge(e).minlen*=nodeSep});// Calculate a weight that is sufficient to keep subgraphs vertically compact
var weight=sumWeights(g)+1;// Create border nodes and link them up
_.forEach(g.children(),function(child){dfs(g,root,nodeSep,weight,height,depths,child)});// Save the multiplier for node layers for later removal of empty border
// layers.
g.graph().nodeRankFactor=nodeSep}function dfs(g,root,nodeSep,weight,height,depths,v){var children=g.children(v);if(!children.length){if(v!==root){g.setEdge(root,v,{weight:0,minlen:nodeSep})}return}var top=util.addBorderNode(g,"_bt"),bottom=util.addBorderNode(g,"_bb"),label=g.node(v);g.setParent(top,v);label.borderTop=top;g.setParent(bottom,v);label.borderBottom=bottom;_.forEach(children,function(child){dfs(g,root,nodeSep,weight,height,depths,child);var childNode=g.node(child),childTop=childNode.borderTop?childNode.borderTop:child,childBottom=childNode.borderBottom?childNode.borderBottom:child,thisWeight=childNode.borderTop?weight:2*weight,minlen=childTop!==childBottom?1:height-depths[v]+1;g.setEdge(top,childTop,{weight:thisWeight,minlen:minlen,nestingEdge:!0});g.setEdge(childBottom,bottom,{weight:thisWeight,minlen:minlen,nestingEdge:!0})});if(!g.parent(v)){g.setEdge(root,top,{weight:0,minlen:height+depths[v]})}}function treeDepths(g){var depths={};function dfs(v,depth){var children=g.children(v);if(children&&children.length){_.forEach(children,function(child){dfs(child,depth+1)})}depths[v]=depth}_.forEach(g.children(),function(v){dfs(v,1)});return depths}function sumWeights(g){return _.reduce(g.edges(),function(acc,e){return acc+g.edge(e).weight},0)}function cleanup(g){var graphLabel=g.graph();g.removeNode(graphLabel.nestingRoot);delete graphLabel.nestingRoot;_.forEach(g.edges(),function(e){var edge=g.edge(e);if(edge.nestingEdge){g.removeEdge(e)}})}},{"./lodash":10,"./util":29}],12:[function(require,module,exports){"use strict";var _=require("./lodash"),util=require("./util");module.exports={run:run,undo:undo};/*
          * Breaks any long edges in the graph into short segments that span 1 layer
          * each. This operation is undoable with the denormalize function.
          *
          * Pre-conditions:
          *
          *    1. The input graph is a DAG.
          *    2. Each node in the graph has a "rank" property.
          *
          * Post-condition:
          *
          *    1. All edges in the graph have a length of 1.
          *    2. Dummy nodes are added where edges have been split into segments.
          *    3. The graph is augmented with a "dummyChains" attribute which contains
          *       the first dummy in each chain of dummy nodes produced.
          */function run(g){g.graph().dummyChains=[];_.forEach(g.edges(),function(edge){normalizeEdge(g,edge)})}function normalizeEdge(g,e){var v=e.v,vRank=g.node(v).rank,w=e.w,wRank=g.node(w).rank,name=e.name,edgeLabel=g.edge(e),labelRank=edgeLabel.labelRank;if(wRank===vRank+1)return;g.removeEdge(e);var dummy,attrs,i;for(i=0,++vRank;vRank<wRank;++i,++vRank){edgeLabel.points=[];attrs={width:0,height:0,edgeLabel:edgeLabel,edgeObj:e,rank:vRank};dummy=util.addDummyNode(g,"edge",attrs,"_d");if(vRank===labelRank){attrs.width=edgeLabel.width;attrs.height=edgeLabel.height;attrs.dummy="edge-label";attrs.labelpos=edgeLabel.labelpos}g.setEdge(v,dummy,{weight:edgeLabel.weight},name);if(0===i){g.graph().dummyChains.push(dummy)}v=dummy}g.setEdge(v,w,{weight:edgeLabel.weight},name)}function undo(g){_.forEach(g.graph().dummyChains,function(v){var node=g.node(v),origLabel=node.edgeLabel,w;g.setEdge(node.edgeObj,origLabel);while(node.dummy){w=g.successors(v)[0];g.removeNode(v);origLabel.points.push({x:node.x,y:node.y});if("edge-label"===node.dummy){origLabel.x=node.x;origLabel.y=node.y;origLabel.width=node.width;origLabel.height=node.height}v=w;node=g.node(v)}})}},{"./lodash":10,"./util":29}],13:[function(require,module,exports){var _=require("../lodash");module.exports=addSubgraphConstraints;function addSubgraphConstraints(g,cg,vs){var prev={},rootPrev;_.forEach(vs,function(v){var child=g.parent(v),parent,prevChild;while(child){parent=g.parent(child);if(parent){prevChild=prev[parent];prev[parent]=child}else{prevChild=rootPrev;rootPrev=child}if(prevChild&&prevChild!==child){cg.setEdge(prevChild,child);return}child=parent}});/*
              function dfs(v) {
                var children = v ? g.children(v) : g.children();
                if (children.length) {
                  var min = Number.POSITIVE_INFINITY,
                      subgraphs = [];
                  _.each(children, function(child) {
                    var childMin = dfs(child);
                    if (g.children(child).length) {
                      subgraphs.push({ v: child, order: childMin });
                    }
                    min = Math.min(min, childMin);
                  });
                  _.reduce(_.sortBy(subgraphs, "order"), function(prev, curr) {
                    cg.setEdge(prev.v, curr.v);
                    return curr;
                  });
                  return min;
                }
                return g.node(v).order;
              }
              dfs(undefined);
              */}},{"../lodash":10}],14:[function(require,module,exports){var _=require("../lodash");module.exports=barycenter;function barycenter(g,movable){return _.map(movable,function(v){var inV=g.inEdges(v);if(!inV.length){return{v:v}}else{var result=_.reduce(inV,function(acc,e){var edge=g.edge(e),nodeU=g.node(e.v);return{sum:acc.sum+edge.weight*nodeU.order,weight:acc.weight+edge.weight}},{sum:0,weight:0});return{v:v,barycenter:result.sum/result.weight,weight:result.weight}}})}},{"../lodash":10}],15:[function(require,module,exports){var _=require("../lodash"),Graph=require("../graphlib").Graph;module.exports=buildLayerGraph;/*
                                         * Constructs a graph that can be used to sort a layer of nodes. The graph will
                                         * contain all base and subgraph nodes from the request layer in their original
                                         * hierarchy and any edges that are incident on these nodes and are of the type
                                         * requested by the "relationship" parameter.
                                         *
                                         * Nodes from the requested rank that do not have parents are assigned a root
                                         * node in the output graph, which is set in the root graph attribute. This
                                         * makes it easy to walk the hierarchy of movable nodes during ordering.
                                         *
                                         * Pre-conditions:
                                         *
                                         *    1. Input graph is a DAG
                                         *    2. Base nodes in the input graph have a rank attribute
                                         *    3. Subgraph nodes in the input graph has minRank and maxRank attributes
                                         *    4. Edges have an assigned weight
                                         *
                                         * Post-conditions:
                                         *
                                         *    1. Output graph has all nodes in the movable rank with preserved
                                         *       hierarchy.
                                         *    2. Root nodes in the movable layer are made children of the node
                                         *       indicated by the root attribute of the graph.
                                         *    3. Non-movable nodes incident on movable nodes, selected by the
                                         *       relationship parameter, are included in the graph (without hierarchy).
                                         *    4. Edges incident on movable nodes, selected by the relationship
                                         *       parameter, are added to the output graph.
                                         *    5. The weights for copied edges are aggregated as need, since the output
                                         *       graph is not a multi-graph.
                                         */function buildLayerGraph(g,rank,relationship){var root=createRootNode(g),result=new Graph({compound:!0}).setGraph({root:root}).setDefaultNodeLabel(function(v){return g.node(v)});_.forEach(g.nodes(),function(v){var node=g.node(v),parent=g.parent(v);if(node.rank===rank||node.minRank<=rank&&rank<=node.maxRank){result.setNode(v);result.setParent(v,parent||root);// This assumes we have only short edges!
_.forEach(g[relationship](v),function(e){var u=e.v===v?e.w:e.v,edge=result.edge(u,v),weight=!_.isUndefined(edge)?edge.weight:0;result.setEdge(u,v,{weight:g.edge(e).weight+weight})});if(_.has(node,"minRank")){result.setNode(v,{borderLeft:node.borderLeft[rank],borderRight:node.borderRight[rank]})}}});return result}function createRootNode(g){var v;while(g.hasNode(v=_.uniqueId("_root")));return v}},{"../graphlib":7,"../lodash":10}],16:[function(require,module,exports){"use strict";var _=require("../lodash");module.exports=crossCount;/*
                                    * A function that takes a layering (an array of layers, each with an array of
                                    * ordererd nodes) and a graph and returns a weighted crossing count.
                                    *
                                    * Pre-conditions:
                                    *
                                    *    1. Input graph must be simple (not a multigraph), directed, and include
                                    *       only simple edges.
                                    *    2. Edges in the input graph must have assigned weights.
                                    *
                                    * Post-conditions:
                                    *
                                    *    1. The graph and layering matrix are left unchanged.
                                    *
                                    * This algorithm is derived from Barth, et al., "Bilayer Cross Counting."
                                    */function crossCount(g,layering){for(var cc=0,i=1;i<layering.length;++i){cc+=twoLayerCrossCount(g,layering[i-1],layering[i])}return cc}function twoLayerCrossCount(g,northLayer,southLayer){// Sort all of the edges between the north and south layers by their position
// in the north layer and then the south. Map these edges to the position of
// their head in the south layer.
var southPos=_.zipObject(southLayer,_.map(southLayer,function(v,i){return i})),southEntries=_.flatten(_.map(northLayer,function(v){return _.sortBy(_.map(g.outEdges(v),function(e){return{pos:southPos[e.w],weight:g.edge(e).weight}}),"pos")}),!0),firstIndex=1;while(firstIndex<southLayer.length)firstIndex<<=1;var treeSize=2*firstIndex-1;firstIndex-=1;var tree=_.map(Array(treeSize),function(){return 0}),cc=0;// Calculate the weighted crossings
_.forEach(southEntries.forEach(function(entry){var index=entry.pos+firstIndex;tree[index]+=entry.weight;var weightSum=0;while(0<index){if(index%2){weightSum+=tree[index+1]}index=index-1>>1;tree[index]+=entry.weight}cc+=entry.weight*weightSum}));return cc}},{"../lodash":10}],17:[function(require,module,exports){"use strict";var _=require("../lodash"),initOrder=require("./init-order"),crossCount=require("./cross-count"),sortSubgraph=require("./sort-subgraph"),buildLayerGraph=require("./build-layer-graph"),addSubgraphConstraints=require("./add-subgraph-constraints"),Graph=require("../graphlib").Graph,util=require("../util");module.exports=order;/*
                               * Applies heuristics to minimize edge crossings in the graph and sets the best
                               * order solution as an order attribute on each node.
                               *
                               * Pre-conditions:
                               *
                               *    1. Graph must be DAG
                               *    2. Graph nodes must be objects with a "rank" attribute
                               *    3. Graph edges must have the "weight" attribute
                               *
                               * Post-conditions:
                               *
                               *    1. Graph nodes will have an "order" attribute based on the results of the
                               *       algorithm.
                               */function order(g){var maxRank=util.maxRank(g),downLayerGraphs=buildLayerGraphs(g,_.range(1,maxRank+1),"inEdges"),upLayerGraphs=buildLayerGraphs(g,_.range(maxRank-1,-1,-1),"outEdges"),layering=initOrder(g);assignOrder(g,layering);for(var bestCC=Number.POSITIVE_INFINITY,best,i=0,lastBest=0;4>lastBest;++i,++lastBest){sweepLayerGraphs(i%2?downLayerGraphs:upLayerGraphs,2<=i%4);layering=util.buildLayerMatrix(g);var cc=crossCount(g,layering);if(cc<bestCC){lastBest=0;best=_.cloneDeep(layering);bestCC=cc}}assignOrder(g,best)}function buildLayerGraphs(g,ranks,relationship){return _.map(ranks,function(rank){return buildLayerGraph(g,rank,relationship)})}function sweepLayerGraphs(layerGraphs,biasRight){var cg=new Graph;_.forEach(layerGraphs,function(lg){var root=lg.graph().root,sorted=sortSubgraph(lg,root,cg,biasRight);_.forEach(sorted.vs,function(v,i){lg.node(v).order=i});addSubgraphConstraints(lg,cg,sorted.vs)})}function assignOrder(g,layering){_.forEach(layering,function(layer){_.forEach(layer,function(v,i){g.node(v).order=i})})}},{"../graphlib":7,"../lodash":10,"../util":29,"./add-subgraph-constraints":13,"./build-layer-graph":15,"./cross-count":16,"./init-order":18,"./sort-subgraph":20}],18:[function(require,module,exports){"use strict";var _=require("../lodash");module.exports=initOrder;/*
                                   * Assigns an initial order value for each node by performing a DFS search
                                   * starting from nodes in the first rank. Nodes are assigned an order in their
                                   * rank as they are first visited.
                                   *
                                   * This approach comes from Gansner, et al., "A Technique for Drawing Directed
                                   * Graphs."
                                   *
                                   * Returns a layering matrix with an array per layer and each layer sorted by
                                   * the order of its nodes.
                                   */function initOrder(g){var visited={},simpleNodes=_.filter(g.nodes(),function(v){return!g.children(v).length}),maxRank=_.max(_.map(simpleNodes,function(v){return g.node(v).rank})),layers=_.map(_.range(maxRank+1),function(){return[]});function dfs(v){if(_.has(visited,v))return;visited[v]=!0;var node=g.node(v);layers[node.rank].push(v);_.forEach(g.successors(v),dfs)}var orderedVs=_.sortBy(simpleNodes,function(v){return g.node(v).rank});_.forEach(orderedVs,dfs);return layers}},{"../lodash":10}],19:[function(require,module,exports){"use strict";var _=require("../lodash");module.exports=resolveConflicts;/*
                                          * Given a list of entries of the form {v, barycenter, weight} and a
                                          * constraint graph this function will resolve any conflicts between the
                                          * constraint graph and the barycenters for the entries. If the barycenters for
                                          * an entry would violate a constraint in the constraint graph then we coalesce
                                          * the nodes in the conflict into a new node that respects the contraint and
                                          * aggregates barycenter and weight information.
                                          *
                                          * This implementation is based on the description in Forster, "A Fast and
                                          * Simple Hueristic for Constrained Two-Level Crossing Reduction," thought it
                                          * differs in some specific details.
                                          *
                                          * Pre-conditions:
                                          *
                                          *    1. Each entry has the form {v, barycenter, weight}, or if the node has
                                          *       no barycenter, then {v}.
                                          *
                                          * Returns:
                                          *
                                          *    A new list of entries of the form {vs, i, barycenter, weight}. The list
                                          *    `vs` may either be a singleton or it may be an aggregation of nodes
                                          *    ordered such that they do not violate constraints from the constraint
                                          *    graph. The property `i` is the lowest original index of any of the
                                          *    elements in `vs`.
                                          */function resolveConflicts(entries,cg){var mappedEntries={};_.forEach(entries,function(entry,i){var tmp=mappedEntries[entry.v]={indegree:0,in:[],out:[],vs:[entry.v],i:i};if(!_.isUndefined(entry.barycenter)){tmp.barycenter=entry.barycenter;tmp.weight=entry.weight}});_.forEach(cg.edges(),function(e){var entryV=mappedEntries[e.v],entryW=mappedEntries[e.w];if(!_.isUndefined(entryV)&&!_.isUndefined(entryW)){entryW.indegree++;entryV.out.push(mappedEntries[e.w])}});var sourceSet=_.filter(mappedEntries,function(entry){return!entry.indegree});return doResolveConflicts(sourceSet)}function doResolveConflicts(sourceSet){var entries=[];function handleIn(vEntry){return function(uEntry){if(uEntry.merged){return}if(_.isUndefined(uEntry.barycenter)||_.isUndefined(vEntry.barycenter)||uEntry.barycenter>=vEntry.barycenter){mergeEntries(vEntry,uEntry)}}}function handleOut(vEntry){return function(wEntry){wEntry["in"].push(vEntry);if(0===--wEntry.indegree){sourceSet.push(wEntry)}}}while(sourceSet.length){var entry=sourceSet.pop();entries.push(entry);_.forEach(entry["in"].reverse(),handleIn(entry));_.forEach(entry.out,handleOut(entry))}return _.map(_.filter(entries,function(entry){return!entry.merged}),function(entry){return _.pick(entry,["vs","i","barycenter","weight"])})}function mergeEntries(target,source){var sum=0,weight=0;if(target.weight){sum+=target.barycenter*target.weight;weight+=target.weight}if(source.weight){sum+=source.barycenter*source.weight;weight+=source.weight}target.vs=source.vs.concat(target.vs);target.barycenter=sum/weight;target.weight=weight;target.i=Math.min(source.i,target.i);source.merged=!0}},{"../lodash":10}],20:[function(require,module,exports){var _=require("../lodash"),barycenter=require("./barycenter"),resolveConflicts=require("./resolve-conflicts"),sort=require("./sort");module.exports=sortSubgraph;function sortSubgraph(g,v,cg,biasRight){var movable=g.children(v),node=g.node(v),bl=node?node.borderLeft:void 0,br=node?node.borderRight:void 0,subgraphs={};if(bl){movable=_.filter(movable,function(w){return w!==bl&&w!==br})}var barycenters=barycenter(g,movable);_.forEach(barycenters,function(entry){if(g.children(entry.v).length){var subgraphResult=sortSubgraph(g,entry.v,cg,biasRight);subgraphs[entry.v]=subgraphResult;if(_.has(subgraphResult,"barycenter")){mergeBarycenters(entry,subgraphResult)}}});var entries=resolveConflicts(barycenters,cg);expandSubgraphs(entries,subgraphs);var result=sort(entries,biasRight);if(bl){result.vs=_.flatten([bl,result.vs,br],!0);if(g.predecessors(bl).length){var blPred=g.node(g.predecessors(bl)[0]),brPred=g.node(g.predecessors(br)[0]);if(!_.has(result,"barycenter")){result.barycenter=0;result.weight=0}result.barycenter=(result.barycenter*result.weight+blPred.order+brPred.order)/(result.weight+2);result.weight+=2}}return result}function expandSubgraphs(entries,subgraphs){_.forEach(entries,function(entry){entry.vs=_.flatten(entry.vs.map(function(v){if(subgraphs[v]){return subgraphs[v].vs}return v}),!0)})}function mergeBarycenters(target,other){if(!_.isUndefined(target.barycenter)){target.barycenter=(target.barycenter*target.weight+other.barycenter*other.weight)/(target.weight+other.weight);target.weight+=other.weight}else{target.barycenter=other.barycenter;target.weight=other.weight}}},{"../lodash":10,"./barycenter":14,"./resolve-conflicts":19,"./sort":21}],21:[function(require,module,exports){var _=require("../lodash"),util=require("../util");module.exports=sort;function sort(entries,biasRight){var parts=util.partition(entries,function(entry){return _.has(entry,"barycenter")}),sortable=parts.lhs,unsortable=_.sortBy(parts.rhs,function(entry){return-entry.i}),vs=[],sum=0,weight=0,vsIndex=0;sortable.sort(compareWithBias(!!biasRight));vsIndex=consumeUnsortable(vs,unsortable,vsIndex);_.forEach(sortable,function(entry){vsIndex+=entry.vs.length;vs.push(entry.vs);sum+=entry.barycenter*entry.weight;weight+=entry.weight;vsIndex=consumeUnsortable(vs,unsortable,vsIndex)});var result={vs:_.flatten(vs,!0)};if(weight){result.barycenter=sum/weight;result.weight=weight}return result}function consumeUnsortable(vs,unsortable,index){var last;while(unsortable.length&&(last=_.last(unsortable)).i<=index){unsortable.pop();vs.push(last.vs);index++}return index}function compareWithBias(bias){return function(entryV,entryW){if(entryV.barycenter<entryW.barycenter){return-1}else if(entryV.barycenter>entryW.barycenter){return 1}return!bias?entryV.i-entryW.i:entryW.i-entryV.i}}},{"../lodash":10,"../util":29}],22:[function(require,module,exports){var _=require("./lodash");module.exports=parentDummyChains;function parentDummyChains(g){var postorderNums=postorder(g);_.forEach(g.graph().dummyChains,function(v){var node=g.node(v),edgeObj=node.edgeObj,pathData=findPath(g,postorderNums,edgeObj.v,edgeObj.w),path=pathData.path,lca=pathData.lca,pathIdx=0,pathV=path[pathIdx],ascending=!0;while(v!==edgeObj.w){node=g.node(v);if(ascending){while((pathV=path[pathIdx])!==lca&&g.node(pathV).maxRank<node.rank){pathIdx++}if(pathV===lca){ascending=!1}}if(!ascending){while(pathIdx<path.length-1&&g.node(pathV=path[pathIdx+1]).minRank<=node.rank){pathIdx++}pathV=path[pathIdx]}g.setParent(v,pathV);v=g.successors(v)[0]}})}// Find a path from v to w through the lowest common ancestor (LCA). Return the
// full path and the LCA.
function findPath(g,postorderNums,v,w){var vPath=[],wPath=[],low=Math.min(postorderNums[v].low,postorderNums[w].low),lim=Math.max(postorderNums[v].lim,postorderNums[w].lim),parent,lca;// Traverse up from v to find the LCA
parent=v;do{parent=g.parent(parent);vPath.push(parent)}while(parent&&(postorderNums[parent].low>low||lim>postorderNums[parent].lim));lca=parent;// Traverse from w to LCA
parent=w;while((parent=g.parent(parent))!==lca){wPath.push(parent)}return{path:vPath.concat(wPath.reverse()),lca:lca}}function postorder(g){var result={},lim=0;function dfs(v){var low=lim;_.forEach(g.children(v),dfs);result[v]={low:low,lim:lim++}}_.forEach(g.children(),dfs);return result}},{"./lodash":10}],23:[function(require,module,exports){"use strict";var _=require("../lodash"),Graph=require("../graphlib").Graph,util=require("../util");/*
                                      * This module provides coordinate assignment based on Brandes and Köpf, "Fast
                                      * and Simple Horizontal Coordinate Assignment."
                                      */module.exports={positionX:positionX,findType1Conflicts:findType1Conflicts,findType2Conflicts:findType2Conflicts,addConflict:addConflict,hasConflict:hasConflict,verticalAlignment:verticalAlignment,horizontalCompaction:horizontalCompaction,alignCoordinates:alignCoordinates,findSmallestWidthAlignment:findSmallestWidthAlignment,balance:balance};/*
          * Marks all edges in the graph with a type-1 conflict with the "type1Conflict"
          * property. A type-1 conflict is one where a non-inner segment crosses an
          * inner segment. An inner segment is an edge with both incident nodes marked
          * with the "dummy" property.
          *
          * This algorithm scans layer by layer, starting with the second, for type-1
          * conflicts between the current layer and the previous layer. For each layer
          * it scans the nodes from left to right until it reaches one that is incident
          * on an inner segment. It then scans predecessors to determine if they have
          * edges that cross that inner segment. At the end a final scan is done for all
          * nodes on the current rank to see if they cross the last visited inner
          * segment.
          *
          * This algorithm (safely) assumes that a dummy node will only be incident on a
          * single node in the layers being scanned.
          */function findType1Conflicts(g,layering){var conflicts={};function visitLayer(prevLayer,layer){var// last visited node in the previous layer that is incident on an inner
// segment.
k0=0,// Tracks the last node in this layer scanned for crossings with a type-1
// segment.
scanPos=0,prevLayerLength=prevLayer.length,lastNode=_.last(layer);_.forEach(layer,function(v,i){var w=findOtherInnerSegmentNode(g,v),k1=w?g.node(w).order:prevLayerLength;if(w||v===lastNode){_.forEach(layer.slice(scanPos,i+1),function(scanNode){_.forEach(g.predecessors(scanNode),function(u){var uLabel=g.node(u),uPos=uLabel.order;if((uPos<k0||k1<uPos)&&!(uLabel.dummy&&g.node(scanNode).dummy)){addConflict(conflicts,u,scanNode)}})});scanPos=i+1;k0=k1}});return layer}_.reduce(layering,visitLayer);return conflicts}function findType2Conflicts(g,layering){var conflicts={};function scan(south,southPos,southEnd,prevNorthBorder,nextNorthBorder){var v;_.forEach(_.range(southPos,southEnd),function(i){v=south[i];if(g.node(v).dummy){_.forEach(g.predecessors(v),function(u){var uNode=g.node(u);if(uNode.dummy&&(uNode.order<prevNorthBorder||uNode.order>nextNorthBorder)){addConflict(conflicts,u,v)}})}})}function visitLayer(north,south){var prevNorthPos=-1,nextNorthPos,southPos=0;_.forEach(south,function(v,southLookahead){if("border"===g.node(v).dummy){var predecessors=g.predecessors(v);if(predecessors.length){nextNorthPos=g.node(predecessors[0]).order;scan(south,southPos,southLookahead,prevNorthPos,nextNorthPos);southPos=southLookahead;prevNorthPos=nextNorthPos}}scan(south,southPos,south.length,nextNorthPos,north.length)});return south}_.reduce(layering,visitLayer);return conflicts}function findOtherInnerSegmentNode(g,v){if(g.node(v).dummy){return _.find(g.predecessors(v),function(u){return g.node(u).dummy})}}function addConflict(conflicts,v,w){if(v>w){var tmp=v;v=w;w=tmp}var conflictsV=conflicts[v];if(!conflictsV){conflicts[v]=conflictsV={}}conflictsV[w]=!0}function hasConflict(conflicts,v,w){if(v>w){var tmp=v;v=w;w=tmp}return _.has(conflicts[v],w)}/*
         * Try to align nodes into vertical "blocks" where possible. This algorithm
         * attempts to align a node with one of its median neighbors. If the edge
         * connecting a neighbor is a type-1 conflict then we ignore that possibility.
         * If a previous node has already formed a block with a node after the node
         * we're trying to form a block with, we also ignore that possibility - our
         * blocks would be split in that scenario.
         */function verticalAlignment(g,layering,conflicts,neighborFn){var root={},align={},pos={};// We cache the position here based on the layering because the graph and
// layering may be out of sync. The layering matrix is manipulated to
// generate different extreme alignments.
_.forEach(layering,function(layer){_.forEach(layer,function(v,order){root[v]=v;align[v]=v;pos[v]=order})});_.forEach(layering,function(layer){var prevIdx=-1;_.forEach(layer,function(v){var ws=neighborFn(v);if(ws.length){ws=_.sortBy(ws,function(w){return pos[w]});for(var mp=(ws.length-1)/2,i=Math.floor(mp),il=Math.ceil(mp),w;i<=il;++i){w=ws[i];if(align[v]===v&&prevIdx<pos[w]&&!hasConflict(conflicts,v,w)){align[w]=v;align[v]=root[v]=root[w];prevIdx=pos[w]}}}})});return{root:root,align:align}}function horizontalCompaction(g,layering,root,align,reverseSep){// This portion of the algorithm differs from BK due to a number of problems.
// Instead of their algorithm we construct a new block graph and do two
// sweeps. The first sweep places blocks with the smallest possible
// coordinates. The second sweep removes unused space by moving blocks to the
// greatest coordinates without violating separation.
var xs={},blockG=buildBlockGraph(g,layering,root,reverseSep),borderType=reverseSep?"borderLeft":"borderRight";function iterate(setXsFunc,nextNodesFunc){var stack=blockG.nodes(),elem=stack.pop(),visited={};while(elem){if(visited[elem]){setXsFunc(elem)}else{visited[elem]=!0;stack.push(elem);stack=stack.concat(nextNodesFunc(elem))}elem=stack.pop()}}// First pass, assign smallest coordinates
function pass1(elem){xs[elem]=blockG.inEdges(elem).reduce(function(acc,e){return Math.max(acc,xs[e.v]+blockG.edge(e))},0)}// Second pass, assign greatest coordinates
function pass2(elem){var min=blockG.outEdges(elem).reduce(function(acc,e){return Math.min(acc,xs[e.w]-blockG.edge(e))},Number.POSITIVE_INFINITY),node=g.node(elem);if(min!==Number.POSITIVE_INFINITY&&node.borderType!==borderType){xs[elem]=Math.max(xs[elem],min)}}iterate(pass1,blockG.predecessors.bind(blockG));iterate(pass2,blockG.successors.bind(blockG));// Assign x coordinates to all nodes
_.forEach(align,function(v){xs[v]=xs[root[v]]});return xs}function buildBlockGraph(g,layering,root,reverseSep){var blockGraph=new Graph,graphLabel=g.graph(),sepFn=sep(graphLabel.nodesep,graphLabel.edgesep,reverseSep);_.forEach(layering,function(layer){var u;_.forEach(layer,function(v){var vRoot=root[v];blockGraph.setNode(vRoot);if(u){var uRoot=root[u],prevMax=blockGraph.edge(uRoot,vRoot);blockGraph.setEdge(uRoot,vRoot,Math.max(sepFn(g,v,u),prevMax||0))}u=v})});return blockGraph}/*
         * Returns the alignment that has the smallest width of the given alignments.
         */function findSmallestWidthAlignment(g,xss){return _.minBy(_.values(xss),function(xs){var max=Number.NEGATIVE_INFINITY,min=Number.POSITIVE_INFINITY;_.forIn(xs,function(x,v){var halfWidth=width(g,v)/2;max=Math.max(x+halfWidth,max);min=Math.min(x-halfWidth,min)});return max-min})}/*
         * Align the coordinates of each of the layout alignments such that
         * left-biased alignments have their minimum coordinate at the same point as
         * the minimum coordinate of the smallest width alignment and right-biased
         * alignments have their maximum coordinate at the same point as the maximum
         * coordinate of the smallest width alignment.
         */function alignCoordinates(xss,alignTo){var alignToVals=_.values(alignTo),alignToMin=_.min(alignToVals),alignToMax=_.max(alignToVals);_.forEach(["u","d"],function(vert){_.forEach(["l","r"],function(horiz){var alignment=vert+horiz,xs=xss[alignment],delta;if(xs===alignTo)return;var xsVals=_.values(xs);delta="l"===horiz?alignToMin-_.min(xsVals):alignToMax-_.max(xsVals);if(delta){xss[alignment]=_.mapValues(xs,function(x){return x+delta})}})})}function balance(xss,align){return _.mapValues(xss.ul,function(ignore,v){if(align){return xss[align.toLowerCase()][v]}else{var xs=_.sortBy(_.map(xss,v));return(xs[1]+xs[2])/2}})}function positionX(g){var layering=util.buildLayerMatrix(g),conflicts=_.merge(findType1Conflicts(g,layering),findType2Conflicts(g,layering)),xss={},adjustedLayering;_.forEach(["u","d"],function(vert){adjustedLayering="u"===vert?layering:_.values(layering).reverse();_.forEach(["l","r"],function(horiz){if("r"===horiz){adjustedLayering=_.map(adjustedLayering,function(inner){return _.values(inner).reverse()})}var neighborFn=("u"===vert?g.predecessors:g.successors).bind(g),align=verticalAlignment(g,adjustedLayering,conflicts,neighborFn),xs=horizontalCompaction(g,adjustedLayering,align.root,align.align,"r"===horiz);if("r"===horiz){xs=_.mapValues(xs,function(x){return-x})}xss[vert+horiz]=xs})});var smallestWidth=findSmallestWidthAlignment(g,xss);alignCoordinates(xss,smallestWidth);return balance(xss,g.graph().align)}function sep(nodeSep,edgeSep,reverseSep){return function(g,v,w){var vLabel=g.node(v),wLabel=g.node(w),sum=0,delta;sum+=vLabel.width/2;if(_.has(vLabel,"labelpos")){switch(vLabel.labelpos.toLowerCase()){case"l":delta=-vLabel.width/2;break;case"r":delta=vLabel.width/2;break;}}if(delta){sum+=reverseSep?delta:-delta}delta=0;sum+=(vLabel.dummy?edgeSep:nodeSep)/2;sum+=(wLabel.dummy?edgeSep:nodeSep)/2;sum+=wLabel.width/2;if(_.has(wLabel,"labelpos")){switch(wLabel.labelpos.toLowerCase()){case"l":delta=wLabel.width/2;break;case"r":delta=-wLabel.width/2;break;}}if(delta){sum+=reverseSep?delta:-delta}delta=0;return sum}}function width(g,v){return g.node(v).width}},{"../graphlib":7,"../lodash":10,"../util":29}],24:[function(require,module,exports){"use strict";var _=require("../lodash"),util=require("../util"),positionX=require("./bk").positionX;module.exports=position;function position(g){g=util.asNonCompoundGraph(g);positionY(g);_.forEach(positionX(g),function(x,v){g.node(v).x=x})}function positionY(g){var layering=util.buildLayerMatrix(g),rankSep=g.graph().ranksep,prevY=0;_.forEach(layering,function(layer){var maxHeight=_.max(_.map(layer,function(v){return g.node(v).height}));_.forEach(layer,function(v){g.node(v).y=prevY+maxHeight/2});prevY+=maxHeight+rankSep})}},{"../lodash":10,"../util":29,"./bk":23}],25:[function(require,module,exports){"use strict";var _=require("../lodash"),Graph=require("../graphlib").Graph,slack=require("./util").slack;module.exports=feasibleTree;/*
                                      * Constructs a spanning tree with tight edges and adjusted the input node's
                                      * ranks to achieve this. A tight edge is one that is has a length that matches
                                      * its "minlen" attribute.
                                      *
                                      * The basic structure for this function is derived from Gansner, et al., "A
                                      * Technique for Drawing Directed Graphs."
                                      *
                                      * Pre-conditions:
                                      *
                                      *    1. Graph must be a DAG.
                                      *    2. Graph must be connected.
                                      *    3. Graph must have at least one node.
                                      *    5. Graph nodes must have been previously assigned a "rank" property that
                                      *       respects the "minlen" property of incident edges.
                                      *    6. Graph edges must have a "minlen" property.
                                      *
                                      * Post-conditions:
                                      *
                                      *    - Graph nodes will have their rank adjusted to ensure that all edges are
                                      *      tight.
                                      *
                                      * Returns a tree (undirected graph) that is constructed using only "tight"
                                      * edges.
                                      */function feasibleTree(g){var t=new Graph({directed:!1}),start=g.nodes()[0],size=g.nodeCount();// Choose arbitrary node from which to start our tree
t.setNode(start,{});var edge,delta;while(tightTree(t,g)<size){edge=findMinSlackEdge(t,g);delta=t.hasNode(edge.v)?slack(g,edge):-slack(g,edge);shiftRanks(t,g,delta)}return t}/*
         * Finds a maximal tree of tight edges and returns the number of nodes in the
         * tree.
         */function tightTree(t,g){function dfs(v){_.forEach(g.nodeEdges(v),function(e){var edgeV=e.v,w=v===edgeV?e.w:edgeV;if(!t.hasNode(w)&&!slack(g,e)){t.setNode(w,{});t.setEdge(v,w,{});dfs(w)}})}_.forEach(t.nodes(),dfs);return t.nodeCount()}/*
         * Finds the edge with the smallest slack that is incident on tree and returns
         * it.
         */function findMinSlackEdge(t,g){return _.minBy(g.edges(),function(e){if(t.hasNode(e.v)!==t.hasNode(e.w)){return slack(g,e)}})}function shiftRanks(t,g,delta){_.forEach(t.nodes(),function(v){g.node(v).rank+=delta})}},{"../graphlib":7,"../lodash":10,"./util":28}],26:[function(require,module,exports){"use strict";var rankUtil=require("./util"),longestPath=rankUtil.longestPath,feasibleTree=require("./feasible-tree"),networkSimplex=require("./network-simplex");module.exports=rank;/*
                              * Assigns a rank to each node in the input graph that respects the "minlen"
                              * constraint specified on edges between nodes.
                              *
                              * This basic structure is derived from Gansner, et al., "A Technique for
                              * Drawing Directed Graphs."
                              *
                              * Pre-conditions:
                              *
                              *    1. Graph must be a connected DAG
                              *    2. Graph nodes must be objects
                              *    3. Graph edges must have "weight" and "minlen" attributes
                              *
                              * Post-conditions:
                              *
                              *    1. Graph nodes will have a "rank" attribute based on the results of the
                              *       algorithm. Ranks can start at any index (including negative), we'll
                              *       fix them up later.
                              */function rank(g){switch(g.graph().ranker){case"network-simplex":networkSimplexRanker(g);break;case"tight-tree":tightTreeRanker(g);break;case"longest-path":longestPathRanker(g);break;default:networkSimplexRanker(g);}}// A fast and simple ranker, but results are far from optimal.
var longestPathRanker=longestPath;function tightTreeRanker(g){longestPath(g);feasibleTree(g)}function networkSimplexRanker(g){networkSimplex(g)}},{"./feasible-tree":25,"./network-simplex":27,"./util":28}],27:[function(require,module,exports){"use strict";var _=require("../lodash"),feasibleTree=require("./feasible-tree"),slack=require("./util").slack,initRank=require("./util").longestPath,preorder=require("../graphlib").alg.preorder,postorder=require("../graphlib").alg.postorder,simplify=require("../util").simplify;module.exports=networkSimplex;// Expose some internals for testing purposes
networkSimplex.initLowLimValues=initLowLimValues;networkSimplex.initCutValues=initCutValues;networkSimplex.calcCutValue=calcCutValue;networkSimplex.leaveEdge=leaveEdge;networkSimplex.enterEdge=enterEdge;networkSimplex.exchangeEdges=exchangeEdges;/*
                                                     * The network simplex algorithm assigns ranks to each node in the input graph
                                                     * and iteratively improves the ranking to reduce the length of edges.
                                                     *
                                                     * Preconditions:
                                                     *
                                                     *    1. The input graph must be a DAG.
                                                     *    2. All nodes in the graph must have an object value.
                                                     *    3. All edges in the graph must have "minlen" and "weight" attributes.
                                                     *
                                                     * Postconditions:
                                                     *
                                                     *    1. All nodes in the graph will have an assigned "rank" attribute that has
                                                     *       been optimized by the network simplex algorithm. Ranks start at 0.
                                                     *
                                                     *
                                                     * A rough sketch of the algorithm is as follows:
                                                     *
                                                     *    1. Assign initial ranks to each node. We use the longest path algorithm,
                                                     *       which assigns ranks to the lowest position possible. In general this
                                                     *       leads to very wide bottom ranks and unnecessarily long edges.
                                                     *    2. Construct a feasible tight tree. A tight tree is one such that all
                                                     *       edges in the tree have no slack (difference between length of edge
                                                     *       and minlen for the edge). This by itself greatly improves the assigned
                                                     *       rankings by shorting edges.
                                                     *    3. Iteratively find edges that have negative cut values. Generally a
                                                     *       negative cut value indicates that the edge could be removed and a new
                                                     *       tree edge could be added to produce a more compact graph.
                                                     *
                                                     * Much of the algorithms here are derived from Gansner, et al., "A Technique
                                                     * for Drawing Directed Graphs." The structure of the file roughly follows the
                                                     * structure of the overall algorithm.
                                                     */function networkSimplex(g){g=simplify(g);initRank(g);var t=feasibleTree(g);initLowLimValues(t);initCutValues(t,g);var e,f;while(e=leaveEdge(t)){f=enterEdge(t,g,e);exchangeEdges(t,g,e,f)}}/*
         * Initializes cut values for all edges in the tree.
         */function initCutValues(t,g){var vs=postorder(t,t.nodes());vs=vs.slice(0,vs.length-1);_.forEach(vs,function(v){assignCutValue(t,g,v)})}function assignCutValue(t,g,child){var childLab=t.node(child),parent=childLab.parent;t.edge(child,parent).cutvalue=calcCutValue(t,g,child)}/*
         * Given the tight tree, its graph, and a child in the graph calculate and
         * return the cut value for the edge between the child and its parent.
         */function calcCutValue(t,g,child){var childLab=t.node(child),parent=childLab.parent,// True if the child is on the tail end of the edge in the directed graph
childIsTail=!0,// The graph's view of the tree edge we're inspecting
graphEdge=g.edge(child,parent),// The accumulated cut value for the edge between this node and its parent
cutValue=0;if(!graphEdge){childIsTail=!1;graphEdge=g.edge(parent,child)}cutValue=graphEdge.weight;_.forEach(g.nodeEdges(child),function(e){var isOutEdge=e.v===child,other=isOutEdge?e.w:e.v;if(other!==parent){var pointsToHead=isOutEdge===childIsTail,otherWeight=g.edge(e).weight;cutValue+=pointsToHead?otherWeight:-otherWeight;if(isTreeEdge(t,child,other)){var otherCutValue=t.edge(child,other).cutvalue;cutValue+=pointsToHead?-otherCutValue:otherCutValue}}});return cutValue}function initLowLimValues(tree,root){if(2>arguments.length){root=tree.nodes()[0]}dfsAssignLowLim(tree,{},1,root)}function dfsAssignLowLim(tree,visited,nextLim,v,parent){var low=nextLim,label=tree.node(v);visited[v]=!0;_.forEach(tree.neighbors(v),function(w){if(!_.has(visited,w)){nextLim=dfsAssignLowLim(tree,visited,nextLim,w,v)}});label.low=low;label.lim=nextLim++;if(parent){label.parent=parent}else{// TODO should be able to remove this when we incrementally update low lim
delete label.parent}return nextLim}function leaveEdge(tree){return _.find(tree.edges(),function(e){return 0>tree.edge(e).cutvalue})}function enterEdge(t,g,edge){var v=edge.v,w=edge.w;// For the rest of this function we assume that v is the tail and w is the
// head, so if we don't have this edge in the graph we should flip it to
// match the correct orientation.
if(!g.hasEdge(v,w)){v=edge.w;w=edge.v}var vLabel=t.node(v),wLabel=t.node(w),tailLabel=vLabel,flip=!1;// If the root is in the tail of the edge then we need to flip the logic that
// checks for the head and tail nodes in the candidates function below.
if(vLabel.lim>wLabel.lim){tailLabel=wLabel;flip=!0}var candidates=_.filter(g.edges(),function(edge){return flip===isDescendant(t,t.node(edge.v),tailLabel)&&flip!==isDescendant(t,t.node(edge.w),tailLabel)});return _.minBy(candidates,function(edge){return slack(g,edge)})}function exchangeEdges(t,g,e,f){var v=e.v,w=e.w;t.removeEdge(v,w);t.setEdge(f.v,f.w,{});initLowLimValues(t);initCutValues(t,g);updateRanks(t,g)}function updateRanks(t,g){var root=_.find(t.nodes(),function(v){return!g.node(v).parent}),vs=preorder(t,root);vs=vs.slice(1);_.forEach(vs,function(v){var parent=t.node(v).parent,edge=g.edge(v,parent),flipped=!1;if(!edge){edge=g.edge(parent,v);flipped=!0}g.node(v).rank=g.node(parent).rank+(flipped?edge.minlen:-edge.minlen)})}/*
         * Returns true if the edge is in the tree.
         */function isTreeEdge(tree,u,v){return tree.hasEdge(u,v)}/*
         * Returns true if the specified node is descendant of the root node per the
         * assigned low and lim attributes in the tree.
         */function isDescendant(tree,vLabel,rootLabel){return rootLabel.low<=vLabel.lim&&vLabel.lim<=rootLabel.lim}},{"../graphlib":7,"../lodash":10,"../util":29,"./feasible-tree":25,"./util":28}],28:[function(require,module,exports){"use strict";var _=require("../lodash");module.exports={longestPath:longestPath,slack:slack};/*
          * Initializes ranks for the input graph using the longest path algorithm. This
          * algorithm scales well and is fast in practice, it yields rather poor
          * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom
          * ranks wide and leaving edges longer than necessary. However, due to its
          * speed, this algorithm is good for getting an initial ranking that can be fed
          * into other algorithms.
          *
          * This algorithm does not normalize layers because it will be used by other
          * algorithms in most cases. If using this algorithm directly, be sure to
          * run normalize at the end.
          *
          * Pre-conditions:
          *
          *    1. Input graph is a DAG.
          *    2. Input graph node labels can be assigned properties.
          *
          * Post-conditions:
          *
          *    1. Each node will be assign an (unnormalized) "rank" property.
          */function longestPath(g){var visited={};function dfs(v){var label=g.node(v);if(_.has(visited,v)){return label.rank}visited[v]=!0;var rank=_.min(_.map(g.outEdges(v),function(e){return dfs(e.w)-g.edge(e).minlen}));if(rank===Number.POSITIVE_INFINITY||// return value of _.map([]) for Lodash 3
rank===void 0||// return value of _.map([]) for Lodash 4
null===rank){// return value of _.map([null])
rank=0}return label.rank=rank}_.forEach(g.sources(),dfs)}/*
         * Returns the amount of slack for the given edge. The slack is defined as the
         * difference between the length of the edge and its minimum length.
         */function slack(g,e){return g.node(e.w).rank-g.node(e.v).rank-g.edge(e).minlen}},{"../lodash":10}],29:[function(require,module,exports){"use strict";var _=require("./lodash"),Graph=require("./graphlib").Graph;module.exports={addDummyNode:addDummyNode,simplify:simplify,asNonCompoundGraph:asNonCompoundGraph,successorWeights:successorWeights,predecessorWeights:predecessorWeights,intersectRect:intersectRect,buildLayerMatrix:buildLayerMatrix,normalizeRanks:normalizeRanks,removeEmptyRanks:removeEmptyRanks,addBorderNode:addBorderNode,maxRank:maxRank,partition:partition,time:time,notime:notime};/*
          * Adds a dummy node to the graph and return v.
          */function addDummyNode(g,type,attrs,name){var v;do{v=_.uniqueId(name)}while(g.hasNode(v));attrs.dummy=type;g.setNode(v,attrs);return v}/*
         * Returns a new graph with only simple edges. Handles aggregation of data
         * associated with multi-edges.
         */function simplify(g){var simplified=new Graph().setGraph(g.graph());_.forEach(g.nodes(),function(v){simplified.setNode(v,g.node(v))});_.forEach(g.edges(),function(e){var simpleLabel=simplified.edge(e.v,e.w)||{weight:0,minlen:1},label=g.edge(e);simplified.setEdge(e.v,e.w,{weight:simpleLabel.weight+label.weight,minlen:Math.max(simpleLabel.minlen,label.minlen)})});return simplified}function asNonCompoundGraph(g){var simplified=new Graph({multigraph:g.isMultigraph()}).setGraph(g.graph());_.forEach(g.nodes(),function(v){if(!g.children(v).length){simplified.setNode(v,g.node(v))}});_.forEach(g.edges(),function(e){simplified.setEdge(e,g.edge(e))});return simplified}function successorWeights(g){var weightMap=_.map(g.nodes(),function(v){var sucs={};_.forEach(g.outEdges(v),function(e){sucs[e.w]=(sucs[e.w]||0)+g.edge(e).weight});return sucs});return _.zipObject(g.nodes(),weightMap)}function predecessorWeights(g){var weightMap=_.map(g.nodes(),function(v){var preds={};_.forEach(g.inEdges(v),function(e){preds[e.v]=(preds[e.v]||0)+g.edge(e).weight});return preds});return _.zipObject(g.nodes(),weightMap)}/*
         * Finds where a line starting at point ({x, y}) would intersect a rectangle
         * ({x, y, width, height}) if it were pointing at the rectangle's center.
         */function intersectRect(rect,point){var x=rect.x,y=rect.y,dx=point.x-x,dy=point.y-y,w=rect.width/2,h=rect.height/2;if(!dx&&!dy){throw new Error("Not possible to find intersection inside of the rectangle")}var sx,sy;if(Math.abs(dy)*w>Math.abs(dx)*h){// Intersection is top or bottom of rect.
if(0>dy){h=-h}sx=h*dx/dy;sy=h}else{// Intersection is left or right of rect.
if(0>dx){w=-w}sx=w;sy=w*dy/dx}return{x:x+sx,y:y+sy}}/*
         * Given a DAG with each node assigned "rank" and "order" properties, this
         * function will produce a matrix with the ids of each node.
         */function buildLayerMatrix(g){var layering=_.map(_.range(maxRank(g)+1),function(){return[]});_.forEach(g.nodes(),function(v){var node=g.node(v),rank=node.rank;if(!_.isUndefined(rank)){layering[rank][node.order]=v}});return layering}/*
         * Adjusts the ranks for all nodes in the graph such that all nodes v have
         * rank(v) >= 0 and at least one node w has rank(w) = 0.
         */function normalizeRanks(g){var min=_.min(_.map(g.nodes(),function(v){return g.node(v).rank}));_.forEach(g.nodes(),function(v){var node=g.node(v);if(_.has(node,"rank")){node.rank-=min}})}function removeEmptyRanks(g){// Ranks may not start at 0, so we need to offset them
var offset=_.min(_.map(g.nodes(),function(v){return g.node(v).rank})),layers=[];_.forEach(g.nodes(),function(v){var rank=g.node(v).rank-offset;if(!layers[rank]){layers[rank]=[]}layers[rank].push(v)});var delta=0,nodeRankFactor=g.graph().nodeRankFactor;_.forEach(layers,function(vs,i){if(_.isUndefined(vs)&&0!==i%nodeRankFactor){--delta}else if(delta){_.forEach(vs,function(v){g.node(v).rank+=delta})}})}function addBorderNode(g,prefix,rank,order){var node={width:0,height:0};if(4<=arguments.length){node.rank=rank;node.order=order}return addDummyNode(g,"border",node,prefix)}function maxRank(g){return _.max(_.map(g.nodes(),function(v){var rank=g.node(v).rank;if(!_.isUndefined(rank)){return rank}}))}/*
         * Partition a collection into two groups: `lhs` and `rhs`. If the supplied
         * function returns true for an entry it goes into `lhs`. Otherwise it goes
         * into `rhs.
         */function partition(collection,fn){var result={lhs:[],rhs:[]};_.forEach(collection,function(value){if(fn(value)){result.lhs.push(value)}else{result.rhs.push(value)}});return result}/*
         * Returns a new function that wraps `fn` with a timer. The wrapper logs the
         * time it takes to execute the function.
         */function time(name,fn){var start=_.now();try{return fn()}finally{console.log(name+" time: "+(_.now()-start)+"ms")}}function notime(name,fn){return fn()}},{"./graphlib":7,"./lodash":10}],30:[function(require,module,exports){module.exports="0.8.4"},{}],31:[function(require,module,exports){/**
       * Copyright (c) 2014, Chris Pettitt
       * All rights reserved.
       *
       * Redistribution and use in source and binary forms, with or without
       * modification, are permitted provided that the following conditions are met:
       *
       * 1. Redistributions of source code must retain the above copyright notice, this
       * list of conditions and the following disclaimer.
       *
       * 2. Redistributions in binary form must reproduce the above copyright notice,
       * this list of conditions and the following disclaimer in the documentation
       * and/or other materials provided with the distribution.
       *
       * 3. Neither the name of the copyright holder nor the names of its contributors
       * may be used to endorse or promote products derived from this software without
       * specific prior written permission.
       *
       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
       * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
       * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
       * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
       * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
       * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
       * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
       * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
       * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
       * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
       */var lib=require("./lib");module.exports={Graph:lib.Graph,json:require("./lib/json"),alg:require("./lib/alg"),version:lib.version}},{"./lib":47,"./lib/alg":38,"./lib/json":48}],32:[function(require,module,exports){var _=require("../lodash");module.exports=components;function components(g){var visited={},cmpts=[],cmpt;function dfs(v){if(_.has(visited,v))return;visited[v]=!0;cmpt.push(v);_.each(g.successors(v),dfs);_.each(g.predecessors(v),dfs)}_.each(g.nodes(),function(v){cmpt=[];dfs(v);if(cmpt.length){cmpts.push(cmpt)}});return cmpts}},{"../lodash":49}],33:[function(require,module,exports){var _=require("../lodash");module.exports=dfs;/*
                             * A helper that preforms a pre- or post-order traversal on the input graph
                             * and returns the nodes in the order they were visited. If the graph is
                             * undirected then this algorithm will navigate using neighbors. If the graph
                             * is directed then this algorithm will navigate using successors.
                             *
                             * Order must be one of "pre" or "post".
                             */function dfs(g,vs,order){if(!_.isArray(vs)){vs=[vs]}var navigation=(g.isDirected()?g.successors:g.neighbors).bind(g),acc=[],visited={};_.each(vs,function(v){if(!g.hasNode(v)){throw new Error("Graph does not have node: "+v)}doDfs(g,v,"post"===order,visited,navigation,acc)});return acc}function doDfs(g,v,postorder,visited,navigation,acc){if(!_.has(visited,v)){visited[v]=!0;if(!postorder){acc.push(v)}_.each(navigation(v),function(w){doDfs(g,w,postorder,visited,navigation,acc)});if(postorder){acc.push(v)}}}},{"../lodash":49}],34:[function(require,module,exports){var dijkstra=require("./dijkstra"),_=require("../lodash");module.exports=dijkstraAll;function dijkstraAll(g,weightFunc,edgeFunc){return _.transform(g.nodes(),function(acc,v){acc[v]=dijkstra(g,v,weightFunc,edgeFunc)},{})}},{"../lodash":49,"./dijkstra":35}],35:[function(require,module,exports){var _=require("../lodash"),PriorityQueue=require("../data/priority-queue");module.exports=dijkstra;var DEFAULT_WEIGHT_FUNC=_.constant(1);function dijkstra(g,source,weightFn,edgeFn){return runDijkstra(g,source+"",weightFn||DEFAULT_WEIGHT_FUNC,edgeFn||function(v){return g.outEdges(v)})}function runDijkstra(g,source,weightFn,edgeFn){var results={},pq=new PriorityQueue,v,vEntry,updateNeighbors=function(edge){var w=edge.v!==v?edge.v:edge.w,wEntry=results[w],weight=weightFn(edge),distance=vEntry.distance+weight;if(0>weight){throw new Error("dijkstra does not allow negative edge weights. "+"Bad edge: "+edge+" Weight: "+weight)}if(distance<wEntry.distance){wEntry.distance=distance;wEntry.predecessor=v;pq.decrease(w,distance)}};g.nodes().forEach(function(v){var distance=v===source?0:Number.POSITIVE_INFINITY;results[v]={distance:distance};pq.add(v,distance)});while(0<pq.size()){v=pq.removeMin();vEntry=results[v];if(vEntry.distance===Number.POSITIVE_INFINITY){break}edgeFn(v).forEach(updateNeighbors)}return results}},{"../data/priority-queue":45,"../lodash":49}],36:[function(require,module,exports){var _=require("../lodash"),tarjan=require("./tarjan");module.exports=findCycles;function findCycles(g){return _.filter(tarjan(g),function(cmpt){return 1<cmpt.length||1===cmpt.length&&g.hasEdge(cmpt[0],cmpt[0])})}},{"../lodash":49,"./tarjan":43}],37:[function(require,module,exports){var _=require("../lodash");module.exports=floydWarshall;var DEFAULT_WEIGHT_FUNC=_.constant(1);function floydWarshall(g,weightFn,edgeFn){return runFloydWarshall(g,weightFn||DEFAULT_WEIGHT_FUNC,edgeFn||function(v){return g.outEdges(v)})}function runFloydWarshall(g,weightFn,edgeFn){var results={},nodes=g.nodes();nodes.forEach(function(v){results[v]={};results[v][v]={distance:0};nodes.forEach(function(w){if(v!==w){results[v][w]={distance:Number.POSITIVE_INFINITY}}});edgeFn(v).forEach(function(edge){var w=edge.v===v?edge.w:edge.v,d=weightFn(edge);results[v][w]={distance:d,predecessor:v}})});nodes.forEach(function(k){var rowK=results[k];nodes.forEach(function(i){var rowI=results[i];nodes.forEach(function(j){var ik=rowI[k],kj=rowK[j],ij=rowI[j],altDistance=ik.distance+kj.distance;if(altDistance<ij.distance){ij.distance=altDistance;ij.predecessor=kj.predecessor}})})});return results}},{"../lodash":49}],38:[function(require,module,exports){module.exports={components:require("./components"),dijkstra:require("./dijkstra"),dijkstraAll:require("./dijkstra-all"),findCycles:require("./find-cycles"),floydWarshall:require("./floyd-warshall"),isAcyclic:require("./is-acyclic"),postorder:require("./postorder"),preorder:require("./preorder"),prim:require("./prim"),tarjan:require("./tarjan"),topsort:require("./topsort")}},{"./components":32,"./dijkstra":35,"./dijkstra-all":34,"./find-cycles":36,"./floyd-warshall":37,"./is-acyclic":39,"./postorder":40,"./preorder":41,"./prim":42,"./tarjan":43,"./topsort":44}],39:[function(require,module,exports){var topsort=require("./topsort");module.exports=isAcyclic;function isAcyclic(g){try{topsort(g)}catch(e){if(e instanceof topsort.CycleException){return!1}throw e}return!0}},{"./topsort":44}],40:[function(require,module,exports){var dfs=require("./dfs");module.exports=postorder;function postorder(g,vs){return dfs(g,vs,"post")}},{"./dfs":33}],41:[function(require,module,exports){var dfs=require("./dfs");module.exports=preorder;function preorder(g,vs){return dfs(g,vs,"pre")}},{"./dfs":33}],42:[function(require,module,exports){var _=require("../lodash"),Graph=require("../graph"),PriorityQueue=require("../data/priority-queue");module.exports=prim;function prim(g,weightFunc){var result=new Graph,parents={},pq=new PriorityQueue,v;function updateNeighbors(edge){var w=edge.v===v?edge.w:edge.v,pri=pq.priority(w);if(pri!==void 0){var edgeWeight=weightFunc(edge);if(edgeWeight<pri){parents[w]=v;pq.decrease(w,edgeWeight)}}}if(0===g.nodeCount()){return result}_.each(g.nodes(),function(v){pq.add(v,Number.POSITIVE_INFINITY);result.setNode(v)});// Start from an arbitrary node
pq.decrease(g.nodes()[0],0);var init=!1;while(0<pq.size()){v=pq.removeMin();if(_.has(parents,v)){result.setEdge(v,parents[v])}else if(init){throw new Error("Input graph is not connected: "+g)}else{init=!0}g.nodeEdges(v).forEach(updateNeighbors)}return result}},{"../data/priority-queue":45,"../graph":46,"../lodash":49}],43:[function(require,module,exports){var _=require("../lodash");module.exports=tarjan;function tarjan(g){var index=0,stack=[],visited={},// node id -> { onStack, lowlink, index }
results=[];function dfs(v){var entry=visited[v]={onStack:!0,lowlink:index,index:index++};stack.push(v);g.successors(v).forEach(function(w){if(!_.has(visited,w)){dfs(w);entry.lowlink=Math.min(entry.lowlink,visited[w].lowlink)}else if(visited[w].onStack){entry.lowlink=Math.min(entry.lowlink,visited[w].index)}});if(entry.lowlink===entry.index){var cmpt=[],w;do{w=stack.pop();visited[w].onStack=!1;cmpt.push(w)}while(v!==w);results.push(cmpt)}}g.nodes().forEach(function(v){if(!_.has(visited,v)){dfs(v)}});return results}},{"../lodash":49}],44:[function(require,module,exports){var _=require("../lodash");module.exports=topsort;topsort.CycleException=CycleException;function topsort(g){var visited={},stack={},results=[];function visit(node){if(_.has(stack,node)){throw new CycleException}if(!_.has(visited,node)){stack[node]=!0;visited[node]=!0;_.each(g.predecessors(node),visit);delete stack[node];results.push(node)}}_.each(g.sinks(),visit);if(_.size(visited)!==g.nodeCount()){throw new CycleException}return results}function CycleException(){}CycleException.prototype=new Error;// must be an instance of Error to pass testing
},{"../lodash":49}],45:[function(require,module,exports){var _=require("../lodash");module.exports=PriorityQueue;/**
                                       * A min-priority queue data structure. This algorithm is derived from Cormen,
                                       * et al., "Introduction to Algorithms". The basic idea of a min-priority
                                       * queue is that you can efficiently (in O(1) time) get the smallest key in
                                       * the queue. Adding and removing elements takes O(log n) time. A key can
                                       * have its priority decreased in O(log n) time.
                                       */function PriorityQueue(){this._arr=[];this._keyIndices={}}/**
         * Returns the number of elements in the queue. Takes `O(1)` time.
         */PriorityQueue.prototype.size=function(){return this._arr.length};/**
          * Returns the keys that are in the queue. Takes `O(n)` time.
          */PriorityQueue.prototype.keys=function(){return this._arr.map(function(x){return x.key})};/**
          * Returns `true` if **key** is in the queue and `false` if not.
          */PriorityQueue.prototype.has=function(key){return _.has(this._keyIndices,key)};/**
          * Returns the priority for **key**. If **key** is not present in the queue
          * then this function returns `undefined`. Takes `O(1)` time.
          *
          * @param {Object} key
          */PriorityQueue.prototype.priority=function(key){var index=this._keyIndices[key];if(index!==void 0){return this._arr[index].priority}};/**
          * Returns the key for the minimum element in this queue. If the queue is
          * empty this function throws an Error. Takes `O(1)` time.
          */PriorityQueue.prototype.min=function(){if(0===this.size()){throw new Error("Queue underflow")}return this._arr[0].key};/**
          * Inserts a new key into the priority queue. If the key already exists in
          * the queue this function returns `false`; otherwise it will return `true`.
          * Takes `O(n)` time.
          *
          * @param {Object} key the key to add
          * @param {Number} priority the initial priority for the key
          */PriorityQueue.prototype.add=function(key,priority){var keyIndices=this._keyIndices;key=key+"";if(!_.has(keyIndices,key)){var arr=this._arr,index=arr.length;keyIndices[key]=index;arr.push({key:key,priority:priority});this._decrease(index);return!0}return!1};/**
          * Removes and returns the smallest key in the queue. Takes `O(log n)` time.
          */PriorityQueue.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var min=this._arr.pop();delete this._keyIndices[min.key];this._heapify(0);return min.key};/**
          * Decreases the priority for **key** to **priority**. If the new priority is
          * greater than the previous priority, this function will throw an Error.
          *
          * @param {Object} key the key for which to raise priority
          * @param {Number} priority the new priority for the key
          */PriorityQueue.prototype.decrease=function(key,priority){var index=this._keyIndices[key];if(priority>this._arr[index].priority){throw new Error("New priority is greater than current priority. "+"Key: "+key+" Old: "+this._arr[index].priority+" New: "+priority)}this._arr[index].priority=priority;this._decrease(index)};PriorityQueue.prototype._heapify=function(i){var arr=this._arr,l=2*i,r=l+1,largest=i;if(l<arr.length){largest=arr[l].priority<arr[largest].priority?l:largest;if(r<arr.length){largest=arr[r].priority<arr[largest].priority?r:largest}if(largest!==i){this._swap(i,largest);this._heapify(largest)}}};PriorityQueue.prototype._decrease=function(index){var arr=this._arr,priority=arr[index].priority,parent;while(0!==index){parent=index>>1;if(arr[parent].priority<priority){break}this._swap(index,parent);index=parent}};PriorityQueue.prototype._swap=function(i,j){var arr=this._arr,keyIndices=this._keyIndices,origArrI=arr[i],origArrJ=arr[j];arr[i]=origArrJ;arr[j]=origArrI;keyIndices[origArrJ.key]=i;keyIndices[origArrI.key]=j}},{"../lodash":49}],46:[function(require,module,exports){"use strict";var _=require("./lodash");module.exports=Graph;var DEFAULT_EDGE_NAME="\0",GRAPH_NODE="\0",EDGE_KEY_DELIM="\x01";// Implementation notes:
//
//  * Node id query functions should return string ids for the nodes
//  * Edge id query functions should return an "edgeObj", edge object, that is
//    composed of enough information to uniquely identify an edge: {v, w, name}.
//  * Internally we use an "edgeId", a stringified form of the edgeObj, to
//    reference edges. This is because we need a performant way to look these
//    edges up and, object properties, which have string keys, are the closest
//    we're going to get to a performant hashtable in JavaScript.
function Graph(opts){this._isDirected=_.has(opts,"directed")?opts.directed:!0;this._isMultigraph=_.has(opts,"multigraph")?opts.multigraph:!1;this._isCompound=_.has(opts,"compound")?opts.compound:!1;// Label for the graph itself
this._label=void 0;// Defaults to be set when creating a new node
this._defaultNodeLabelFn=_.constant(void 0);// Defaults to be set when creating a new edge
this._defaultEdgeLabelFn=_.constant(void 0);// v -> label
this._nodes={};if(this._isCompound){// v -> parent
this._parent={};// v -> children
this._children={};this._children[GRAPH_NODE]={}}// v -> edgeObj
this._in={};// u -> v -> Number
this._preds={};// v -> edgeObj
this._out={};// v -> w -> Number
this._sucs={};// e -> edgeObj
this._edgeObjs={};// e -> label
this._edgeLabels={}}/* Number of nodes in the graph. Should only be changed by the implementation. */Graph.prototype._nodeCount=0;/* Number of edges in the graph. Should only be changed by the implementation. */Graph.prototype._edgeCount=0;/* === Graph functions ========= */Graph.prototype.isDirected=function(){return this._isDirected};Graph.prototype.isMultigraph=function(){return this._isMultigraph};Graph.prototype.isCompound=function(){return this._isCompound};Graph.prototype.setGraph=function(label){this._label=label;return this};Graph.prototype.graph=function(){return this._label};/* === Node functions ========== */Graph.prototype.setDefaultNodeLabel=function(newDefault){if(!_.isFunction(newDefault)){newDefault=_.constant(newDefault)}this._defaultNodeLabelFn=newDefault;return this};Graph.prototype.nodeCount=function(){return this._nodeCount};Graph.prototype.nodes=function(){return _.keys(this._nodes)};Graph.prototype.sources=function(){var self=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self._in[v])})};Graph.prototype.sinks=function(){var self=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self._out[v])})};Graph.prototype.setNodes=function(vs,value){var args=arguments,self=this;_.each(vs,function(v){if(1<args.length){self.setNode(v,value)}else{self.setNode(v)}});return this};Graph.prototype.setNode=function(v,value){if(_.has(this._nodes,v)){if(1<arguments.length){this._nodes[v]=value}return this}this._nodes[v]=1<arguments.length?value:this._defaultNodeLabelFn(v);if(this._isCompound){this._parent[v]=GRAPH_NODE;this._children[v]={};this._children[GRAPH_NODE][v]=!0}this._in[v]={};this._preds[v]={};this._out[v]={};this._sucs[v]={};++this._nodeCount;return this};Graph.prototype.node=function(v){return this._nodes[v]};Graph.prototype.hasNode=function(v){return _.has(this._nodes,v)};Graph.prototype.removeNode=function(v){var self=this;if(_.has(this._nodes,v)){var removeEdge=function(e){self.removeEdge(self._edgeObjs[e])};delete this._nodes[v];if(this._isCompound){this._removeFromParentsChildList(v);delete this._parent[v];_.each(this.children(v),function(child){self.setParent(child)});delete this._children[v]}_.each(_.keys(this._in[v]),removeEdge);delete this._in[v];delete this._preds[v];_.each(_.keys(this._out[v]),removeEdge);delete this._out[v];delete this._sucs[v];--this._nodeCount}return this};Graph.prototype.setParent=function(v,parent){if(!this._isCompound){throw new Error("Cannot set parent in a non-compound graph")}if(_.isUndefined(parent)){parent=GRAPH_NODE}else{// Coerce parent to string
parent+="";for(var ancestor=parent;!_.isUndefined(ancestor);ancestor=this.parent(ancestor)){if(ancestor===v){throw new Error("Setting "+parent+" as parent of "+v+" would create a cycle")}}this.setNode(parent)}this.setNode(v);this._removeFromParentsChildList(v);this._parent[v]=parent;this._children[parent][v]=!0;return this};Graph.prototype._removeFromParentsChildList=function(v){delete this._children[this._parent[v]][v]};Graph.prototype.parent=function(v){if(this._isCompound){var parent=this._parent[v];if(parent!==GRAPH_NODE){return parent}}};Graph.prototype.children=function(v){if(_.isUndefined(v)){v=GRAPH_NODE}if(this._isCompound){var children=this._children[v];if(children){return _.keys(children)}}else if(v===GRAPH_NODE){return this.nodes()}else if(this.hasNode(v)){return[]}};Graph.prototype.predecessors=function(v){var predsV=this._preds[v];if(predsV){return _.keys(predsV)}};Graph.prototype.successors=function(v){var sucsV=this._sucs[v];if(sucsV){return _.keys(sucsV)}};Graph.prototype.neighbors=function(v){var preds=this.predecessors(v);if(preds){return _.union(preds,this.successors(v))}};Graph.prototype.isLeaf=function(v){var neighbors;if(this.isDirected()){neighbors=this.successors(v)}else{neighbors=this.neighbors(v)}return 0===neighbors.length};Graph.prototype.filterNodes=function(filter){var copy=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});copy.setGraph(this.graph());var self=this;_.each(this._nodes,function(value,v){if(filter(v)){copy.setNode(v,value)}});_.each(this._edgeObjs,function(e){if(copy.hasNode(e.v)&&copy.hasNode(e.w)){copy.setEdge(e,self.edge(e))}});var parents={};function findParent(v){var parent=self.parent(v);if(parent===void 0||copy.hasNode(parent)){parents[v]=parent;return parent}else if(parent in parents){return parents[parent]}else{return findParent(parent)}}if(this._isCompound){_.each(copy.nodes(),function(v){copy.setParent(v,findParent(v))})}return copy};/* === Edge functions ========== */Graph.prototype.setDefaultEdgeLabel=function(newDefault){if(!_.isFunction(newDefault)){newDefault=_.constant(newDefault)}this._defaultEdgeLabelFn=newDefault;return this};Graph.prototype.edgeCount=function(){return this._edgeCount};Graph.prototype.edges=function(){return _.values(this._edgeObjs)};Graph.prototype.setPath=function(vs,value){var self=this,args=arguments;_.reduce(vs,function(v,w){if(1<args.length){self.setEdge(v,w,value)}else{self.setEdge(v,w)}return w});return this};/*
          * setEdge(v, w, [value, [name]])
          * setEdge({ v, w, [name] }, [value])
          */Graph.prototype.setEdge=function(){var v,w,name,value,valueSpecified=!1,arg0=arguments[0];if("object"===typeof arg0&&null!==arg0&&"v"in arg0){v=arg0.v;w=arg0.w;name=arg0.name;if(2===arguments.length){value=arguments[1];valueSpecified=!0}}else{v=arg0;w=arguments[1];name=arguments[3];if(2<arguments.length){value=arguments[2];valueSpecified=!0}}v=""+v;w=""+w;if(!_.isUndefined(name)){name=""+name}var e=edgeArgsToId(this._isDirected,v,w,name);if(_.has(this._edgeLabels,e)){if(valueSpecified){this._edgeLabels[e]=value}return this}if(!_.isUndefined(name)&&!this._isMultigraph){throw new Error("Cannot set a named edge when isMultigraph = false")}// It didn't exist, so we need to create it.
// First ensure the nodes exist.
this.setNode(v);this.setNode(w);this._edgeLabels[e]=valueSpecified?value:this._defaultEdgeLabelFn(v,w,name);var edgeObj=edgeArgsToObj(this._isDirected,v,w,name);// Ensure we add undirected edges in a consistent way.
v=edgeObj.v;w=edgeObj.w;Object.freeze(edgeObj);this._edgeObjs[e]=edgeObj;incrementOrInitEntry(this._preds[w],v);incrementOrInitEntry(this._sucs[v],w);this._in[w][e]=edgeObj;this._out[v][e]=edgeObj;this._edgeCount++;return this};Graph.prototype.edge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return this._edgeLabels[e]};Graph.prototype.hasEdge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return _.has(this._edgeLabels,e)};Graph.prototype.removeEdge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name),edge=this._edgeObjs[e];if(edge){v=edge.v;w=edge.w;delete this._edgeLabels[e];delete this._edgeObjs[e];decrementOrRemoveEntry(this._preds[w],v);decrementOrRemoveEntry(this._sucs[v],w);delete this._in[w][e];delete this._out[v][e];this._edgeCount--}return this};Graph.prototype.inEdges=function(v,u){var inV=this._in[v];if(inV){var edges=_.values(inV);if(!u){return edges}return _.filter(edges,function(edge){return edge.v===u})}};Graph.prototype.outEdges=function(v,w){var outV=this._out[v];if(outV){var edges=_.values(outV);if(!w){return edges}return _.filter(edges,function(edge){return edge.w===w})}};Graph.prototype.nodeEdges=function(v,w){var inEdges=this.inEdges(v,w);if(inEdges){return inEdges.concat(this.outEdges(v,w))}};function incrementOrInitEntry(map,k){if(map[k]){map[k]++}else{map[k]=1}}function decrementOrRemoveEntry(map,k){if(! --map[k]){delete map[k]}}function edgeArgsToId(isDirected,v_,w_,name){var v=""+v_,w=""+w_;if(!isDirected&&v>w){var tmp=v;v=w;w=tmp}return v+EDGE_KEY_DELIM+w+EDGE_KEY_DELIM+(_.isUndefined(name)?DEFAULT_EDGE_NAME:name)}function edgeArgsToObj(isDirected,v_,w_,name){var v=""+v_,w=""+w_;if(!isDirected&&v>w){var tmp=v;v=w;w=tmp}var edgeObj={v:v,w:w};if(name){edgeObj.name=name}return edgeObj}function edgeObjToId(isDirected,edgeObj){return edgeArgsToId(isDirected,edgeObj.v,edgeObj.w,edgeObj.name)}},{"./lodash":49}],47:[function(require,module,exports){// Includes only the "core" of graphlib
module.exports={Graph:require("./graph"),version:require("./version")}},{"./graph":46,"./version":50}],48:[function(require,module,exports){var _=require("./lodash"),Graph=require("./graph");module.exports={write:write,read:read};function write(g){var json={options:{directed:g.isDirected(),multigraph:g.isMultigraph(),compound:g.isCompound()},nodes:writeNodes(g),edges:writeEdges(g)};if(!_.isUndefined(g.graph())){json.value=_.clone(g.graph())}return json}function writeNodes(g){return _.map(g.nodes(),function(v){var nodeValue=g.node(v),parent=g.parent(v),node={v:v};if(!_.isUndefined(nodeValue)){node.value=nodeValue}if(!_.isUndefined(parent)){node.parent=parent}return node})}function writeEdges(g){return _.map(g.edges(),function(e){var edgeValue=g.edge(e),edge={v:e.v,w:e.w};if(!_.isUndefined(e.name)){edge.name=e.name}if(!_.isUndefined(edgeValue)){edge.value=edgeValue}return edge})}function read(json){var g=new Graph(json.options).setGraph(json.value);_.each(json.nodes,function(entry){g.setNode(entry.v,entry.value);if(entry.parent){g.setParent(entry.v,entry.parent)}});_.each(json.edges,function(entry){g.setEdge({v:entry.v,w:entry.w,name:entry.name},entry.value)});return g}},{"./graph":46,"./lodash":49}],49:[function(require,module,exports){/* global window */var lodash;if("function"===typeof require){try{lodash={clone:require("lodash/clone"),constant:require("lodash/constant"),each:require("lodash/each"),filter:require("lodash/filter"),has:require("lodash/has"),isArray:require("lodash/isArray"),isEmpty:require("lodash/isEmpty"),isFunction:require("lodash/isFunction"),isUndefined:require("lodash/isUndefined"),keys:require("lodash/keys"),map:require("lodash/map"),reduce:require("lodash/reduce"),size:require("lodash/size"),transform:require("lodash/transform"),union:require("lodash/union"),values:require("lodash/values")}}catch(e){}}if(!lodash){lodash=window._}module.exports=lodash},{"lodash/clone":226,"lodash/constant":228,"lodash/each":230,"lodash/filter":232,"lodash/has":239,"lodash/isArray":243,"lodash/isEmpty":247,"lodash/isFunction":248,"lodash/isUndefined":258,"lodash/keys":259,"lodash/map":262,"lodash/reduce":274,"lodash/size":275,"lodash/transform":284,"lodash/union":285,"lodash/values":287}],50:[function(require,module,exports){module.exports="2.1.7"},{}],51:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root"),DataView=getNative(root,"DataView");/* Built-in method references that are verified to be native. */module.exports=DataView},{"./_getNative":163,"./_root":208}],52:[function(require,module,exports){var hashClear=require("./_hashClear"),hashDelete=require("./_hashDelete"),hashGet=require("./_hashGet"),hashHas=require("./_hashHas"),hashSet=require("./_hashSet");/**
                                            * Creates a hash object.
                                            *
                                            * @private
                                            * @constructor
                                            * @param {Array} [entries] The key-value pairs to cache.
                                            */function Hash(entries){var index=-1,length=null==entries?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}// Add methods to `Hash`.
Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;module.exports=Hash},{"./_hashClear":172,"./_hashDelete":173,"./_hashGet":174,"./_hashHas":175,"./_hashSet":176}],53:[function(require,module,exports){var listCacheClear=require("./_listCacheClear"),listCacheDelete=require("./_listCacheDelete"),listCacheGet=require("./_listCacheGet"),listCacheHas=require("./_listCacheHas"),listCacheSet=require("./_listCacheSet");/**
                                                      * Creates an list cache object.
                                                      *
                                                      * @private
                                                      * @constructor
                                                      * @param {Array} [entries] The key-value pairs to cache.
                                                      */function ListCache(entries){var index=-1,length=null==entries?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}// Add methods to `ListCache`.
ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module.exports=ListCache},{"./_listCacheClear":188,"./_listCacheDelete":189,"./_listCacheGet":190,"./_listCacheHas":191,"./_listCacheSet":192}],54:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root"),Map=getNative(root,"Map");/* Built-in method references that are verified to be native. */module.exports=Map},{"./_getNative":163,"./_root":208}],55:[function(require,module,exports){var mapCacheClear=require("./_mapCacheClear"),mapCacheDelete=require("./_mapCacheDelete"),mapCacheGet=require("./_mapCacheGet"),mapCacheHas=require("./_mapCacheHas"),mapCacheSet=require("./_mapCacheSet");/**
                                                    * Creates a map cache object to store key-value pairs.
                                                    *
                                                    * @private
                                                    * @constructor
                                                    * @param {Array} [entries] The key-value pairs to cache.
                                                    */function MapCache(entries){var index=-1,length=null==entries?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1])}}// Add methods to `MapCache`.
MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;module.exports=MapCache},{"./_mapCacheClear":193,"./_mapCacheDelete":194,"./_mapCacheGet":195,"./_mapCacheHas":196,"./_mapCacheSet":197}],56:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root"),Promise=getNative(root,"Promise");/* Built-in method references that are verified to be native. */module.exports=Promise},{"./_getNative":163,"./_root":208}],57:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root"),Set=getNative(root,"Set");/* Built-in method references that are verified to be native. */module.exports=Set},{"./_getNative":163,"./_root":208}],58:[function(require,module,exports){var MapCache=require("./_MapCache"),setCacheAdd=require("./_setCacheAdd"),setCacheHas=require("./_setCacheHas");/**
                                                    *
                                                    * Creates an array cache object to store unique values.
                                                    *
                                                    * @private
                                                    * @constructor
                                                    * @param {Array} [values] The values to cache.
                                                    */function SetCache(values){var index=-1,length=null==values?0:values.length;this.__data__=new MapCache;while(++index<length){this.add(values[index])}}// Add methods to `SetCache`.
SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;module.exports=SetCache},{"./_MapCache":55,"./_setCacheAdd":210,"./_setCacheHas":211}],59:[function(require,module,exports){var ListCache=require("./_ListCache"),stackClear=require("./_stackClear"),stackDelete=require("./_stackDelete"),stackGet=require("./_stackGet"),stackHas=require("./_stackHas"),stackSet=require("./_stackSet");/**
                                              * Creates a stack cache object to store key-value pairs.
                                              *
                                              * @private
                                              * @constructor
                                              * @param {Array} [entries] The key-value pairs to cache.
                                              */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size}// Add methods to `Stack`.
Stack.prototype.clear=stackClear;Stack.prototype["delete"]=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module.exports=Stack},{"./_ListCache":53,"./_stackClear":215,"./_stackDelete":216,"./_stackGet":217,"./_stackHas":218,"./_stackSet":219}],60:[function(require,module,exports){var root=require("./_root"),Symbol=root.Symbol;/** Built-in value references. */module.exports=Symbol},{"./_root":208}],61:[function(require,module,exports){var root=require("./_root"),Uint8Array=root.Uint8Array;/** Built-in value references. */module.exports=Uint8Array},{"./_root":208}],62:[function(require,module,exports){var getNative=require("./_getNative"),root=require("./_root"),WeakMap=getNative(root,"WeakMap");/* Built-in method references that are verified to be native. */module.exports=WeakMap},{"./_getNative":163,"./_root":208}],63:[function(require,module,exports){/**
       * A faster alternative to `Function#apply`, this function invokes `func`
       * with the `this` binding of `thisArg` and the arguments of `args`.
       *
       * @private
       * @param {Function} func The function to invoke.
       * @param {*} thisArg The `this` binding of `func`.
       * @param {Array} args The arguments to invoke `func` with.
       * @returns {*} Returns the result of `func`.
       */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args)}module.exports=apply},{}],64:[function(require,module,exports){/**
       * A specialized version of `_.forEach` for arrays without support for
       * iteratee shorthands.
       *
       * @private
       * @param {Array} [array] The array to iterate over.
       * @param {Function} iteratee The function invoked per iteration.
       * @returns {Array} Returns `array`.
       */function arrayEach(array,iteratee){var index=-1,length=null==array?0:array.length;while(++index<length){if(!1===iteratee(array[index],index,array)){break}}return array}module.exports=arrayEach},{}],65:[function(require,module,exports){/**
       * A specialized version of `_.filter` for arrays without support for
       * iteratee shorthands.
       *
       * @private
       * @param {Array} [array] The array to iterate over.
       * @param {Function} predicate The function invoked per iteration.
       * @returns {Array} Returns the new filtered array.
       */function arrayFilter(array,predicate){var index=-1,length=null==array?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value}}return result}module.exports=arrayFilter},{}],66:[function(require,module,exports){var baseIndexOf=require("./_baseIndexOf");/**
                                                    * A specialized version of `_.includes` for arrays without support for
                                                    * specifying an index to search from.
                                                    *
                                                    * @private
                                                    * @param {Array} [array] The array to inspect.
                                                    * @param {*} target The value to search for.
                                                    * @returns {boolean} Returns `true` if `target` is found, else `false`.
                                                    */function arrayIncludes(array,value){var length=null==array?0:array.length;return!!length&&-1<baseIndexOf(array,value,0)}module.exports=arrayIncludes},{"./_baseIndexOf":95}],67:[function(require,module,exports){/**
       * This function is like `arrayIncludes` except that it accepts a comparator.
       *
       * @private
       * @param {Array} [array] The array to inspect.
       * @param {*} target The value to search for.
       * @param {Function} comparator The comparator invoked per element.
       * @returns {boolean} Returns `true` if `target` is found, else `false`.
       */function arrayIncludesWith(array,value,comparator){var index=-1,length=null==array?0:array.length;while(++index<length){if(comparator(value,array[index])){return!0}}return!1}module.exports=arrayIncludesWith},{}],68:[function(require,module,exports){var baseTimes=require("./_baseTimes"),isArguments=require("./isArguments"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isIndex=require("./_isIndex"),isTypedArray=require("./isTypedArray"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used for built-in method references. */ /**
                                                        * Creates an array of the enumerable property names of the array-like `value`.
                                                        *
                                                        * @private
                                                        * @param {*} value The value to query.
                                                        * @param {boolean} inherited Specify returning inherited property names.
                                                        * @returns {Array} Returns the array of property names.
                                                        */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
"length"==key||// Node.js 0.10 has enumerable non-index properties on buffers.
isBuff&&("offset"==key||"parent"==key)||// PhantomJS 2 has enumerable non-index properties on typed arrays.
isType&&("buffer"==key||"byteLength"==key||"byteOffset"==key)||// Skip index properties.
isIndex(key,length)))){result.push(key)}}return result}module.exports=arrayLikeKeys},{"./_baseTimes":125,"./_isIndex":181,"./isArguments":242,"./isArray":243,"./isBuffer":246,"./isTypedArray":257}],69:[function(require,module,exports){/**
       * A specialized version of `_.map` for arrays without support for iteratee
       * shorthands.
       *
       * @private
       * @param {Array} [array] The array to iterate over.
       * @param {Function} iteratee The function invoked per iteration.
       * @returns {Array} Returns the new mapped array.
       */function arrayMap(array,iteratee){var index=-1,length=null==array?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array)}return result}module.exports=arrayMap},{}],70:[function(require,module,exports){/**
       * Appends the elements of `values` to `array`.
       *
       * @private
       * @param {Array} array The array to modify.
       * @param {Array} values The values to append.
       * @returns {Array} Returns `array`.
       */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index]}return array}module.exports=arrayPush},{}],71:[function(require,module,exports){/**
       * A specialized version of `_.reduce` for arrays without support for
       * iteratee shorthands.
       *
       * @private
       * @param {Array} [array] The array to iterate over.
       * @param {Function} iteratee The function invoked per iteration.
       * @param {*} [accumulator] The initial value.
       * @param {boolean} [initAccum] Specify using the first element of `array` as
       *  the initial value.
       * @returns {*} Returns the accumulated value.
       */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=null==array?0:array.length;if(initAccum&&length){accumulator=array[++index]}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array)}return accumulator}module.exports=arrayReduce},{}],72:[function(require,module,exports){/**
       * A specialized version of `_.some` for arrays without support for iteratee
       * shorthands.
       *
       * @private
       * @param {Array} [array] The array to iterate over.
       * @param {Function} predicate The function invoked per iteration.
       * @returns {boolean} Returns `true` if any element passes the predicate check,
       *  else `false`.
       */function arraySome(array,predicate){var index=-1,length=null==array?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return!0}}return!1}module.exports=arraySome},{}],73:[function(require,module,exports){var baseProperty=require("./_baseProperty"),asciiSize=baseProperty("length");/**
                                                      * Gets the size of an ASCII `string`.
                                                      *
                                                      * @private
                                                      * @param {string} string The string inspect.
                                                      * @returns {number} Returns the string size.
                                                      */module.exports=asciiSize},{"./_baseProperty":117}],74:[function(require,module,exports){var baseAssignValue=require("./_baseAssignValue"),eq=require("./eq");/**
                                 * This function is like `assignValue` except that it doesn't assign
                                 * `undefined` values.
                                 *
                                 * @private
                                 * @param {Object} object The object to modify.
                                 * @param {string} key The key of the property to assign.
                                 * @param {*} value The value to assign.
                                 */function assignMergeValue(object,key,value){if(value!==void 0&&!eq(object[key],value)||value===void 0&&!(key in object)){baseAssignValue(object,key,value)}}module.exports=assignMergeValue},{"./_baseAssignValue":79,"./eq":231}],75:[function(require,module,exports){var baseAssignValue=require("./_baseAssignValue"),eq=require("./eq"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used for built-in method references. */ /**
                                                        * Assigns `value` to `key` of `object` if the existing value is not equivalent
                                                        * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
                                                        * for equality comparisons.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to modify.
                                                        * @param {string} key The key of the property to assign.
                                                        * @param {*} value The value to assign.
                                                        */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===void 0&&!(key in object)){baseAssignValue(object,key,value)}}module.exports=assignValue},{"./_baseAssignValue":79,"./eq":231}],76:[function(require,module,exports){var eq=require("./eq");/**
                                 * Gets the index at which the `key` is found in `array` of key-value pairs.
                                 *
                                 * @private
                                 * @param {Array} array The array to inspect.
                                 * @param {*} key The key to search for.
                                 * @returns {number} Returns the index of the matched value, else `-1`.
                                 */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length}}return-1}module.exports=assocIndexOf},{"./eq":231}],77:[function(require,module,exports){var copyObject=require("./_copyObject"),keys=require("./keys");/**
                                     * The base implementation of `_.assign` without support for multiple sources
                                     * or `customizer` functions.
                                     *
                                     * @private
                                     * @param {Object} object The destination object.
                                     * @param {Object} source The source object.
                                     * @returns {Object} Returns `object`.
                                     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object)}module.exports=baseAssign},{"./_copyObject":143,"./keys":259}],78:[function(require,module,exports){var copyObject=require("./_copyObject"),keysIn=require("./keysIn");/**
                                         * The base implementation of `_.assignIn` without support for multiple sources
                                         * or `customizer` functions.
                                         *
                                         * @private
                                         * @param {Object} object The destination object.
                                         * @param {Object} source The source object.
                                         * @returns {Object} Returns `object`.
                                         */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object)}module.exports=baseAssignIn},{"./_copyObject":143,"./keysIn":260}],79:[function(require,module,exports){var defineProperty=require("./_defineProperty");/**
                                                          * The base implementation of `assignValue` and `assignMergeValue` without
                                                          * value checks.
                                                          *
                                                          * @private
                                                          * @param {Object} object The object to modify.
                                                          * @param {string} key The key of the property to assign.
                                                          * @param {*} value The value to assign.
                                                          */function baseAssignValue(object,key,value){if("__proto__"==key&&defineProperty){defineProperty(object,key,{configurable:!0,enumerable:!0,value:value,writable:!0})}else{object[key]=value}}module.exports=baseAssignValue},{"./_defineProperty":153}],80:[function(require,module,exports){var Stack=require("./_Stack"),arrayEach=require("./_arrayEach"),assignValue=require("./_assignValue"),baseAssign=require("./_baseAssign"),baseAssignIn=require("./_baseAssignIn"),cloneBuffer=require("./_cloneBuffer"),copyArray=require("./_copyArray"),copySymbols=require("./_copySymbols"),copySymbolsIn=require("./_copySymbolsIn"),getAllKeys=require("./_getAllKeys"),getAllKeysIn=require("./_getAllKeysIn"),getTag=require("./_getTag"),initCloneArray=require("./_initCloneArray"),initCloneByTag=require("./_initCloneByTag"),initCloneObject=require("./_initCloneObject"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isMap=require("./isMap"),isObject=require("./isObject"),isSet=require("./isSet"),keys=require("./keys"),CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4,argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",genTag="[object GeneratorFunction]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",cloneableTags={};/** Used to compose bitmasks for cloning. */cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=!0;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=!1;/**
                                                                                             * The base implementation of `_.clone` and `_.cloneDeep` which tracks
                                                                                             * traversed objects.
                                                                                             *
                                                                                             * @private
                                                                                             * @param {*} value The value to clone.
                                                                                             * @param {boolean} bitmask The bitmask flags.
                                                                                             *  1 - Deep clone
                                                                                             *  2 - Flatten inherited properties
                                                                                             *  4 - Clone symbols
                                                                                             * @param {Function} [customizer] The function to customize cloning.
                                                                                             * @param {string} [key] The key of `value`.
                                                                                             * @param {Object} [object] The parent object of `value`.
                                                                                             * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
                                                                                             * @returns {*} Returns the cloned value.
                                                                                             */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value)}if(result!==void 0){return result}if(!isObject(value)){return value}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result)}}else{var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep)}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value))}}else{if(!cloneableTags[tag]){return object?value:{}}result=initCloneByTag(value,tag,isDeep)}}// Check for circular references and return its corresponding clone.
stack||(stack=new Stack);var stacked=stack.get(value);if(stacked){return stacked}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack))});return result}if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack))});return result}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys,props=isArr?void 0:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key]}// Recursively populate clone (susceptible to call stack limits).
assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack))});return result}module.exports=baseClone},{"./_Stack":59,"./_arrayEach":64,"./_assignValue":75,"./_baseAssign":77,"./_baseAssignIn":78,"./_cloneBuffer":135,"./_copyArray":142,"./_copySymbols":144,"./_copySymbolsIn":145,"./_getAllKeys":159,"./_getAllKeysIn":160,"./_getTag":168,"./_initCloneArray":177,"./_initCloneByTag":178,"./_initCloneObject":179,"./isArray":243,"./isBuffer":246,"./isMap":250,"./isObject":251,"./isSet":254,"./keys":259}],81:[function(require,module,exports){var isObject=require("./isObject"),objectCreate=Object.create,baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return{}}if(objectCreate){return objectCreate(proto)}object.prototype=proto;var result=new object;object.prototype=void 0;return result}}();/** Built-in value references. */module.exports=baseCreate},{"./isObject":251}],82:[function(require,module,exports){var baseForOwn=require("./_baseForOwn"),createBaseEach=require("./_createBaseEach"),baseEach=createBaseEach(baseForOwn);/**
                                                          * The base implementation of `_.forEach` without support for iteratee shorthands.
                                                          *
                                                          * @private
                                                          * @param {Array|Object} collection The collection to iterate over.
                                                          * @param {Function} iteratee The function invoked per iteration.
                                                          * @returns {Array|Object} Returns `collection`.
                                                          */module.exports=baseEach},{"./_baseForOwn":88,"./_createBaseEach":148}],83:[function(require,module,exports){var isSymbol=require("./isSymbol");/**
                                             * The base implementation of methods like `_.max` and `_.min` which accepts a
                                             * `comparator` to determine the extremum value.
                                             *
                                             * @private
                                             * @param {Array} array The array to iterate over.
                                             * @param {Function} iteratee The iteratee invoked per iteration.
                                             * @param {Function} comparator The comparator used to compare values.
                                             * @returns {*} Returns the extremum value.
                                             */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(null!=current&&(computed===void 0?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value}}return result}module.exports=baseExtremum},{"./isSymbol":256}],84:[function(require,module,exports){var baseEach=require("./_baseEach");/**
                                              * The base implementation of `_.filter` without support for iteratee shorthands.
                                              *
                                              * @private
                                              * @param {Array|Object} collection The collection to iterate over.
                                              * @param {Function} predicate The function invoked per iteration.
                                              * @returns {Array} Returns the new filtered array.
                                              */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value)}});return result}module.exports=baseFilter},{"./_baseEach":82}],85:[function(require,module,exports){/**
       * The base implementation of `_.findIndex` and `_.findLastIndex` without
       * support for iteratee shorthands.
       *
       * @private
       * @param {Array} array The array to inspect.
       * @param {Function} predicate The function invoked per iteration.
       * @param {number} fromIndex The index to search from.
       * @param {boolean} [fromRight] Specify iterating from right to left.
       * @returns {number} Returns the index of the matched value, else `-1`.
       */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index}}return-1}module.exports=baseFindIndex},{}],86:[function(require,module,exports){var arrayPush=require("./_arrayPush"),isFlattenable=require("./_isFlattenable");/**
                                                        * The base implementation of `_.flatten` with support for restricting flattening.
                                                        *
                                                        * @private
                                                        * @param {Array} array The array to flatten.
                                                        * @param {number} depth The maximum recursion depth.
                                                        * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
                                                        * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
                                                        * @param {Array} [result=[]] The initial result value.
                                                        * @returns {Array} Returns the new flattened array.
                                                        */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(0<depth&&predicate(value)){if(1<depth){// Recursively flatten arrays (susceptible to call stack limits).
baseFlatten(value,depth-1,predicate,isStrict,result)}else{arrayPush(result,value)}}else if(!isStrict){result[result.length]=value}}return result}module.exports=baseFlatten},{"./_arrayPush":70,"./_isFlattenable":180}],87:[function(require,module,exports){var createBaseFor=require("./_createBaseFor"),baseFor=createBaseFor();/**
                                                        * The base implementation of `baseForOwn` which iterates over `object`
                                                        * properties returned by `keysFunc` and invokes `iteratee` for each property.
                                                        * Iteratee functions may exit iteration early by explicitly returning `false`.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to iterate over.
                                                        * @param {Function} iteratee The function invoked per iteration.
                                                        * @param {Function} keysFunc The function to get the keys of `object`.
                                                        * @returns {Object} Returns `object`.
                                                        */module.exports=baseFor},{"./_createBaseFor":149}],88:[function(require,module,exports){var baseFor=require("./_baseFor"),keys=require("./keys");/**
                                     * The base implementation of `_.forOwn` without support for iteratee shorthands.
                                     *
                                     * @private
                                     * @param {Object} object The object to iterate over.
                                     * @param {Function} iteratee The function invoked per iteration.
                                     * @returns {Object} Returns `object`.
                                     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys)}module.exports=baseForOwn},{"./_baseFor":87,"./keys":259}],89:[function(require,module,exports){var castPath=require("./_castPath"),toKey=require("./_toKey");/**
                                        * The base implementation of `_.get` without support for default values.
                                        *
                                        * @private
                                        * @param {Object} object The object to query.
                                        * @param {Array|string} path The path of the property to get.
                                        * @returns {*} Returns the resolved value.
                                        */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(null!=object&&index<length){object=object[toKey(path[index++])]}return index&&index==length?object:void 0}module.exports=baseGet},{"./_castPath":133,"./_toKey":223}],90:[function(require,module,exports){var arrayPush=require("./_arrayPush"),isArray=require("./isArray");/**
                                           * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
                                           * `keysFunc` and `symbolsFunc` to get the enumerable property names and
                                           * symbols of `object`.
                                           *
                                           * @private
                                           * @param {Object} object The object to query.
                                           * @param {Function} keysFunc The function to get the keys of `object`.
                                           * @param {Function} symbolsFunc The function to get the symbols of `object`.
                                           * @returns {Array} Returns the array of property names and symbols.
                                           */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object))}module.exports=baseGetAllKeys},{"./_arrayPush":70,"./isArray":243}],91:[function(require,module,exports){var Symbol=require("./_Symbol"),getRawTag=require("./_getRawTag"),objectToString=require("./_objectToString"),nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag=Symbol?Symbol.toStringTag:void 0;/** `Object#toString` result references. */ /**
                                                                     * The base implementation of `getTag` without fallbacks for buggy environments.
                                                                     *
                                                                     * @private
                                                                     * @param {*} value The value to query.
                                                                     * @returns {string} Returns the `toStringTag`.
                                                                     */function baseGetTag(value){if(null==value){return value===void 0?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}module.exports=baseGetTag},{"./_Symbol":60,"./_getRawTag":165,"./_objectToString":205}],92:[function(require,module,exports){/**
       * The base implementation of `_.gt` which doesn't coerce arguments.
       *
       * @private
       * @param {*} value The value to compare.
       * @param {*} other The other value to compare.
       * @returns {boolean} Returns `true` if `value` is greater than `other`,
       *  else `false`.
       */function baseGt(value,other){return value>other}module.exports=baseGt},{}],93:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used to check objects for own properties. */ /**
                                                        * The base implementation of `_.has` without support for deep paths.
                                                        *
                                                        * @private
                                                        * @param {Object} [object] The object to query.
                                                        * @param {Array|string} key The key to check.
                                                        * @returns {boolean} Returns `true` if `key` exists, else `false`.
                                                        */function baseHas(object,key){return null!=object&&hasOwnProperty.call(object,key)}module.exports=baseHas},{}],94:[function(require,module,exports){/**
       * The base implementation of `_.hasIn` without support for deep paths.
       *
       * @private
       * @param {Object} [object] The object to query.
       * @param {Array|string} key The key to check.
       * @returns {boolean} Returns `true` if `key` exists, else `false`.
       */function baseHasIn(object,key){return null!=object&&key in Object(object)}module.exports=baseHasIn},{}],95:[function(require,module,exports){var baseFindIndex=require("./_baseFindIndex"),baseIsNaN=require("./_baseIsNaN"),strictIndexOf=require("./_strictIndexOf");/**
                                                        * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
                                                        *
                                                        * @private
                                                        * @param {Array} array The array to inspect.
                                                        * @param {*} value The value to search for.
                                                        * @param {number} fromIndex The index to search from.
                                                        * @returns {number} Returns the index of the matched value, else `-1`.
                                                        */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex)}module.exports=baseIndexOf},{"./_baseFindIndex":85,"./_baseIsNaN":101,"./_strictIndexOf":220}],96:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObjectLike=require("./isObjectLike"),argsTag="[object Arguments]";/** `Object#toString` result references. */ /**
                                           * The base implementation of `_.isArguments`.
                                           *
                                           * @private
                                           * @param {*} value The value to check.
                                           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
                                           */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}module.exports=baseIsArguments},{"./_baseGetTag":91,"./isObjectLike":252}],97:[function(require,module,exports){var baseIsEqualDeep=require("./_baseIsEqualDeep"),isObjectLike=require("./isObjectLike");/**
                                                     * The base implementation of `_.isEqual` which supports partial comparisons
                                                     * and tracks traversed objects.
                                                     *
                                                     * @private
                                                     * @param {*} value The value to compare.
                                                     * @param {*} other The other value to compare.
                                                     * @param {boolean} bitmask The bitmask flags.
                                                     *  1 - Unordered comparison
                                                     *  2 - Partial comparison
                                                     * @param {Function} [customizer] The function to customize comparisons.
                                                     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
                                                     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
                                                     */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return!0}if(null==value||null==other||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}module.exports=baseIsEqual},{"./_baseIsEqualDeep":98,"./isObjectLike":252}],98:[function(require,module,exports){var Stack=require("./_Stack"),equalArrays=require("./_equalArrays"),equalByTag=require("./_equalByTag"),equalObjects=require("./_equalObjects"),getTag=require("./_getTag"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isTypedArray=require("./isTypedArray"),COMPARE_PARTIAL_FLAG=1,argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used to compose bitmasks for value comparisons. */ /**
                                                        * A specialized version of `baseIsEqual` for arrays and objects which performs
                                                        * deep comparisons and tracks traversed objects enabling objects with circular
                                                        * references to be compared.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to compare.
                                                        * @param {Object} other The other object to compare.
                                                        * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
                                                        * @param {Function} customizer The function to customize comparisons.
                                                        * @param {Function} equalFunc The function to determine equivalents of values.
                                                        * @param {Object} [stack] Tracks traversed `object` and `other` objects.
                                                        * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
                                                        */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return!1}objIsArr=!0;objIsObj=!1}if(isSameTag&&!objIsObj){stack||(stack=new Stack);return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack)}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack);return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}if(!isSameTag){return!1}stack||(stack=new Stack);return equalObjects(object,other,bitmask,customizer,equalFunc,stack)}module.exports=baseIsEqualDeep},{"./_Stack":59,"./_equalArrays":154,"./_equalByTag":155,"./_equalObjects":156,"./_getTag":168,"./isArray":243,"./isBuffer":246,"./isTypedArray":257}],99:[function(require,module,exports){var getTag=require("./_getTag"),isObjectLike=require("./isObjectLike"),mapTag="[object Map]";/** `Object#toString` result references. */ /**
                                    * The base implementation of `_.isMap` without Node.js optimizations.
                                    *
                                    * @private
                                    * @param {*} value The value to check.
                                    * @returns {boolean} Returns `true` if `value` is a map, else `false`.
                                    */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag}module.exports=baseIsMap},{"./_getTag":168,"./isObjectLike":252}],100:[function(require,module,exports){var Stack=require("./_Stack"),baseIsEqual=require("./_baseIsEqual"),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for value comparisons. */ /**
                                       * The base implementation of `_.isMatch` without support for iteratee shorthands.
                                       *
                                       * @private
                                       * @param {Object} object The object to inspect.
                                       * @param {Object} source The object of property values to match.
                                       * @param {Array} matchData The property names, values, and compare flags to match.
                                       * @param {Function} [customizer] The function to customize comparisons.
                                       * @returns {boolean} Returns `true` if `object` is a match, else `false`.
                                       */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(null==object){return!length}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return!1}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===void 0&&!(key in object)){return!1}}else{var stack=new Stack;if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack)}if(!(result===void 0?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return!1}}}return!0}module.exports=baseIsMatch},{"./_Stack":59,"./_baseIsEqual":97}],101:[function(require,module,exports){/**
       * The base implementation of `_.isNaN` without support for number objects.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
       */function baseIsNaN(value){return value!==value}module.exports=baseIsNaN},{}],102:[function(require,module,exports){var isFunction=require("./isFunction"),isMasked=require("./_isMasked"),isObject=require("./isObject"),toSource=require("./_toSource"),reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor=/^\[object .+?Constructor\]$/,funcProto=Function.prototype,objectProto=Object.prototype,funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");/**
                                              * Used to match `RegExp`
                                              * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
                                              */ /**
                                                                                                                                                                                        * The base implementation of `_.isNative` without bad shim checks.
                                                                                                                                                                                        *
                                                                                                                                                                                        * @private
                                                                                                                                                                                        * @param {*} value The value to check.
                                                                                                                                                                                        * @returns {boolean} Returns `true` if `value` is a native function,
                                                                                                                                                                                        *  else `false`.
                                                                                                                                                                                        */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return!1}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}module.exports=baseIsNative},{"./_isMasked":185,"./_toSource":224,"./isFunction":248,"./isObject":251}],103:[function(require,module,exports){var getTag=require("./_getTag"),isObjectLike=require("./isObjectLike"),setTag="[object Set]";/** `Object#toString` result references. */ /**
                                    * The base implementation of `_.isSet` without Node.js optimizations.
                                    *
                                    * @private
                                    * @param {*} value The value to check.
                                    * @returns {boolean} Returns `true` if `value` is a set, else `false`.
                                    */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag}module.exports=baseIsSet},{"./_getTag":168,"./isObjectLike":252}],104:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isLength=require("./isLength"),isObjectLike=require("./isObjectLike"),argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};/** `Object#toString` result references. */typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=!1;/**
                                                                                                                                                                                                                                                                                                                                                                                                                                          * The base implementation of `_.isTypedArray` without Node.js optimizations.
                                                                                                                                                                                                                                                                                                                                                                                                                                          *
                                                                                                                                                                                                                                                                                                                                                                                                                                          * @private
                                                                                                                                                                                                                                                                                                                                                                                                                                          * @param {*} value The value to check.
                                                                                                                                                                                                                                                                                                                                                                                                                                          * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
                                                                                                                                                                                                                                                                                                                                                                                                                                          */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}module.exports=baseIsTypedArray},{"./_baseGetTag":91,"./isLength":249,"./isObjectLike":252}],105:[function(require,module,exports){var baseMatches=require("./_baseMatches"),baseMatchesProperty=require("./_baseMatchesProperty"),identity=require("./identity"),isArray=require("./isArray"),property=require("./property");/**
                                             * The base implementation of `_.iteratee`.
                                             *
                                             * @private
                                             * @param {*} [value=_.identity] The value to convert to an iteratee.
                                             * @returns {Function} Returns the iteratee.
                                             */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
if("function"==typeof value){return value}if(null==value){return identity}if("object"==typeof value){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value)}return property(value)}module.exports=baseIteratee},{"./_baseMatches":110,"./_baseMatchesProperty":111,"./identity":241,"./isArray":243,"./property":272}],106:[function(require,module,exports){var isPrototype=require("./_isPrototype"),nativeKeys=require("./_nativeKeys"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used for built-in method references. */ /**
                                                        * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to query.
                                                        * @returns {Array} Returns the array of property names.
                                                        */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object)}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&"constructor"!=key){result.push(key)}}return result}module.exports=baseKeys},{"./_isPrototype":186,"./_nativeKeys":202}],107:[function(require,module,exports){var isObject=require("./isObject"),isPrototype=require("./_isPrototype"),nativeKeysIn=require("./_nativeKeysIn"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used for built-in method references. */ /**
                                                        * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to query.
                                                        * @returns {Array} Returns the array of property names.
                                                        */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object)}var isProto=isPrototype(object),result=[];for(var key in object){if(!("constructor"==key&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key)}}return result}module.exports=baseKeysIn},{"./_isPrototype":186,"./_nativeKeysIn":203,"./isObject":251}],108:[function(require,module,exports){/**
       * The base implementation of `_.lt` which doesn't coerce arguments.
       *
       * @private
       * @param {*} value The value to compare.
       * @param {*} other The other value to compare.
       * @returns {boolean} Returns `true` if `value` is less than `other`,
       *  else `false`.
       */function baseLt(value,other){return value<other}module.exports=baseLt},{}],109:[function(require,module,exports){var baseEach=require("./_baseEach"),isArrayLike=require("./isArrayLike");/**
                                                   * The base implementation of `_.map` without support for iteratee shorthands.
                                                   *
                                                   * @private
                                                   * @param {Array|Object} collection The collection to iterate over.
                                                   * @param {Function} iteratee The function invoked per iteration.
                                                   * @returns {Array} Returns the new mapped array.
                                                   */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection)});return result}module.exports=baseMap},{"./_baseEach":82,"./isArrayLike":244}],110:[function(require,module,exports){var baseIsMatch=require("./_baseIsMatch"),getMatchData=require("./_getMatchData"),matchesStrictComparable=require("./_matchesStrictComparable");/**
                                                                            * The base implementation of `_.matches` which doesn't clone `source`.
                                                                            *
                                                                            * @private
                                                                            * @param {Object} source The object of property values to match.
                                                                            * @returns {Function} Returns the new spec function.
                                                                            */function baseMatches(source){var matchData=getMatchData(source);if(1==matchData.length&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1])}return function(object){return object===source||baseIsMatch(object,source,matchData)}}module.exports=baseMatches},{"./_baseIsMatch":100,"./_getMatchData":162,"./_matchesStrictComparable":199}],111:[function(require,module,exports){var baseIsEqual=require("./_baseIsEqual"),get=require("./get"),hasIn=require("./hasIn"),isKey=require("./_isKey"),isStrictComparable=require("./_isStrictComparable"),matchesStrictComparable=require("./_matchesStrictComparable"),toKey=require("./_toKey"),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for value comparisons. */ /**
                                       * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
                                       *
                                       * @private
                                       * @param {string} path The path of the property to get.
                                       * @param {*} srcValue The value to match.
                                       * @returns {Function} Returns the new spec function.
                                       */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue)}return function(object){var objValue=get(object,path);return objValue===void 0&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG)}}module.exports=baseMatchesProperty},{"./_baseIsEqual":97,"./_isKey":183,"./_isStrictComparable":187,"./_matchesStrictComparable":199,"./_toKey":223,"./get":238,"./hasIn":240}],112:[function(require,module,exports){var Stack=require("./_Stack"),assignMergeValue=require("./_assignMergeValue"),baseFor=require("./_baseFor"),baseMergeDeep=require("./_baseMergeDeep"),isObject=require("./isObject"),keysIn=require("./keysIn"),safeGet=require("./_safeGet");/**
                                            * The base implementation of `_.merge` without support for multiple sources.
                                            *
                                            * @private
                                            * @param {Object} object The destination object.
                                            * @param {Object} source The source object.
                                            * @param {number} srcIndex The index of `source`.
                                            * @param {Function} [customizer] The function to customize merged values.
                                            * @param {Object} [stack] Tracks traversed source values and their merged
                                            *  counterparts.
                                            */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return}baseFor(source,function(srcValue,key){if(isObject(srcValue)){stack||(stack=new Stack);baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack)}else{var newValue=customizer?customizer(safeGet(object,key),srcValue,key+"",object,source,stack):void 0;if(newValue===void 0){newValue=srcValue}assignMergeValue(object,key,newValue)}},keysIn)}module.exports=baseMerge},{"./_Stack":59,"./_assignMergeValue":74,"./_baseFor":87,"./_baseMergeDeep":113,"./_safeGet":209,"./isObject":251,"./keysIn":260}],113:[function(require,module,exports){var assignMergeValue=require("./_assignMergeValue"),cloneBuffer=require("./_cloneBuffer"),cloneTypedArray=require("./_cloneTypedArray"),copyArray=require("./_copyArray"),initCloneObject=require("./_initCloneObject"),isArguments=require("./isArguments"),isArray=require("./isArray"),isArrayLikeObject=require("./isArrayLikeObject"),isBuffer=require("./isBuffer"),isFunction=require("./isFunction"),isObject=require("./isObject"),isPlainObject=require("./isPlainObject"),isTypedArray=require("./isTypedArray"),safeGet=require("./_safeGet"),toPlainObject=require("./toPlainObject");/**
                                                       * A specialized version of `baseMerge` for arrays and objects which performs
                                                       * deep merges and tracks traversed objects enabling objects with circular
                                                       * references to be merged.
                                                       *
                                                       * @private
                                                       * @param {Object} object The destination object.
                                                       * @param {Object} source The source object.
                                                       * @param {string} key The key of the value to merge.
                                                       * @param {number} srcIndex The index of `source`.
                                                       * @param {Function} mergeFunc The function to merge values.
                                                       * @param {Function} [customizer] The function to customize assigned values.
                                                       * @param {Object} [stack] Tracks traversed source values and their merged
                                                       *  counterparts.
                                                       */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return}var newValue=customizer?customizer(objValue,srcValue,key+"",object,source,stack):void 0,isCommon=newValue===void 0;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue)}else if(isBuff){isCommon=!1;newValue=cloneBuffer(srcValue,!0)}else if(isTyped){isCommon=!1;newValue=cloneTypedArray(srcValue,!0)}else{newValue=[]}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue)}else if(!isObject(objValue)||srcIndex&&isFunction(objValue)){newValue=initCloneObject(srcValue)}}else{isCommon=!1}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack["delete"](srcValue)}assignMergeValue(object,key,newValue)}module.exports=baseMergeDeep},{"./_assignMergeValue":74,"./_cloneBuffer":135,"./_cloneTypedArray":139,"./_copyArray":142,"./_initCloneObject":179,"./_safeGet":209,"./isArguments":242,"./isArray":243,"./isArrayLikeObject":245,"./isBuffer":246,"./isFunction":248,"./isObject":251,"./isPlainObject":253,"./isTypedArray":257,"./toPlainObject":282}],114:[function(require,module,exports){var arrayMap=require("./_arrayMap"),baseIteratee=require("./_baseIteratee"),baseMap=require("./_baseMap"),baseSortBy=require("./_baseSortBy"),baseUnary=require("./_baseUnary"),compareMultiple=require("./_compareMultiple"),identity=require("./identity");/**
                                             * The base implementation of `_.orderBy` without param guards.
                                             *
                                             * @private
                                             * @param {Array|Object} collection The collection to iterate over.
                                             * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
                                             * @param {string[]} orders The sort orders of `iteratees`.
                                             * @returns {Array} Returns the new sorted array.
                                             */function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(baseIteratee));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value)});return{criteria:criteria,index:++index,value:value}});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders)})}module.exports=baseOrderBy},{"./_arrayMap":69,"./_baseIteratee":105,"./_baseMap":109,"./_baseSortBy":124,"./_baseUnary":127,"./_compareMultiple":141,"./identity":241}],115:[function(require,module,exports){var basePickBy=require("./_basePickBy"),hasIn=require("./hasIn");/**
                                       * The base implementation of `_.pick` without support for individual
                                       * property identifiers.
                                       *
                                       * @private
                                       * @param {Object} object The source object.
                                       * @param {string[]} paths The property paths to pick.
                                       * @returns {Object} Returns the new object.
                                       */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path)})}module.exports=basePick},{"./_basePickBy":116,"./hasIn":240}],116:[function(require,module,exports){var baseGet=require("./_baseGet"),baseSet=require("./_baseSet"),castPath=require("./_castPath");/**
                                              * The base implementation of  `_.pickBy` without support for iteratee shorthands.
                                              *
                                              * @private
                                              * @param {Object} object The source object.
                                              * @param {string[]} paths The property paths to pick.
                                              * @param {Function} predicate The function invoked per property.
                                              * @returns {Object} Returns the new object.
                                              */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value)}}return result}module.exports=basePickBy},{"./_baseGet":89,"./_baseSet":122,"./_castPath":133}],117:[function(require,module,exports){/**
       * The base implementation of `_.property` without support for deep paths.
       *
       * @private
       * @param {string} key The key of the property to get.
       * @returns {Function} Returns the new accessor function.
       */function baseProperty(key){return function(object){return null==object?void 0:object[key]}}module.exports=baseProperty},{}],118:[function(require,module,exports){var baseGet=require("./_baseGet");/**
                                            * A specialized version of `baseProperty` which supports deep paths.
                                            *
                                            * @private
                                            * @param {Array|string} path The path of the property to get.
                                            * @returns {Function} Returns the new accessor function.
                                            */function basePropertyDeep(path){return function(object){return baseGet(object,path)}}module.exports=basePropertyDeep},{"./_baseGet":89}],119:[function(require,module,exports){/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeMax=Math.max;/**
                                 * The base implementation of `_.range` and `_.rangeRight` which doesn't
                                 * coerce arguments.
                                 *
                                 * @private
                                 * @param {number} start The start of the range.
                                 * @param {number} end The end of the range.
                                 * @param {number} step The value to increment or decrement by.
                                 * @param {boolean} [fromRight] Specify iterating from right to left.
                                 * @returns {Array} Returns the range of numbers.
                                 */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step}return result}module.exports=baseRange},{}],120:[function(require,module,exports){/**
       * The base implementation of `_.reduce` and `_.reduceRight`, without support
       * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
       *
       * @private
       * @param {Array|Object} collection The collection to iterate over.
       * @param {Function} iteratee The function invoked per iteration.
       * @param {*} accumulator The initial value.
       * @param {boolean} initAccum Specify using the first or last element of
       *  `collection` as the initial value.
       * @param {Function} eachFunc The function to iterate over `collection`.
       * @returns {*} Returns the accumulated value.
       */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=!1,value):iteratee(accumulator,value,index,collection)});return accumulator}module.exports=baseReduce},{}],121:[function(require,module,exports){var identity=require("./identity"),overRest=require("./_overRest"),setToString=require("./_setToString");/**
                                                    * The base implementation of `_.rest` which doesn't validate or coerce arguments.
                                                    *
                                                    * @private
                                                    * @param {Function} func The function to apply a rest parameter to.
                                                    * @param {number} [start=func.length-1] The start position of the rest parameter.
                                                    * @returns {Function} Returns the new function.
                                                    */function baseRest(func,start){return setToString(overRest(func,start,identity),func+"")}module.exports=baseRest},{"./_overRest":207,"./_setToString":213,"./identity":241}],122:[function(require,module,exports){var assignValue=require("./_assignValue"),castPath=require("./_castPath"),isIndex=require("./_isIndex"),isObject=require("./isObject"),toKey=require("./_toKey");/**
                                        * The base implementation of `_.set`.
                                        *
                                        * @private
                                        * @param {Object} object The object to modify.
                                        * @param {Array|string} path The path of the property to set.
                                        * @param {*} value The value to set.
                                        * @param {Function} [customizer] The function to customize path creation.
                                        * @returns {Object} Returns `object`.
                                        */function baseSet(object,path,value,customizer){if(!isObject(object)){return object}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(null!=nested&&++index<length){var key=toKey(path[index]),newValue=value;if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):void 0;if(newValue===void 0){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{}}}assignValue(nested,key,newValue);nested=nested[key]}return object}module.exports=baseSet},{"./_assignValue":75,"./_castPath":133,"./_isIndex":181,"./_toKey":223,"./isObject":251}],123:[function(require,module,exports){var constant=require("./constant"),defineProperty=require("./_defineProperty"),identity=require("./identity"),baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,"toString",{configurable:!0,enumerable:!1,value:constant(string),writable:!0})};/**
                                             * The base implementation of `setToString` without support for hot loop shorting.
                                             *
                                             * @private
                                             * @param {Function} func The function to modify.
                                             * @param {Function} string The `toString` result.
                                             * @returns {Function} Returns `func`.
                                             */module.exports=baseSetToString},{"./_defineProperty":153,"./constant":228,"./identity":241}],124:[function(require,module,exports){/**
       * The base implementation of `_.sortBy` which uses `comparer` to define the
       * sort order of `array` and replaces criteria objects with their corresponding
       * values.
       *
       * @private
       * @param {Array} array The array to sort.
       * @param {Function} comparer The function to define sort order.
       * @returns {Array} Returns `array`.
       */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value}return array}module.exports=baseSortBy},{}],125:[function(require,module,exports){/**
       * The base implementation of `_.times` without support for iteratee shorthands
       * or max array length checks.
       *
       * @private
       * @param {number} n The number of times to invoke `iteratee`.
       * @param {Function} iteratee The function invoked per iteration.
       * @returns {Array} Returns the array of results.
       */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index)}return result}module.exports=baseTimes},{}],126:[function(require,module,exports){var Symbol=require("./_Symbol"),arrayMap=require("./_arrayMap"),isArray=require("./isArray"),isSymbol=require("./isSymbol"),INFINITY=1/0,symbolProto=Symbol?Symbol.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;/** Used as references for various `Number` constants. */ /**
                                                                            * The base implementation of `_.toString` which doesn't convert nullish
                                                                            * values to empty strings.
                                                                            *
                                                                            * @private
                                                                            * @param {*} value The value to process.
                                                                            * @returns {string} Returns the string.
                                                                            */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
if("string"==typeof value){return value}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
return arrayMap(value,baseToString)+""}if(isSymbol(value)){return symbolToString?symbolToString.call(value):""}var result=value+"";return"0"==result&&1/value==-INFINITY?"-0":result}module.exports=baseToString},{"./_Symbol":60,"./_arrayMap":69,"./isArray":243,"./isSymbol":256}],127:[function(require,module,exports){/**
       * The base implementation of `_.unary` without support for storing metadata.
       *
       * @private
       * @param {Function} func The function to cap arguments for.
       * @returns {Function} Returns the new capped function.
       */function baseUnary(func){return function(value){return func(value)}}module.exports=baseUnary},{}],128:[function(require,module,exports){var SetCache=require("./_SetCache"),arrayIncludes=require("./_arrayIncludes"),arrayIncludesWith=require("./_arrayIncludesWith"),cacheHas=require("./_cacheHas"),createSet=require("./_createSet"),setToArray=require("./_setToArray"),LARGE_ARRAY_SIZE=200;/** Used as the size to enable large array optimizations. */ /**
                                   * The base implementation of `_.uniqBy` without support for iteratee shorthands.
                                   *
                                   * @private
                                   * @param {Array} array The array to inspect.
                                   * @param {Function} [iteratee] The iteratee invoked per element.
                                   * @param {Function} [comparator] The comparator invoked per element.
                                   * @returns {Array} Returns the new duplicate free array.
                                   */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=!0,result=[],seen=result;if(comparator){isCommon=!1;includes=arrayIncludesWith}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set)}isCommon=!1;includes=cacheHas;seen=new SetCache}else{seen=iteratee?[]:result}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||0!==value?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer}}if(iteratee){seen.push(computed)}result.push(value)}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed)}result.push(value)}}return result}module.exports=baseUniq},{"./_SetCache":58,"./_arrayIncludes":66,"./_arrayIncludesWith":67,"./_cacheHas":131,"./_createSet":152,"./_setToArray":212}],129:[function(require,module,exports){var arrayMap=require("./_arrayMap");/**
                                              * The base implementation of `_.values` and `_.valuesIn` which creates an
                                              * array of `object` property values corresponding to the property names
                                              * of `props`.
                                              *
                                              * @private
                                              * @param {Object} object The object to query.
                                              * @param {Array} props The property names to get values for.
                                              * @returns {Object} Returns the array of property values.
                                              */function baseValues(object,props){return arrayMap(props,function(key){return object[key]})}module.exports=baseValues},{"./_arrayMap":69}],130:[function(require,module,exports){/**
       * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
       *
       * @private
       * @param {Array} props The property identifiers.
       * @param {Array} values The property values.
       * @param {Function} assignFunc The function to assign values.
       * @returns {Object} Returns the new object.
       */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:void 0;assignFunc(result,props[index],value)}return result}module.exports=baseZipObject},{}],131:[function(require,module,exports){/**
       * Checks if a `cache` value for `key` exists.
       *
       * @private
       * @param {Object} cache The cache to query.
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */function cacheHas(cache,key){return cache.has(key)}module.exports=cacheHas},{}],132:[function(require,module,exports){var identity=require("./identity");/**
                                             * Casts `value` to `identity` if it's not a function.
                                             *
                                             * @private
                                             * @param {*} value The value to inspect.
                                             * @returns {Function} Returns cast function.
                                             */function castFunction(value){return"function"==typeof value?value:identity}module.exports=castFunction},{"./identity":241}],133:[function(require,module,exports){var isArray=require("./isArray"),isKey=require("./_isKey"),stringToPath=require("./_stringToPath"),toString=require("./toString");/**
                                             * Casts `value` to a path array if it's not one.
                                             *
                                             * @private
                                             * @param {*} value The value to inspect.
                                             * @param {Object} [object] The object to query keys on.
                                             * @returns {Array} Returns the cast property path array.
                                             */function castPath(value,object){if(isArray(value)){return value}return isKey(value,object)?[value]:stringToPath(toString(value))}module.exports=castPath},{"./_isKey":183,"./_stringToPath":222,"./isArray":243,"./toString":283}],134:[function(require,module,exports){var Uint8Array=require("./_Uint8Array");/**
                                                  * Creates a clone of `arrayBuffer`.
                                                  *
                                                  * @private
                                                  * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
                                                  * @returns {ArrayBuffer} Returns the cloned array buffer.
                                                  */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result}module.exports=cloneArrayBuffer},{"./_Uint8Array":61}],135:[function(require,module,exports){var root=require("./_root"),freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,Buffer=moduleExports?root.Buffer:void 0,allocUnsafe=Buffer?Buffer.allocUnsafe:void 0;/** Detect free variable `exports`. */ /**
                                                                  * Creates a clone of  `buffer`.
                                                                  *
                                                                  * @private
                                                                  * @param {Buffer} buffer The buffer to clone.
                                                                  * @param {boolean} [isDeep] Specify a deep clone.
                                                                  * @returns {Buffer} Returns the cloned buffer.
                                                                  */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice()}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result}module.exports=cloneBuffer},{"./_root":208}],136:[function(require,module,exports){var cloneArrayBuffer=require("./_cloneArrayBuffer");/**
                                                              * Creates a clone of `dataView`.
                                                              *
                                                              * @private
                                                              * @param {Object} dataView The data view to clone.
                                                              * @param {boolean} [isDeep] Specify a deep clone.
                                                              * @returns {Object} Returns the cloned data view.
                                                              */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength)}module.exports=cloneDataView},{"./_cloneArrayBuffer":134}],137:[function(require,module,exports){/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/**
                                                                                                  * Creates a clone of `regexp`.
                                                                                                  *
                                                                                                  * @private
                                                                                                  * @param {Object} regexp The regexp to clone.
                                                                                                  * @returns {Object} Returns the cloned regexp.
                                                                                                  */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result}module.exports=cloneRegExp},{}],138:[function(require,module,exports){var Symbol=require("./_Symbol"),symbolProto=Symbol?Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;/** Used to convert symbols to primitives and strings. */ /**
                                                                          * Creates a clone of the `symbol` object.
                                                                          *
                                                                          * @private
                                                                          * @param {Object} symbol The symbol object to clone.
                                                                          * @returns {Object} Returns the cloned symbol object.
                                                                          */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{}}module.exports=cloneSymbol},{"./_Symbol":60}],139:[function(require,module,exports){var cloneArrayBuffer=require("./_cloneArrayBuffer");/**
                                                              * Creates a clone of `typedArray`.
                                                              *
                                                              * @private
                                                              * @param {Object} typedArray The typed array to clone.
                                                              * @param {boolean} [isDeep] Specify a deep clone.
                                                              * @returns {Object} Returns the cloned typed array.
                                                              */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length)}module.exports=cloneTypedArray},{"./_cloneArrayBuffer":134}],140:[function(require,module,exports){var isSymbol=require("./isSymbol");/**
                                             * Compares values to sort them in ascending order.
                                             *
                                             * @private
                                             * @param {*} value The value to compare.
                                             * @param {*} other The other value to compare.
                                             * @returns {number} Returns the sort order indicator for `value`.
                                             */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==void 0,valIsNull=null===value,valIsReflexive=value===value,valIsSymbol=isSymbol(value),othIsDefined=other!==void 0,othIsNull=null===other,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return-1}}return 0}module.exports=compareAscending},{"./isSymbol":256}],141:[function(require,module,exports){var compareAscending=require("./_compareAscending");/**
                                                              * Used by `_.orderBy` to compare multiple properties of a value to another
                                                              * and stable sort them.
                                                              *
                                                              * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
                                                              * specify an order of "desc" for descending or "asc" for ascending sort order
                                                              * of corresponding values.
                                                              *
                                                              * @private
                                                              * @param {Object} object The object to compare.
                                                              * @param {Object} other The other object to compare.
                                                              * @param {boolean[]|string[]} orders The order to sort by for each property.
                                                              * @returns {number} Returns the sort order indicator for `object`.
                                                              */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result}var order=orders[index];return result*("desc"==order?-1:1)}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
// that causes it, under certain circumstances, to provide the same value for
// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
// for more details.
//
// This also ensures a stable sort in V8 and other engines.
// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
return object.index-other.index}module.exports=compareMultiple},{"./_compareAscending":140}],142:[function(require,module,exports){/**
       * Copies the values of `source` to `array`.
       *
       * @private
       * @param {Array} source The array to copy values from.
       * @param {Array} [array=[]] The array to copy values to.
       * @returns {Array} Returns `array`.
       */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index]}return array}module.exports=copyArray},{}],143:[function(require,module,exports){var assignValue=require("./_assignValue"),baseAssignValue=require("./_baseAssignValue");/**
                                                            * Copies properties of `source` to `object`.
                                                            *
                                                            * @private
                                                            * @param {Object} source The object to copy properties from.
                                                            * @param {Array} props The property identifiers to copy.
                                                            * @param {Object} [object={}] The object to copy properties to.
                                                            * @param {Function} [customizer] The function to customize copied values.
                                                            * @returns {Object} Returns `object`.
                                                            */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index],newValue=customizer?customizer(object[key],source[key],key,object,source):void 0;if(newValue===void 0){newValue=source[key]}if(isNew){baseAssignValue(object,key,newValue)}else{assignValue(object,key,newValue)}}return object}module.exports=copyObject},{"./_assignValue":75,"./_baseAssignValue":79}],144:[function(require,module,exports){var copyObject=require("./_copyObject"),getSymbols=require("./_getSymbols");/**
                                                  * Copies own symbols of `source` to `object`.
                                                  *
                                                  * @private
                                                  * @param {Object} source The object to copy symbols from.
                                                  * @param {Object} [object={}] The object to copy symbols to.
                                                  * @returns {Object} Returns `object`.
                                                  */function copySymbols(source,object){return copyObject(source,getSymbols(source),object)}module.exports=copySymbols},{"./_copyObject":143,"./_getSymbols":166}],145:[function(require,module,exports){var copyObject=require("./_copyObject"),getSymbolsIn=require("./_getSymbolsIn");/**
                                                      * Copies own and inherited symbols of `source` to `object`.
                                                      *
                                                      * @private
                                                      * @param {Object} source The object to copy symbols from.
                                                      * @param {Object} [object={}] The object to copy symbols to.
                                                      * @returns {Object} Returns `object`.
                                                      */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object)}module.exports=copySymbolsIn},{"./_copyObject":143,"./_getSymbolsIn":167}],146:[function(require,module,exports){var root=require("./_root"),coreJsData=root["__core-js_shared__"];/** Used to detect overreaching core-js shims. */module.exports=coreJsData},{"./_root":208}],147:[function(require,module,exports){var baseRest=require("./_baseRest"),isIterateeCall=require("./_isIterateeCall");/**
                                                          * Creates a function like `_.assign`.
                                                          *
                                                          * @private
                                                          * @param {Function} assigner The function to assign values.
                                                          * @returns {Function} Returns the new assigner function.
                                                          */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=1<length?sources[length-1]:void 0,guard=2<length?sources[2]:void 0;customizer=3<assigner.length&&"function"==typeof customizer?(length--,customizer):void 0;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=3>length?void 0:customizer;length=1}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer)}}return object})}module.exports=createAssigner},{"./_baseRest":121,"./_isIterateeCall":182}],148:[function(require,module,exports){var isArrayLike=require("./isArrayLike");/**
                                                   * Creates a `baseEach` or `baseEachRight` function.
                                                   *
                                                   * @private
                                                   * @param {Function} eachFunc The function to iterate over a collection.
                                                   * @param {boolean} [fromRight] Specify iterating from right to left.
                                                   * @returns {Function} Returns the new base function.
                                                   */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(null==collection){return collection}if(!isArrayLike(collection)){return eachFunc(collection,iteratee)}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(!1===iteratee(iterable[index],index,iterable)){break}}return collection}}module.exports=createBaseEach},{"./isArrayLike":244}],149:[function(require,module,exports){/**
       * Creates a base function for methods like `_.forIn` and `_.forOwn`.
       *
       * @private
       * @param {boolean} [fromRight] Specify iterating from right to left.
       * @returns {Function} Returns the new base function.
       */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(!1===iteratee(iterable[key],key,iterable)){break}}return object}}module.exports=createBaseFor},{}],150:[function(require,module,exports){var baseIteratee=require("./_baseIteratee"),isArrayLike=require("./isArrayLike"),keys=require("./keys");/**
                                     * Creates a `_.find` or `_.findLast` function.
                                     *
                                     * @private
                                     * @param {Function} findIndexFunc The function to find the collection index.
                                     * @returns {Function} Returns the new find function.
                                     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=baseIteratee(predicate,3);collection=keys(collection);predicate=function(key){return iteratee(iterable[key],key,iterable)}}var index=findIndexFunc(collection,predicate,fromIndex);return-1<index?iterable[iteratee?collection[index]:index]:void 0}}module.exports=createFind},{"./_baseIteratee":105,"./isArrayLike":244,"./keys":259}],151:[function(require,module,exports){var baseRange=require("./_baseRange"),isIterateeCall=require("./_isIterateeCall"),toFinite=require("./toFinite");/**
                                             * Creates a `_.range` or `_.rangeRight` function.
                                             *
                                             * @private
                                             * @param {boolean} [fromRight] Specify iterating from right to left.
                                             * @returns {Function} Returns the new range function.
                                             */function createRange(fromRight){return function(start,end,step){if(step&&"number"!=typeof step&&isIterateeCall(start,end,step)){end=step=void 0}// Ensure the sign of `-0` is preserved.
start=toFinite(start);if(end===void 0){end=start;start=0}else{end=toFinite(end)}step=step===void 0?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight)}}module.exports=createRange},{"./_baseRange":119,"./_isIterateeCall":182,"./toFinite":279}],152:[function(require,module,exports){var Set=require("./_Set"),noop=require("./noop"),setToArray=require("./_setToArray"),INFINITY=1/0,createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values)};/** Used as references for various `Number` constants. */module.exports=createSet},{"./_Set":57,"./_setToArray":212,"./noop":269}],153:[function(require,module,exports){var getNative=require("./_getNative"),defineProperty=function(){try{var func=getNative(Object,"defineProperty");func({},"",{});return func}catch(e){}}();module.exports=defineProperty},{"./_getNative":163}],154:[function(require,module,exports){var SetCache=require("./_SetCache"),arraySome=require("./_arraySome"),cacheHas=require("./_cacheHas"),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for value comparisons. */ /**
                                       * A specialized version of `baseIsEqualDeep` for arrays with support for
                                       * partial deep comparisons.
                                       *
                                       * @private
                                       * @param {Array} array The array to compare.
                                       * @param {Array} other The other array to compare.
                                       * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
                                       * @param {Function} customizer The function to customize comparisons.
                                       * @param {Function} equalFunc The function to determine equivalents of values.
                                       * @param {Object} stack Tracks traversed `array` and `other` objects.
                                       * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
                                       */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return!1}// Assume cyclic values are equal.
var stacked=stack.get(array);if(stacked&&stack.get(other)){return stacked==other}var index=-1,result=!0,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache:void 0;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack)}if(compared!==void 0){if(compared){continue}result=!1;break}// Recursively compare arrays (susceptible to call stack limits).
if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex)}})){result=!1;break}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=!1;break}}stack["delete"](array);stack["delete"](other);return result}module.exports=equalArrays},{"./_SetCache":58,"./_arraySome":72,"./_cacheHas":131}],155:[function(require,module,exports){var Symbol=require("./_Symbol"),Uint8Array=require("./_Uint8Array"),eq=require("./eq"),equalArrays=require("./_equalArrays"),mapToArray=require("./_mapToArray"),setToArray=require("./_setToArray"),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2,boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",symbolProto=Symbol?Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;/** Used to compose bitmasks for value comparisons. */ /**
                                                                          * A specialized version of `baseIsEqualDeep` for comparing objects of
                                                                          * the same `toStringTag`.
                                                                          *
                                                                          * **Note:** This function only supports comparing values with tags of
                                                                          * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
                                                                          *
                                                                          * @private
                                                                          * @param {Object} object The object to compare.
                                                                          * @param {Object} other The other object to compare.
                                                                          * @param {string} tag The `toStringTag` of the objects to compare.
                                                                          * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
                                                                          * @param {Function} customizer The function to customize comparisons.
                                                                          * @param {Function} equalFunc The function to determine equivalents of values.
                                                                          * @param {Object} stack Tracks traversed `object` and `other` objects.
                                                                          * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
                                                                          */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return!1}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return!1}return!0;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
// Invalid dates are coerced to `NaN`.
return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// for more details.
return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return!1}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked){return stacked==other}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack["delete"](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other)}}return!1}module.exports=equalByTag},{"./_Symbol":60,"./_Uint8Array":61,"./_equalArrays":154,"./_mapToArray":198,"./_setToArray":212,"./eq":231}],156:[function(require,module,exports){var getAllKeys=require("./_getAllKeys"),COMPARE_PARTIAL_FLAG=1,objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used to compose bitmasks for value comparisons. */ /**
                                                        * A specialized version of `baseIsEqualDeep` for objects with support for
                                                        * partial deep comparisons.
                                                        *
                                                        * @private
                                                        * @param {Object} object The object to compare.
                                                        * @param {Object} other The other object to compare.
                                                        * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
                                                        * @param {Function} customizer The function to customize comparisons.
                                                        * @param {Function} equalFunc The function to determine equivalents of values.
                                                        * @param {Object} stack Tracks traversed `object` and `other` objects.
                                                        * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
                                                        */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return!1}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return!1}}// Assume cyclic values are equal.
var stacked=stack.get(object);if(stacked&&stack.get(other)){return stacked==other}var result=!0;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack)}// Recursively compare objects (susceptible to call stack limits).
if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=!1;break}skipCtor||(skipCtor="constructor"==key)}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
if(objCtor!=othCtor&&"constructor"in object&&"constructor"in other&&!("function"==typeof objCtor&&objCtor instanceof objCtor&&"function"==typeof othCtor&&othCtor instanceof othCtor)){result=!1}}stack["delete"](object);stack["delete"](other);return result}module.exports=equalObjects},{"./_getAllKeys":159}],157:[function(require,module,exports){var flatten=require("./flatten"),overRest=require("./_overRest"),setToString=require("./_setToString");/**
                                                    * A specialized version of `baseRest` which flattens the rest array.
                                                    *
                                                    * @private
                                                    * @param {Function} func The function to apply a rest parameter to.
                                                    * @returns {Function} Returns the new function.
                                                    */function flatRest(func){return setToString(overRest(func,void 0,flatten),func+"")}module.exports=flatRest},{"./_overRest":207,"./_setToString":213,"./flatten":235}],158:[function(require,module,exports){(function(global){/** Detect free variable `global` from Node.js. */var freeGlobal="object"==typeof global&&global&&global.Object===Object&&global;module.exports=freeGlobal}).call(this,"undefined"!==typeof global?global:"undefined"!==typeof self?self:"undefined"!==typeof window?window:{})},{}],159:[function(require,module,exports){var baseGetAllKeys=require("./_baseGetAllKeys"),getSymbols=require("./_getSymbols"),keys=require("./keys");/**
                                     * Creates an array of own enumerable property names and symbols of `object`.
                                     *
                                     * @private
                                     * @param {Object} object The object to query.
                                     * @returns {Array} Returns the array of property names and symbols.
                                     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols)}module.exports=getAllKeys},{"./_baseGetAllKeys":90,"./_getSymbols":166,"./keys":259}],160:[function(require,module,exports){var baseGetAllKeys=require("./_baseGetAllKeys"),getSymbolsIn=require("./_getSymbolsIn"),keysIn=require("./keysIn");/**
                                         * Creates an array of own and inherited enumerable property names and
                                         * symbols of `object`.
                                         *
                                         * @private
                                         * @param {Object} object The object to query.
                                         * @returns {Array} Returns the array of property names and symbols.
                                         */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn)}module.exports=getAllKeysIn},{"./_baseGetAllKeys":90,"./_getSymbolsIn":167,"./keysIn":260}],161:[function(require,module,exports){var isKeyable=require("./_isKeyable");/**
                                                * Gets the data for `map`.
                                                *
                                                * @private
                                                * @param {Object} map The map to query.
                                                * @param {string} key The reference key.
                                                * @returns {*} Returns the map data.
                                                */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data["string"==typeof key?"string":"hash"]:data.map}module.exports=getMapData},{"./_isKeyable":184}],162:[function(require,module,exports){var isStrictComparable=require("./_isStrictComparable"),keys=require("./keys");/**
                                     * Gets the property names, values, and compare flags of `object`.
                                     *
                                     * @private
                                     * @param {Object} object The object to query.
                                     * @returns {Array} Returns the match data of `object`.
                                     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)]}return result}module.exports=getMatchData},{"./_isStrictComparable":187,"./keys":259}],163:[function(require,module,exports){var baseIsNative=require("./_baseIsNative"),getValue=require("./_getValue");/**
                                              * Gets the native function at `key` of `object`.
                                              *
                                              * @private
                                              * @param {Object} object The object to query.
                                              * @param {string} key The key of the method to get.
                                              * @returns {*} Returns the function if it's native, else `undefined`.
                                              */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:void 0}module.exports=getNative},{"./_baseIsNative":102,"./_getValue":169}],164:[function(require,module,exports){var overArg=require("./_overArg"),getPrototype=overArg(Object.getPrototypeOf,Object);/** Built-in value references. */module.exports=getPrototype},{"./_overArg":206}],165:[function(require,module,exports){var Symbol=require("./_Symbol"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag=Symbol?Symbol.toStringTag:void 0;/** Used for built-in method references. */ /**
                                                                     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
                                                                     *
                                                                     * @private
                                                                     * @param {*} value The value to query.
                                                                     * @returns {string} Returns the raw `toStringTag`.
                                                                     */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag}else{delete value[symToStringTag]}}return result}module.exports=getRawTag},{"./_Symbol":60}],166:[function(require,module,exports){var arrayFilter=require("./_arrayFilter"),stubArray=require("./stubArray"),objectProto=Object.prototype,propertyIsEnumerable=objectProto.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols,getSymbols=!nativeGetSymbols?stubArray:function(object){if(null==object){return[]}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol)})};/** Used for built-in method references. */module.exports=getSymbols},{"./_arrayFilter":65,"./stubArray":277}],167:[function(require,module,exports){var arrayPush=require("./_arrayPush"),getPrototype=require("./_getPrototype"),getSymbols=require("./_getSymbols"),stubArray=require("./stubArray"),nativeGetSymbols=Object.getOwnPropertySymbols,getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object)}return result};/* Built-in method references for those with the same name as other `lodash` methods. */module.exports=getSymbolsIn},{"./_arrayPush":70,"./_getPrototype":164,"./_getSymbols":166,"./stubArray":277}],168:[function(require,module,exports){var DataView=require("./_DataView"),Map=require("./_Map"),Promise=require("./_Promise"),Set=require("./_Set"),WeakMap=require("./_WeakMap"),baseGetTag=require("./_baseGetTag"),toSource=require("./_toSource"),mapTag="[object Map]",objectTag="[object Object]",promiseTag="[object Promise]",setTag="[object Set]",weakMapTag="[object WeakMap]",dataViewTag="[object DataView]",dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap),getTag=baseGetTag;/** `Object#toString` result references. */ // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map)!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set)!=setTag||WeakMap&&getTag(new WeakMap)!=weakMapTag){getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result}}module.exports=getTag},{"./_DataView":51,"./_Map":54,"./_Promise":56,"./_Set":57,"./_WeakMap":62,"./_baseGetTag":91,"./_toSource":224}],169:[function(require,module,exports){/**
       * Gets the value at `key` of `object`.
       *
       * @private
       * @param {Object} [object] The object to query.
       * @param {string} key The key of the property to get.
       * @returns {*} Returns the property value.
       */function getValue(object,key){return null==object?void 0:object[key]}module.exports=getValue},{}],170:[function(require,module,exports){var castPath=require("./_castPath"),isArguments=require("./isArguments"),isArray=require("./isArray"),isIndex=require("./_isIndex"),isLength=require("./isLength"),toKey=require("./_toKey");/**
                                        * Checks if `path` exists on `object`.
                                        *
                                        * @private
                                        * @param {Object} object The object to query.
                                        * @param {Array|string} path The path to check.
                                        * @param {Function} hasFunc The function to check properties.
                                        * @returns {boolean} Returns `true` if `path` exists, else `false`.
                                        */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=!1;while(++index<length){var key=toKey(path[index]);if(!(result=null!=object&&hasFunc(object,key))){break}object=object[key]}if(result||++index!=length){return result}length=null==object?0:object.length;return!!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object))}module.exports=hasPath},{"./_castPath":133,"./_isIndex":181,"./_toKey":223,"./isArguments":242,"./isArray":243,"./isLength":249}],171:[function(require,module,exports){/** Used to compose unicode character classes. */var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsVarRange="\\ufe0e\\ufe0f",rsZWJ="\\u200d",reHasUnicode=RegExp("["+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+"]");/** Used to compose unicode capture groups. */ /**
                                                                                                 * Checks if `string` contains Unicode symbols.
                                                                                                 *
                                                                                                 * @private
                                                                                                 * @param {string} string The string to inspect.
                                                                                                 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
                                                                                                 */function hasUnicode(string){return reHasUnicode.test(string)}module.exports=hasUnicode},{}],172:[function(require,module,exports){var nativeCreate=require("./_nativeCreate");/**
                                                      * Removes all key-value entries from the hash.
                                                      *
                                                      * @private
                                                      * @name clear
                                                      * @memberOf Hash
                                                      */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0}module.exports=hashClear},{"./_nativeCreate":201}],173:[function(require,module,exports){/**
       * Removes `key` and its value from the hash.
       *
       * @private
       * @name delete
       * @memberOf Hash
       * @param {Object} hash The hash to modify.
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result}module.exports=hashDelete},{}],174:[function(require,module,exports){var nativeCreate=require("./_nativeCreate"),HASH_UNDEFINED="__lodash_hash_undefined__",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used to stand-in for `undefined` hash values. */ /**
                                                        * Gets the hash value for `key`.
                                                        *
                                                        * @private
                                                        * @name get
                                                        * @memberOf Hash
                                                        * @param {string} key The key of the value to get.
                                                        * @returns {*} Returns the entry value.
                                                        */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?void 0:result}return hasOwnProperty.call(data,key)?data[key]:void 0}module.exports=hashGet},{"./_nativeCreate":201}],175:[function(require,module,exports){var nativeCreate=require("./_nativeCreate"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used for built-in method references. */ /**
                                                        * Checks if a hash value for `key` exists.
                                                        *
                                                        * @private
                                                        * @name has
                                                        * @memberOf Hash
                                                        * @param {string} key The key of the entry to check.
                                                        * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
                                                        */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==void 0:hasOwnProperty.call(data,key)}module.exports=hashHas},{"./_nativeCreate":201}],176:[function(require,module,exports){var nativeCreate=require("./_nativeCreate"),HASH_UNDEFINED="__lodash_hash_undefined__";/** Used to stand-in for `undefined` hash values. */ /**
                                                         * Sets the hash `key` to `value`.
                                                         *
                                                         * @private
                                                         * @name set
                                                         * @memberOf Hash
                                                         * @param {string} key The key of the value to set.
                                                         * @param {*} value The value to set.
                                                         * @returns {Object} Returns the hash instance.
                                                         */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===void 0?HASH_UNDEFINED:value;return this}module.exports=hashSet},{"./_nativeCreate":201}],177:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** Used to check objects for own properties. */ /**
                                                        * Initializes an array clone.
                                                        *
                                                        * @private
                                                        * @param {Array} array The array to clone.
                                                        * @returns {Array} Returns the initialized clone.
                                                        */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
if(length&&"string"==typeof array[0]&&hasOwnProperty.call(array,"index")){result.index=array.index;result.input=array.input}return result}module.exports=initCloneArray},{}],178:[function(require,module,exports){var cloneArrayBuffer=require("./_cloneArrayBuffer"),cloneDataView=require("./_cloneDataView"),cloneRegExp=require("./_cloneRegExp"),cloneSymbol=require("./_cloneSymbol"),cloneTypedArray=require("./_cloneTypedArray"),boolTag="[object Boolean]",dateTag="[object Date]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]";/** `Object#toString` result references. */ /**
                                               * Initializes an object clone based on its `toStringTag`.
                                               *
                                               * **Note:** This function only supports cloning values with tags of
                                               * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
                                               *
                                               * @private
                                               * @param {Object} object The object to clone.
                                               * @param {string} tag The `toStringTag` of the object to clone.
                                               * @param {boolean} [isDeep] Specify a deep clone.
                                               * @returns {Object} Returns the initialized clone.
                                               */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor;case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor;case symbolTag:return cloneSymbol(object);}}module.exports=initCloneByTag},{"./_cloneArrayBuffer":134,"./_cloneDataView":136,"./_cloneRegExp":137,"./_cloneSymbol":138,"./_cloneTypedArray":139}],179:[function(require,module,exports){var baseCreate=require("./_baseCreate"),getPrototype=require("./_getPrototype"),isPrototype=require("./_isPrototype");/**
                                                    * Initializes an object clone.
                                                    *
                                                    * @private
                                                    * @param {Object} object The object to clone.
                                                    * @returns {Object} Returns the initialized clone.
                                                    */function initCloneObject(object){return"function"==typeof object.constructor&&!isPrototype(object)?baseCreate(getPrototype(object)):{}}module.exports=initCloneObject},{"./_baseCreate":81,"./_getPrototype":164,"./_isPrototype":186}],180:[function(require,module,exports){var Symbol=require("./_Symbol"),isArguments=require("./isArguments"),isArray=require("./isArray"),spreadableSymbol=Symbol?Symbol.isConcatSpreadable:void 0;/** Built-in value references. */ /**
                                                                              * Checks if `value` is a flattenable `arguments` object or array.
                                                                              *
                                                                              * @private
                                                                              * @param {*} value The value to check.
                                                                              * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
                                                                              */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol])}module.exports=isFlattenable},{"./_Symbol":60,"./isArguments":242,"./isArray":243}],181:[function(require,module,exports){/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER=9007199254740991,reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to detect unsigned integer values. */ /**
                                          * Checks if `value` is a valid array-like index.
                                          *
                                          * @private
                                          * @param {*} value The value to check.
                                          * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
                                          * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
                                          */function isIndex(value,length){var type=typeof value;length=null==length?MAX_SAFE_INTEGER:length;return!!length&&("number"==type||"symbol"!=type&&reIsUint.test(value))&&-1<value&&0==value%1&&value<length}module.exports=isIndex},{}],182:[function(require,module,exports){var eq=require("./eq"),isArrayLike=require("./isArrayLike"),isIndex=require("./_isIndex"),isObject=require("./isObject");/**
                                             * Checks if the given arguments are from an iteratee call.
                                             *
                                             * @private
                                             * @param {*} value The potential iteratee value argument.
                                             * @param {*} index The potential iteratee index or key argument.
                                             * @param {*} object The potential iteratee object argument.
                                             * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
                                             *  else `false`.
                                             */function isIterateeCall(value,index,object){if(!isObject(object)){return!1}var type=typeof index;if("number"==type?isArrayLike(object)&&isIndex(index,object.length):"string"==type&&index in object){return eq(object[index],value)}return!1}module.exports=isIterateeCall},{"./_isIndex":181,"./eq":231,"./isArrayLike":244,"./isObject":251}],183:[function(require,module,exports){var isArray=require("./isArray"),isSymbol=require("./isSymbol"),reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;/** Used to match property names within property paths. */ /**
                                    * Checks if `value` is a property name and not a property path.
                                    *
                                    * @private
                                    * @param {*} value The value to check.
                                    * @param {Object} [object] The object to query keys on.
                                    * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
                                    */function isKey(value,object){if(isArray(value)){return!1}var type=typeof value;if("number"==type||"symbol"==type||"boolean"==type||null==value||isSymbol(value)){return!0}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||null!=object&&value in Object(object)}module.exports=isKey},{"./isArray":243,"./isSymbol":256}],184:[function(require,module,exports){/**
       * Checks if `value` is suitable for use as unique object key.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
       */function isKeyable(value){var type=typeof value;return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value}module.exports=isKeyable},{}],185:[function(require,module,exports){var coreJsData=require("./_coreJsData"),maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();/** Used to detect methods masquerading as native. */ /**
            * Checks if `func` has its source masked.
            *
            * @private
            * @param {Function} func The function to check.
            * @returns {boolean} Returns `true` if `func` is masked, else `false`.
            */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func}module.exports=isMasked},{"./_coreJsData":146}],186:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype;/**
                                                                                      * Checks if `value` is likely a prototype object.
                                                                                      *
                                                                                      * @private
                                                                                      * @param {*} value The value to check.
                                                                                      * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
                                                                                      */function isPrototype(value){var Ctor=value&&value.constructor,proto="function"==typeof Ctor&&Ctor.prototype||objectProto;return value===proto}module.exports=isPrototype},{}],187:[function(require,module,exports){var isObject=require("./isObject");/**
                                             * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
                                             *
                                             * @private
                                             * @param {*} value The value to check.
                                             * @returns {boolean} Returns `true` if `value` if suitable for strict
                                             *  equality comparisons, else `false`.
                                             */function isStrictComparable(value){return value===value&&!isObject(value)}module.exports=isStrictComparable},{"./isObject":251}],188:[function(require,module,exports){/**
       * Removes all key-value entries from the list cache.
       *
       * @private
       * @name clear
       * @memberOf ListCache
       */function listCacheClear(){this.__data__=[];this.size=0}module.exports=listCacheClear},{}],189:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf"),arrayProto=Array.prototype,splice=arrayProto.splice;/** Used for built-in method references. */ /**
                                       * Removes `key` and its value from the list cache.
                                       *
                                       * @private
                                       * @name delete
                                       * @memberOf ListCache
                                       * @param {string} key The key of the value to remove.
                                       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
                                       */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(0>index){return!1}var lastIndex=data.length-1;if(index==lastIndex){data.pop()}else{splice.call(data,index,1)}--this.size;return!0}module.exports=listCacheDelete},{"./_assocIndexOf":76}],190:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");/**
                                                      * Gets the list cache value for `key`.
                                                      *
                                                      * @private
                                                      * @name get
                                                      * @memberOf ListCache
                                                      * @param {string} key The key of the value to get.
                                                      * @returns {*} Returns the entry value.
                                                      */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return 0>index?void 0:data[index][1]}module.exports=listCacheGet},{"./_assocIndexOf":76}],191:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");/**
                                                      * Checks if a list cache value for `key` exists.
                                                      *
                                                      * @private
                                                      * @name has
                                                      * @memberOf ListCache
                                                      * @param {string} key The key of the entry to check.
                                                      * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
                                                      */function listCacheHas(key){return-1<assocIndexOf(this.__data__,key)}module.exports=listCacheHas},{"./_assocIndexOf":76}],192:[function(require,module,exports){var assocIndexOf=require("./_assocIndexOf");/**
                                                      * Sets the list cache `key` to `value`.
                                                      *
                                                      * @private
                                                      * @name set
                                                      * @memberOf ListCache
                                                      * @param {string} key The key of the value to set.
                                                      * @param {*} value The value to set.
                                                      * @returns {Object} Returns the list cache instance.
                                                      */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(0>index){++this.size;data.push([key,value])}else{data[index][1]=value}return this}module.exports=listCacheSet},{"./_assocIndexOf":76}],193:[function(require,module,exports){var Hash=require("./_Hash"),ListCache=require("./_ListCache"),Map=require("./_Map");/**
                                    * Removes all key-value entries from the map.
                                    *
                                    * @private
                                    * @name clear
                                    * @memberOf MapCache
                                    */function mapCacheClear(){this.size=0;this.__data__={hash:new Hash,map:new(Map||ListCache),string:new Hash}}module.exports=mapCacheClear},{"./_Hash":52,"./_ListCache":53,"./_Map":54}],194:[function(require,module,exports){var getMapData=require("./_getMapData");/**
                                                  * Removes `key` and its value from the map.
                                                  *
                                                  * @private
                                                  * @name delete
                                                  * @memberOf MapCache
                                                  * @param {string} key The key of the value to remove.
                                                  * @returns {boolean} Returns `true` if the entry was removed, else `false`.
                                                  */function mapCacheDelete(key){var result=getMapData(this,key)["delete"](key);this.size-=result?1:0;return result}module.exports=mapCacheDelete},{"./_getMapData":161}],195:[function(require,module,exports){var getMapData=require("./_getMapData");/**
                                                  * Gets the map value for `key`.
                                                  *
                                                  * @private
                                                  * @name get
                                                  * @memberOf MapCache
                                                  * @param {string} key The key of the value to get.
                                                  * @returns {*} Returns the entry value.
                                                  */function mapCacheGet(key){return getMapData(this,key).get(key)}module.exports=mapCacheGet},{"./_getMapData":161}],196:[function(require,module,exports){var getMapData=require("./_getMapData");/**
                                                  * Checks if a map value for `key` exists.
                                                  *
                                                  * @private
                                                  * @name has
                                                  * @memberOf MapCache
                                                  * @param {string} key The key of the entry to check.
                                                  * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
                                                  */function mapCacheHas(key){return getMapData(this,key).has(key)}module.exports=mapCacheHas},{"./_getMapData":161}],197:[function(require,module,exports){var getMapData=require("./_getMapData");/**
                                                  * Sets the map `key` to `value`.
                                                  *
                                                  * @private
                                                  * @name set
                                                  * @memberOf MapCache
                                                  * @param {string} key The key of the value to set.
                                                  * @param {*} value The value to set.
                                                  * @returns {Object} Returns the map cache instance.
                                                  */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this}module.exports=mapCacheSet},{"./_getMapData":161}],198:[function(require,module,exports){/**
       * Converts `map` to its key-value pairs.
       *
       * @private
       * @param {Object} map The map to convert.
       * @returns {Array} Returns the key-value pairs.
       */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value]});return result}module.exports=mapToArray},{}],199:[function(require,module,exports){/**
       * A specialized version of `matchesProperty` for source values suitable
       * for strict equality comparisons, i.e. `===`.
       *
       * @private
       * @param {string} key The key of the property to get.
       * @param {*} srcValue The value to match.
       * @returns {Function} Returns the new spec function.
       */function matchesStrictComparable(key,srcValue){return function(object){if(null==object){return!1}return object[key]===srcValue&&(srcValue!==void 0||key in Object(object))}}module.exports=matchesStrictComparable},{}],200:[function(require,module,exports){var memoize=require("./memoize"),MAX_MEMOIZE_SIZE=500;/** Used as the maximum memoize cache size. */ /**
                                   * A specialized version of `_.memoize` which clears the memoized function's
                                   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
                                   *
                                   * @private
                                   * @param {Function} func The function to have its output memoized.
                                   * @returns {Function} Returns the new memoized function.
                                   */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear()}return key}),cache=result.cache;return result}module.exports=memoizeCapped},{"./memoize":265}],201:[function(require,module,exports){var getNative=require("./_getNative"),nativeCreate=getNative(Object,"create");/* Built-in method references that are verified to be native. */module.exports=nativeCreate},{"./_getNative":163}],202:[function(require,module,exports){var overArg=require("./_overArg"),nativeKeys=overArg(Object.keys,Object);/* Built-in method references for those with the same name as other `lodash` methods. */module.exports=nativeKeys},{"./_overArg":206}],203:[function(require,module,exports){/**
       * This function is like
       * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
       * except that it includes inherited enumerable properties.
       *
       * @private
       * @param {Object} object The object to query.
       * @returns {Array} Returns the array of property names.
       */function nativeKeysIn(object){var result=[];if(null!=object){for(var key in Object(object)){result.push(key)}}return result}module.exports=nativeKeysIn},{}],204:[function(require,module,exports){var freeGlobal=require("./_freeGlobal"),freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,freeProcess=moduleExports&&freeGlobal.process,nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
var types=freeModule&&freeModule.require&&freeModule.require("util").types;if(types){return types}// Legacy `process.binding('util')` for Node.js < 10.
return freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}();/** Detect free variable `exports`. */module.exports=nodeUtil},{"./_freeGlobal":158}],205:[function(require,module,exports){/** Used for built-in method references. */var objectProto=Object.prototype,nativeObjectToString=objectProto.toString;/**
                                                                                      * Used to resolve the
                                                                                      * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
                                                                                      * of values.
                                                                                      */ /**
                                                        * Converts `value` to a string using `Object.prototype.toString`.
                                                        *
                                                        * @private
                                                        * @param {*} value The value to convert.
                                                        * @returns {string} Returns the converted string.
                                                        */function objectToString(value){return nativeObjectToString.call(value)}module.exports=objectToString},{}],206:[function(require,module,exports){/**
       * Creates a unary function that invokes `func` with its argument transformed.
       *
       * @private
       * @param {Function} func The function to wrap.
       * @param {Function} transform The argument transform.
       * @returns {Function} Returns the new function.
       */function overArg(func,transform){return function(arg){return func(transform(arg))}}module.exports=overArg},{}],207:[function(require,module,exports){var apply=require("./_apply"),nativeMax=Math.max;/* Built-in method references for those with the same name as other `lodash` methods. */ /**
                                 * A specialized version of `baseRest` which transforms the rest array.
                                 *
                                 * @private
                                 * @param {Function} func The function to apply a rest parameter to.
                                 * @param {number} [start=func.length-1] The start position of the rest parameter.
                                 * @param {Function} transform The rest array transform.
                                 * @returns {Function} Returns the new function.
                                 */function overRest(func,start,transform){start=nativeMax(start===void 0?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index]}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index]}otherArgs[start]=transform(array);return apply(func,this,otherArgs)}}module.exports=overRest},{"./_apply":63}],208:[function(require,module,exports){var freeGlobal=require("./_freeGlobal"),freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")();/** Detect free variable `self`. */module.exports=root},{"./_freeGlobal":158}],209:[function(require,module,exports){/**
       * Gets the value at `key`, unless `key` is "__proto__".
       *
       * @private
       * @param {Object} object The object to query.
       * @param {string} key The key of the property to get.
       * @returns {*} Returns the property value.
       */function safeGet(object,key){return"__proto__"==key?void 0:object[key]}module.exports=safeGet},{}],210:[function(require,module,exports){/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED="__lodash_hash_undefined__";/**
                                                                                                             * Adds `value` to the array cache.
                                                                                                             *
                                                                                                             * @private
                                                                                                             * @name add
                                                                                                             * @memberOf SetCache
                                                                                                             * @alias push
                                                                                                             * @param {*} value The value to cache.
                                                                                                             * @returns {Object} Returns the cache instance.
                                                                                                             */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this}module.exports=setCacheAdd},{}],211:[function(require,module,exports){/**
       * Checks if `value` is in the array cache.
       *
       * @private
       * @name has
       * @memberOf SetCache
       * @param {*} value The value to search for.
       * @returns {number} Returns `true` if `value` is found, else `false`.
       */function setCacheHas(value){return this.__data__.has(value)}module.exports=setCacheHas},{}],212:[function(require,module,exports){/**
       * Converts `set` to an array of its values.
       *
       * @private
       * @param {Object} set The set to convert.
       * @returns {Array} Returns the values.
       */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value});return result}module.exports=setToArray},{}],213:[function(require,module,exports){var baseSetToString=require("./_baseSetToString"),shortOut=require("./_shortOut"),setToString=shortOut(baseSetToString);/**
                                              * Sets the `toString` method of `func` to return `string`.
                                              *
                                              * @private
                                              * @param {Function} func The function to modify.
                                              * @param {Function} string The `toString` result.
                                              * @returns {Function} Returns `func`.
                                              */module.exports=setToString},{"./_baseSetToString":123,"./_shortOut":214}],214:[function(require,module,exports){/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16,nativeNow=Date.now;/* Built-in method references for those with the same name as other `lodash` methods. */ /**
                                 * Creates a function that'll short out and invoke `identity` instead
                                 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
                                 * milliseconds.
                                 *
                                 * @private
                                 * @param {Function} func The function to restrict.
                                 * @returns {Function} Returns the new shortable function.
                                 */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(0<remaining){if(++count>=HOT_COUNT){return arguments[0]}}else{count=0}return func.apply(void 0,arguments)}}module.exports=shortOut},{}],215:[function(require,module,exports){var ListCache=require("./_ListCache");/**
                                                * Removes all key-value entries from the stack.
                                                *
                                                * @private
                                                * @name clear
                                                * @memberOf Stack
                                                */function stackClear(){this.__data__=new ListCache;this.size=0}module.exports=stackClear},{"./_ListCache":53}],216:[function(require,module,exports){/**
       * Removes `key` and its value from the stack.
       *
       * @private
       * @name delete
       * @memberOf Stack
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */function stackDelete(key){var data=this.__data__,result=data["delete"](key);this.size=data.size;return result}module.exports=stackDelete},{}],217:[function(require,module,exports){/**
       * Gets the stack value for `key`.
       *
       * @private
       * @name get
       * @memberOf Stack
       * @param {string} key The key of the value to get.
       * @returns {*} Returns the entry value.
       */function stackGet(key){return this.__data__.get(key)}module.exports=stackGet},{}],218:[function(require,module,exports){/**
       * Checks if a stack value for `key` exists.
       *
       * @private
       * @name has
       * @memberOf Stack
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */function stackHas(key){return this.__data__.has(key)}module.exports=stackHas},{}],219:[function(require,module,exports){var ListCache=require("./_ListCache"),Map=require("./_Map"),MapCache=require("./_MapCache"),LARGE_ARRAY_SIZE=200;/** Used as the size to enable large array optimizations. */ /**
                                   * Sets the stack `key` to `value`.
                                   *
                                   * @private
                                   * @name set
                                   * @memberOf Stack
                                   * @param {string} key The key of the value to set.
                                   * @param {*} value The value to set.
                                   * @returns {Object} Returns the stack cache instance.
                                   */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this}data=this.__data__=new MapCache(pairs)}data.set(key,value);this.size=data.size;return this}module.exports=stackSet},{"./_ListCache":53,"./_Map":54,"./_MapCache":55}],220:[function(require,module,exports){/**
       * A specialized version of `_.indexOf` which performs strict equality
       * comparisons of values, i.e. `===`.
       *
       * @private
       * @param {Array} array The array to inspect.
       * @param {*} value The value to search for.
       * @param {number} fromIndex The index to search from.
       * @returns {number} Returns the index of the matched value, else `-1`.
       */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index}}return-1}module.exports=strictIndexOf},{}],221:[function(require,module,exports){var asciiSize=require("./_asciiSize"),hasUnicode=require("./_hasUnicode"),unicodeSize=require("./_unicodeSize");/**
                                                    * Gets the number of symbols in `string`.
                                                    *
                                                    * @private
                                                    * @param {string} string The string to inspect.
                                                    * @returns {number} Returns the string size.
                                                    */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string)}module.exports=stringSize},{"./_asciiSize":73,"./_hasUnicode":171,"./_unicodeSize":225}],222:[function(require,module,exports){var memoizeCapped=require("./_memoizeCapped"),rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g,stringToPath=memoizeCapped(function(string){var result=[];if(46===string.charCodeAt(0)/* . */){result.push("")}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,"$1"):number||match)});return result});/** Used to match property names within property paths. */module.exports=stringToPath},{"./_memoizeCapped":200}],223:[function(require,module,exports){var isSymbol=require("./isSymbol"),INFINITY=1/0;/** Used as references for various `Number` constants. */ /**
                             * Converts `value` to a string key if it's not a string or symbol.
                             *
                             * @private
                             * @param {*} value The value to inspect.
                             * @returns {string|symbol} Returns the key.
                             */function toKey(value){if("string"==typeof value||isSymbol(value)){return value}var result=value+"";return"0"==result&&1/value==-INFINITY?"-0":result}module.exports=toKey},{"./isSymbol":256}],224:[function(require,module,exports){/** Used for built-in method references. */var funcProto=Function.prototype,funcToString=funcProto.toString;/** Used to resolve the decompiled source of functions. */ /**
                                              * Converts `func` to its source code.
                                              *
                                              * @private
                                              * @param {Function} func The function to convert.
                                              * @returns {string} Returns the source code.
                                              */function toSource(func){if(null!=func){try{return funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""}module.exports=toSource},{}],225:[function(require,module,exports){/** Used to compose unicode character classes. */var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsVarRange="\\ufe0e\\ufe0f",rsAstral="["+rsAstralRange+"]",rsCombo="["+rsComboRange+"]",rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier="(?:"+rsCombo+"|"+rsFitz+")",rsNonAstral="[^"+rsAstralRange+"]",rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ="\\u200d",reOptMod=rsModifier+"?",rsOptVar="["+rsVarRange+"]?",rsOptJoin="(?:"+rsZWJ+"(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")"+rsOptVar+reOptMod+")*",rsSeq=rsOptVar+reOptMod+rsOptJoin,rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")",reUnicode=RegExp(rsFitz+"(?="+rsFitz+")|"+rsSymbol+rsSeq,"g");/** Used to compose unicode capture groups. */ /**
                                                                                       * Gets the size of a Unicode `string`.
                                                                                       *
                                                                                       * @private
                                                                                       * @param {string} string The string inspect.
                                                                                       * @returns {number} Returns the string size.
                                                                                       */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result}return result}module.exports=unicodeSize},{}],226:[function(require,module,exports){var baseClone=require("./_baseClone"),CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for cloning. */ /**
                                   * Creates a shallow clone of `value`.
                                   *
                                   * **Note:** This method is loosely based on the
                                   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
                                   * and supports cloning arrays, array buffers, booleans, date objects, maps,
                                   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
                                   * arrays. The own enumerable properties of `arguments` objects are cloned
                                   * as plain objects. An empty object is returned for uncloneable values such
                                   * as error objects, functions, DOM nodes, and WeakMaps.
                                   *
                                   * @static
                                   * @memberOf _
                                   * @since 0.1.0
                                   * @category Lang
                                   * @param {*} value The value to clone.
                                   * @returns {*} Returns the cloned value.
                                   * @see _.cloneDeep
                                   * @example
                                   *
                                   * var objects = [{ 'a': 1 }, { 'b': 2 }];
                                   *
                                   * var shallow = _.clone(objects);
                                   * console.log(shallow[0] === objects[0]);
                                   * // => true
                                   */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG)}module.exports=clone},{"./_baseClone":80}],227:[function(require,module,exports){var baseClone=require("./_baseClone"),CLONE_DEEP_FLAG=1,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for cloning. */ /**
                                   * This method is like `_.clone` except that it recursively clones `value`.
                                   *
                                   * @static
                                   * @memberOf _
                                   * @since 1.0.0
                                   * @category Lang
                                   * @param {*} value The value to recursively clone.
                                   * @returns {*} Returns the deep cloned value.
                                   * @see _.clone
                                   * @example
                                   *
                                   * var objects = [{ 'a': 1 }, { 'b': 2 }];
                                   *
                                   * var deep = _.cloneDeep(objects);
                                   * console.log(deep[0] === objects[0]);
                                   * // => false
                                   */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG)}module.exports=cloneDeep},{"./_baseClone":80}],228:[function(require,module,exports){/**
       * Creates a function that returns `value`.
       *
       * @static
       * @memberOf _
       * @since 2.4.0
       * @category Util
       * @param {*} value The value to return from the new function.
       * @returns {Function} Returns the new constant function.
       * @example
       *
       * var objects = _.times(2, _.constant({ 'a': 1 }));
       *
       * console.log(objects);
       * // => [{ 'a': 1 }, { 'a': 1 }]
       *
       * console.log(objects[0] === objects[1]);
       * // => true
       */function constant(value){return function(){return value}}module.exports=constant},{}],229:[function(require,module,exports){var baseRest=require("./_baseRest"),eq=require("./eq"),isIterateeCall=require("./_isIterateeCall"),keysIn=require("./keysIn"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,defaults=baseRest(function(object,sources){object=Object(object);var index=-1,length=sources.length,guard=2<length?sources[2]:void 0;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1}while(++index<length){var source=sources[index],props=keysIn(source),propsIndex=-1,propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex],value=object[key];if(value===void 0||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key]}}}return object});/** Used for built-in method references. */module.exports=defaults},{"./_baseRest":121,"./_isIterateeCall":182,"./eq":231,"./keysIn":260}],230:[function(require,module,exports){module.exports=require("./forEach")},{"./forEach":236}],231:[function(require,module,exports){/**
       * Performs a
       * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
       * comparison between two values to determine if they are equivalent.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to compare.
       * @param {*} other The other value to compare.
       * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
       * @example
       *
       * var object = { 'a': 1 };
       * var other = { 'a': 1 };
       *
       * _.eq(object, object);
       * // => true
       *
       * _.eq(object, other);
       * // => false
       *
       * _.eq('a', 'a');
       * // => true
       *
       * _.eq('a', Object('a'));
       * // => false
       *
       * _.eq(NaN, NaN);
       * // => true
       */function eq(value,other){return value===other||value!==value&&other!==other}module.exports=eq},{}],232:[function(require,module,exports){var arrayFilter=require("./_arrayFilter"),baseFilter=require("./_baseFilter"),baseIteratee=require("./_baseIteratee"),isArray=require("./isArray");/**
                                           * Iterates over elements of `collection`, returning an array of all elements
                                           * `predicate` returns truthy for. The predicate is invoked with three
                                           * arguments: (value, index|key, collection).
                                           *
                                           * **Note:** Unlike `_.remove`, this method returns a new array.
                                           *
                                           * @static
                                           * @memberOf _
                                           * @since 0.1.0
                                           * @category Collection
                                           * @param {Array|Object} collection The collection to iterate over.
                                           * @param {Function} [predicate=_.identity] The function invoked per iteration.
                                           * @returns {Array} Returns the new filtered array.
                                           * @see _.reject
                                           * @example
                                           *
                                           * var users = [
                                           *   { 'user': 'barney', 'age': 36, 'active': true },
                                           *   { 'user': 'fred',   'age': 40, 'active': false }
                                           * ];
                                           *
                                           * _.filter(users, function(o) { return !o.active; });
                                           * // => objects for ['fred']
                                           *
                                           * // The `_.matches` iteratee shorthand.
                                           * _.filter(users, { 'age': 36, 'active': true });
                                           * // => objects for ['barney']
                                           *
                                           * // The `_.matchesProperty` iteratee shorthand.
                                           * _.filter(users, ['active', false]);
                                           * // => objects for ['fred']
                                           *
                                           * // The `_.property` iteratee shorthand.
                                           * _.filter(users, 'active');
                                           * // => objects for ['barney']
                                           */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,baseIteratee(predicate,3))}module.exports=filter},{"./_arrayFilter":65,"./_baseFilter":84,"./_baseIteratee":105,"./isArray":243}],233:[function(require,module,exports){var createFind=require("./_createFind"),findIndex=require("./findIndex"),find=createFind(findIndex);/**
                                               * Iterates over elements of `collection`, returning the first element
                                               * `predicate` returns truthy for. The predicate is invoked with three
                                               * arguments: (value, index|key, collection).
                                               *
                                               * @static
                                               * @memberOf _
                                               * @since 0.1.0
                                               * @category Collection
                                               * @param {Array|Object} collection The collection to inspect.
                                               * @param {Function} [predicate=_.identity] The function invoked per iteration.
                                               * @param {number} [fromIndex=0] The index to search from.
                                               * @returns {*} Returns the matched element, else `undefined`.
                                               * @example
                                               *
                                               * var users = [
                                               *   { 'user': 'barney',  'age': 36, 'active': true },
                                               *   { 'user': 'fred',    'age': 40, 'active': false },
                                               *   { 'user': 'pebbles', 'age': 1,  'active': true }
                                               * ];
                                               *
                                               * _.find(users, function(o) { return o.age < 40; });
                                               * // => object for 'barney'
                                               *
                                               * // The `_.matches` iteratee shorthand.
                                               * _.find(users, { 'age': 1, 'active': true });
                                               * // => object for 'pebbles'
                                               *
                                               * // The `_.matchesProperty` iteratee shorthand.
                                               * _.find(users, ['active', false]);
                                               * // => object for 'fred'
                                               *
                                               * // The `_.property` iteratee shorthand.
                                               * _.find(users, 'active');
                                               * // => object for 'barney'
                                               */module.exports=find},{"./_createFind":150,"./findIndex":234}],234:[function(require,module,exports){var baseFindIndex=require("./_baseFindIndex"),baseIteratee=require("./_baseIteratee"),toInteger=require("./toInteger"),nativeMax=Math.max;/* Built-in method references for those with the same name as other `lodash` methods. */ /**
                                 * This method is like `_.find` except that it returns the index of the first
                                 * element `predicate` returns truthy for instead of the element itself.
                                 *
                                 * @static
                                 * @memberOf _
                                 * @since 1.1.0
                                 * @category Array
                                 * @param {Array} array The array to inspect.
                                 * @param {Function} [predicate=_.identity] The function invoked per iteration.
                                 * @param {number} [fromIndex=0] The index to search from.
                                 * @returns {number} Returns the index of the found element, else `-1`.
                                 * @example
                                 *
                                 * var users = [
                                 *   { 'user': 'barney',  'active': false },
                                 *   { 'user': 'fred',    'active': false },
                                 *   { 'user': 'pebbles', 'active': true }
                                 * ];
                                 *
                                 * _.findIndex(users, function(o) { return o.user == 'barney'; });
                                 * // => 0
                                 *
                                 * // The `_.matches` iteratee shorthand.
                                 * _.findIndex(users, { 'user': 'fred', 'active': false });
                                 * // => 1
                                 *
                                 * // The `_.matchesProperty` iteratee shorthand.
                                 * _.findIndex(users, ['active', false]);
                                 * // => 0
                                 *
                                 * // The `_.property` iteratee shorthand.
                                 * _.findIndex(users, 'active');
                                 * // => 2
                                 */function findIndex(array,predicate,fromIndex){var length=null==array?0:array.length;if(!length){return-1}var index=null==fromIndex?0:toInteger(fromIndex);if(0>index){index=nativeMax(length+index,0)}return baseFindIndex(array,baseIteratee(predicate,3),index)}module.exports=findIndex},{"./_baseFindIndex":85,"./_baseIteratee":105,"./toInteger":280}],235:[function(require,module,exports){var baseFlatten=require("./_baseFlatten");/**
                                                    * Flattens `array` a single level deep.
                                                    *
                                                    * @static
                                                    * @memberOf _
                                                    * @since 0.1.0
                                                    * @category Array
                                                    * @param {Array} array The array to flatten.
                                                    * @returns {Array} Returns the new flattened array.
                                                    * @example
                                                    *
                                                    * _.flatten([1, [2, [3, [4]], 5]]);
                                                    * // => [1, 2, [3, [4]], 5]
                                                    */function flatten(array){var length=null==array?0:array.length;return length?baseFlatten(array,1):[]}module.exports=flatten},{"./_baseFlatten":86}],236:[function(require,module,exports){var arrayEach=require("./_arrayEach"),baseEach=require("./_baseEach"),castFunction=require("./_castFunction"),isArray=require("./isArray");/**
                                           * Iterates over elements of `collection` and invokes `iteratee` for each element.
                                           * The iteratee is invoked with three arguments: (value, index|key, collection).
                                           * Iteratee functions may exit iteration early by explicitly returning `false`.
                                           *
                                           * **Note:** As with other "Collections" methods, objects with a "length"
                                           * property are iterated like arrays. To avoid this behavior use `_.forIn`
                                           * or `_.forOwn` for object iteration.
                                           *
                                           * @static
                                           * @memberOf _
                                           * @since 0.1.0
                                           * @alias each
                                           * @category Collection
                                           * @param {Array|Object} collection The collection to iterate over.
                                           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                           * @returns {Array|Object} Returns `collection`.
                                           * @see _.forEachRight
                                           * @example
                                           *
                                           * _.forEach([1, 2], function(value) {
                                           *   console.log(value);
                                           * });
                                           * // => Logs `1` then `2`.
                                           *
                                           * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
                                           *   console.log(key);
                                           * });
                                           * // => Logs 'a' then 'b' (iteration order is not guaranteed).
                                           */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,castFunction(iteratee))}module.exports=forEach},{"./_arrayEach":64,"./_baseEach":82,"./_castFunction":132,"./isArray":243}],237:[function(require,module,exports){var baseFor=require("./_baseFor"),castFunction=require("./_castFunction"),keysIn=require("./keysIn");/**
                                         * Iterates over own and inherited enumerable string keyed properties of an
                                         * object and invokes `iteratee` for each property. The iteratee is invoked
                                         * with three arguments: (value, key, object). Iteratee functions may exit
                                         * iteration early by explicitly returning `false`.
                                         *
                                         * @static
                                         * @memberOf _
                                         * @since 0.3.0
                                         * @category Object
                                         * @param {Object} object The object to iterate over.
                                         * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                         * @returns {Object} Returns `object`.
                                         * @see _.forInRight
                                         * @example
                                         *
                                         * function Foo() {
                                         *   this.a = 1;
                                         *   this.b = 2;
                                         * }
                                         *
                                         * Foo.prototype.c = 3;
                                         *
                                         * _.forIn(new Foo, function(value, key) {
                                         *   console.log(key);
                                         * });
                                         * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
                                         */function forIn(object,iteratee){return null==object?object:baseFor(object,castFunction(iteratee),keysIn)}module.exports=forIn},{"./_baseFor":87,"./_castFunction":132,"./keysIn":260}],238:[function(require,module,exports){var baseGet=require("./_baseGet");/**
                                            * Gets the value at `path` of `object`. If the resolved value is
                                            * `undefined`, the `defaultValue` is returned in its place.
                                            *
                                            * @static
                                            * @memberOf _
                                            * @since 3.7.0
                                            * @category Object
                                            * @param {Object} object The object to query.
                                            * @param {Array|string} path The path of the property to get.
                                            * @param {*} [defaultValue] The value returned for `undefined` resolved values.
                                            * @returns {*} Returns the resolved value.
                                            * @example
                                            *
                                            * var object = { 'a': [{ 'b': { 'c': 3 } }] };
                                            *
                                            * _.get(object, 'a[0].b.c');
                                            * // => 3
                                            *
                                            * _.get(object, ['a', '0', 'b', 'c']);
                                            * // => 3
                                            *
                                            * _.get(object, 'a.b.c', 'default');
                                            * // => 'default'
                                            */function get(object,path,defaultValue){var result=null==object?void 0:baseGet(object,path);return result===void 0?defaultValue:result}module.exports=get},{"./_baseGet":89}],239:[function(require,module,exports){var baseHas=require("./_baseHas"),hasPath=require("./_hasPath");/**
                                            * Checks if `path` is a direct property of `object`.
                                            *
                                            * @static
                                            * @since 0.1.0
                                            * @memberOf _
                                            * @category Object
                                            * @param {Object} object The object to query.
                                            * @param {Array|string} path The path to check.
                                            * @returns {boolean} Returns `true` if `path` exists, else `false`.
                                            * @example
                                            *
                                            * var object = { 'a': { 'b': 2 } };
                                            * var other = _.create({ 'a': _.create({ 'b': 2 }) });
                                            *
                                            * _.has(object, 'a');
                                            * // => true
                                            *
                                            * _.has(object, 'a.b');
                                            * // => true
                                            *
                                            * _.has(object, ['a', 'b']);
                                            * // => true
                                            *
                                            * _.has(other, 'a');
                                            * // => false
                                            */function has(object,path){return null!=object&&hasPath(object,path,baseHas)}module.exports=has},{"./_baseHas":93,"./_hasPath":170}],240:[function(require,module,exports){var baseHasIn=require("./_baseHasIn"),hasPath=require("./_hasPath");/**
                                            * Checks if `path` is a direct or inherited property of `object`.
                                            *
                                            * @static
                                            * @memberOf _
                                            * @since 4.0.0
                                            * @category Object
                                            * @param {Object} object The object to query.
                                            * @param {Array|string} path The path to check.
                                            * @returns {boolean} Returns `true` if `path` exists, else `false`.
                                            * @example
                                            *
                                            * var object = _.create({ 'a': _.create({ 'b': 2 }) });
                                            *
                                            * _.hasIn(object, 'a');
                                            * // => true
                                            *
                                            * _.hasIn(object, 'a.b');
                                            * // => true
                                            *
                                            * _.hasIn(object, ['a', 'b']);
                                            * // => true
                                            *
                                            * _.hasIn(object, 'b');
                                            * // => false
                                            */function hasIn(object,path){return null!=object&&hasPath(object,path,baseHasIn)}module.exports=hasIn},{"./_baseHasIn":94,"./_hasPath":170}],241:[function(require,module,exports){/**
       * This method returns the first argument it receives.
       *
       * @static
       * @since 0.1.0
       * @memberOf _
       * @category Util
       * @param {*} value Any value.
       * @returns {*} Returns `value`.
       * @example
       *
       * var object = { 'a': 1 };
       *
       * console.log(_.identity(object) === object);
       * // => true
       */function identity(value){return value}module.exports=identity},{}],242:[function(require,module,exports){var baseIsArguments=require("./_baseIsArguments"),isObjectLike=require("./isObjectLike"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,propertyIsEnumerable=objectProto.propertyIsEnumerable,isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")};/** Used for built-in method references. */module.exports=isArguments},{"./_baseIsArguments":96,"./isObjectLike":252}],243:[function(require,module,exports){/**
       * Checks if `value` is classified as an `Array` object.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an array, else `false`.
       * @example
       *
       * _.isArray([1, 2, 3]);
       * // => true
       *
       * _.isArray(document.body.children);
       * // => false
       *
       * _.isArray('abc');
       * // => false
       *
       * _.isArray(_.noop);
       * // => false
       */var isArray=Array.isArray;module.exports=isArray},{}],244:[function(require,module,exports){var isFunction=require("./isFunction"),isLength=require("./isLength");/**
                                             * Checks if `value` is array-like. A value is considered array-like if it's
                                             * not a function and has a `value.length` that's an integer greater than or
                                             * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
                                             *
                                             * @static
                                             * @memberOf _
                                             * @since 4.0.0
                                             * @category Lang
                                             * @param {*} value The value to check.
                                             * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
                                             * @example
                                             *
                                             * _.isArrayLike([1, 2, 3]);
                                             * // => true
                                             *
                                             * _.isArrayLike(document.body.children);
                                             * // => true
                                             *
                                             * _.isArrayLike('abc');
                                             * // => true
                                             *
                                             * _.isArrayLike(_.noop);
                                             * // => false
                                             */function isArrayLike(value){return null!=value&&isLength(value.length)&&!isFunction(value)}module.exports=isArrayLike},{"./isFunction":248,"./isLength":249}],245:[function(require,module,exports){var isArrayLike=require("./isArrayLike"),isObjectLike=require("./isObjectLike");/**
                                                     * This method is like `_.isArrayLike` except that it also checks if `value`
                                                     * is an object.
                                                     *
                                                     * @static
                                                     * @memberOf _
                                                     * @since 4.0.0
                                                     * @category Lang
                                                     * @param {*} value The value to check.
                                                     * @returns {boolean} Returns `true` if `value` is an array-like object,
                                                     *  else `false`.
                                                     * @example
                                                     *
                                                     * _.isArrayLikeObject([1, 2, 3]);
                                                     * // => true
                                                     *
                                                     * _.isArrayLikeObject(document.body.children);
                                                     * // => true
                                                     *
                                                     * _.isArrayLikeObject('abc');
                                                     * // => false
                                                     *
                                                     * _.isArrayLikeObject(_.noop);
                                                     * // => false
                                                     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value)}module.exports=isArrayLikeObject},{"./isArrayLike":244,"./isObjectLike":252}],246:[function(require,module,exports){var root=require("./_root"),stubFalse=require("./stubFalse"),freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&"object"==typeof module&&module&&!module.nodeType&&module,moduleExports=freeModule&&freeModule.exports===freeExports,Buffer=moduleExports?root.Buffer:void 0,nativeIsBuffer=Buffer?Buffer.isBuffer:void 0,isBuffer=nativeIsBuffer||stubFalse;/** Detect free variable `exports`. */module.exports=isBuffer},{"./_root":208,"./stubFalse":278}],247:[function(require,module,exports){var baseKeys=require("./_baseKeys"),getTag=require("./_getTag"),isArguments=require("./isArguments"),isArray=require("./isArray"),isArrayLike=require("./isArrayLike"),isBuffer=require("./isBuffer"),isPrototype=require("./_isPrototype"),isTypedArray=require("./isTypedArray"),mapTag="[object Map]",setTag="[object Set]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;/** `Object#toString` result references. */ /**
                                                        * Checks if `value` is an empty object, collection, map, or set.
                                                        *
                                                        * Objects are considered empty if they have no own enumerable string keyed
                                                        * properties.
                                                        *
                                                        * Array-like values such as `arguments` objects, arrays, buffers, strings, or
                                                        * jQuery-like collections are considered empty if they have a `length` of `0`.
                                                        * Similarly, maps and sets are considered empty if they have a `size` of `0`.
                                                        *
                                                        * @static
                                                        * @memberOf _
                                                        * @since 0.1.0
                                                        * @category Lang
                                                        * @param {*} value The value to check.
                                                        * @returns {boolean} Returns `true` if `value` is empty, else `false`.
                                                        * @example
                                                        *
                                                        * _.isEmpty(null);
                                                        * // => true
                                                        *
                                                        * _.isEmpty(true);
                                                        * // => true
                                                        *
                                                        * _.isEmpty(1);
                                                        * // => true
                                                        *
                                                        * _.isEmpty([1, 2, 3]);
                                                        * // => false
                                                        *
                                                        * _.isEmpty({ 'a': 1 });
                                                        * // => false
                                                        */function isEmpty(value){if(null==value){return!0}if(isArrayLike(value)&&(isArray(value)||"string"==typeof value||"function"==typeof value.splice||isBuffer(value)||isTypedArray(value)||isArguments(value))){return!value.length}var tag=getTag(value);if(tag==mapTag||tag==setTag){return!value.size}if(isPrototype(value)){return!baseKeys(value).length}for(var key in value){if(hasOwnProperty.call(value,key)){return!1}}return!0}module.exports=isEmpty},{"./_baseKeys":106,"./_getTag":168,"./_isPrototype":186,"./isArguments":242,"./isArray":243,"./isArrayLike":244,"./isBuffer":246,"./isTypedArray":257}],248:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObject=require("./isObject"),asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";/** `Object#toString` result references. */ /**
                                        * Checks if `value` is classified as a `Function` object.
                                        *
                                        * @static
                                        * @memberOf _
                                        * @since 0.1.0
                                        * @category Lang
                                        * @param {*} value The value to check.
                                        * @returns {boolean} Returns `true` if `value` is a function, else `false`.
                                        * @example
                                        *
                                        * _.isFunction(_);
                                        * // => true
                                        *
                                        * _.isFunction(/abc/);
                                        * // => false
                                        */function isFunction(value){if(!isObject(value)){return!1}// The use of `Object#toString` avoids issues with the `typeof` operator
// in Safari 9 which returns 'object' for typed arrays and other constructors.
var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}module.exports=isFunction},{"./_baseGetTag":91,"./isObject":251}],249:[function(require,module,exports){/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER=9007199254740991;/**
                                                                                                         * Checks if `value` is a valid array-like length.
                                                                                                         *
                                                                                                         * **Note:** This method is loosely based on
                                                                                                         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
                                                                                                         *
                                                                                                         * @static
                                                                                                         * @memberOf _
                                                                                                         * @since 4.0.0
                                                                                                         * @category Lang
                                                                                                         * @param {*} value The value to check.
                                                                                                         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
                                                                                                         * @example
                                                                                                         *
                                                                                                         * _.isLength(3);
                                                                                                         * // => true
                                                                                                         *
                                                                                                         * _.isLength(Number.MIN_VALUE);
                                                                                                         * // => false
                                                                                                         *
                                                                                                         * _.isLength(Infinity);
                                                                                                         * // => false
                                                                                                         *
                                                                                                         * _.isLength('3');
                                                                                                         * // => false
                                                                                                         */function isLength(value){return"number"==typeof value&&-1<value&&0==value%1&&value<=MAX_SAFE_INTEGER}module.exports=isLength},{}],250:[function(require,module,exports){var baseIsMap=require("./_baseIsMap"),baseUnary=require("./_baseUnary"),nodeUtil=require("./_nodeUtil"),nodeIsMap=nodeUtil&&nodeUtil.isMap,isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/* Node.js helper references. */module.exports=isMap},{"./_baseIsMap":99,"./_baseUnary":127,"./_nodeUtil":204}],251:[function(require,module,exports){/**
       * Checks if `value` is the
       * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
       * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an object, else `false`.
       * @example
       *
       * _.isObject({});
       * // => true
       *
       * _.isObject([1, 2, 3]);
       * // => true
       *
       * _.isObject(_.noop);
       * // => true
       *
       * _.isObject(null);
       * // => false
       */function isObject(value){var type=typeof value;return null!=value&&("object"==type||"function"==type)}module.exports=isObject},{}],252:[function(require,module,exports){/**
       * Checks if `value` is object-like. A value is object-like if it's not `null`
       * and has a `typeof` result of "object".
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
       * @example
       *
       * _.isObjectLike({});
       * // => true
       *
       * _.isObjectLike([1, 2, 3]);
       * // => true
       *
       * _.isObjectLike(_.noop);
       * // => false
       *
       * _.isObjectLike(null);
       * // => false
       */function isObjectLike(value){return null!=value&&"object"==typeof value}module.exports=isObjectLike},{}],253:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),getPrototype=require("./_getPrototype"),isObjectLike=require("./isObjectLike"),objectTag="[object Object]",funcProto=Function.prototype,objectProto=Object.prototype,funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,objectCtorString=funcToString.call(Object);/** `Object#toString` result references. */ /**
                                                         * Checks if `value` is a plain object, that is, an object created by the
                                                         * `Object` constructor or one with a `[[Prototype]]` of `null`.
                                                         *
                                                         * @static
                                                         * @memberOf _
                                                         * @since 0.8.0
                                                         * @category Lang
                                                         * @param {*} value The value to check.
                                                         * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
                                                         * @example
                                                         *
                                                         * function Foo() {
                                                         *   this.a = 1;
                                                         * }
                                                         *
                                                         * _.isPlainObject(new Foo);
                                                         * // => false
                                                         *
                                                         * _.isPlainObject([1, 2, 3]);
                                                         * // => false
                                                         *
                                                         * _.isPlainObject({ 'x': 0, 'y': 0 });
                                                         * // => true
                                                         *
                                                         * _.isPlainObject(Object.create(null));
                                                         * // => true
                                                         */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return!1}var proto=getPrototype(value);if(null===proto){return!0}var Ctor=hasOwnProperty.call(proto,"constructor")&&proto.constructor;return"function"==typeof Ctor&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString}module.exports=isPlainObject},{"./_baseGetTag":91,"./_getPrototype":164,"./isObjectLike":252}],254:[function(require,module,exports){var baseIsSet=require("./_baseIsSet"),baseUnary=require("./_baseUnary"),nodeUtil=require("./_nodeUtil"),nodeIsSet=nodeUtil&&nodeUtil.isSet,isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/* Node.js helper references. */module.exports=isSet},{"./_baseIsSet":103,"./_baseUnary":127,"./_nodeUtil":204}],255:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isArray=require("./isArray"),isObjectLike=require("./isObjectLike"),stringTag="[object String]";/** `Object#toString` result references. */ /**
                                          * Checks if `value` is classified as a `String` primitive or object.
                                          *
                                          * @static
                                          * @since 0.1.0
                                          * @memberOf _
                                          * @category Lang
                                          * @param {*} value The value to check.
                                          * @returns {boolean} Returns `true` if `value` is a string, else `false`.
                                          * @example
                                          *
                                          * _.isString('abc');
                                          * // => true
                                          *
                                          * _.isString(1);
                                          * // => false
                                          */function isString(value){return"string"==typeof value||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag}module.exports=isString},{"./_baseGetTag":91,"./isArray":243,"./isObjectLike":252}],256:[function(require,module,exports){var baseGetTag=require("./_baseGetTag"),isObjectLike=require("./isObjectLike"),symbolTag="[object Symbol]";/** `Object#toString` result references. */ /**
                                          * Checks if `value` is classified as a `Symbol` primitive or object.
                                          *
                                          * @static
                                          * @memberOf _
                                          * @since 4.0.0
                                          * @category Lang
                                          * @param {*} value The value to check.
                                          * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
                                          * @example
                                          *
                                          * _.isSymbol(Symbol.iterator);
                                          * // => true
                                          *
                                          * _.isSymbol('abc');
                                          * // => false
                                          */function isSymbol(value){return"symbol"==typeof value||isObjectLike(value)&&baseGetTag(value)==symbolTag}module.exports=isSymbol},{"./_baseGetTag":91,"./isObjectLike":252}],257:[function(require,module,exports){var baseIsTypedArray=require("./_baseIsTypedArray"),baseUnary=require("./_baseUnary"),nodeUtil=require("./_nodeUtil"),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray,isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/* Node.js helper references. */module.exports=isTypedArray},{"./_baseIsTypedArray":104,"./_baseUnary":127,"./_nodeUtil":204}],258:[function(require,module,exports){/**
       * Checks if `value` is `undefined`.
       *
       * @static
       * @since 0.1.0
       * @memberOf _
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
       * @example
       *
       * _.isUndefined(void 0);
       * // => true
       *
       * _.isUndefined(null);
       * // => false
       */function isUndefined(value){return value===void 0}module.exports=isUndefined},{}],259:[function(require,module,exports){var arrayLikeKeys=require("./_arrayLikeKeys"),baseKeys=require("./_baseKeys"),isArrayLike=require("./isArrayLike");/**
                                                   * Creates an array of the own enumerable property names of `object`.
                                                   *
                                                   * **Note:** Non-object values are coerced to objects. See the
                                                   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
                                                   * for more details.
                                                   *
                                                   * @static
                                                   * @since 0.1.0
                                                   * @memberOf _
                                                   * @category Object
                                                   * @param {Object} object The object to query.
                                                   * @returns {Array} Returns the array of property names.
                                                   * @example
                                                   *
                                                   * function Foo() {
                                                   *   this.a = 1;
                                                   *   this.b = 2;
                                                   * }
                                                   *
                                                   * Foo.prototype.c = 3;
                                                   *
                                                   * _.keys(new Foo);
                                                   * // => ['a', 'b'] (iteration order is not guaranteed)
                                                   *
                                                   * _.keys('hi');
                                                   * // => ['0', '1']
                                                   */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}module.exports=keys},{"./_arrayLikeKeys":68,"./_baseKeys":106,"./isArrayLike":244}],260:[function(require,module,exports){var arrayLikeKeys=require("./_arrayLikeKeys"),baseKeysIn=require("./_baseKeysIn"),isArrayLike=require("./isArrayLike");/**
                                                   * Creates an array of the own and inherited enumerable property names of `object`.
                                                   *
                                                   * **Note:** Non-object values are coerced to objects.
                                                   *
                                                   * @static
                                                   * @memberOf _
                                                   * @since 3.0.0
                                                   * @category Object
                                                   * @param {Object} object The object to query.
                                                   * @returns {Array} Returns the array of property names.
                                                   * @example
                                                   *
                                                   * function Foo() {
                                                   *   this.a = 1;
                                                   *   this.b = 2;
                                                   * }
                                                   *
                                                   * Foo.prototype.c = 3;
                                                   *
                                                   * _.keysIn(new Foo);
                                                   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
                                                   */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,!0):baseKeysIn(object)}module.exports=keysIn},{"./_arrayLikeKeys":68,"./_baseKeysIn":107,"./isArrayLike":244}],261:[function(require,module,exports){/**
       * Gets the last element of `array`.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Array
       * @param {Array} array The array to query.
       * @returns {*} Returns the last element of `array`.
       * @example
       *
       * _.last([1, 2, 3]);
       * // => 3
       */function last(array){var length=null==array?0:array.length;return length?array[length-1]:void 0}module.exports=last},{}],262:[function(require,module,exports){var arrayMap=require("./_arrayMap"),baseIteratee=require("./_baseIteratee"),baseMap=require("./_baseMap"),isArray=require("./isArray");/**
                                           * Creates an array of values by running each element in `collection` thru
                                           * `iteratee`. The iteratee is invoked with three arguments:
                                           * (value, index|key, collection).
                                           *
                                           * Many lodash methods are guarded to work as iteratees for methods like
                                           * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
                                           *
                                           * The guarded methods are:
                                           * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
                                           * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
                                           * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
                                           * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
                                           *
                                           * @static
                                           * @memberOf _
                                           * @since 0.1.0
                                           * @category Collection
                                           * @param {Array|Object} collection The collection to iterate over.
                                           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                           * @returns {Array} Returns the new mapped array.
                                           * @example
                                           *
                                           * function square(n) {
                                           *   return n * n;
                                           * }
                                           *
                                           * _.map([4, 8], square);
                                           * // => [16, 64]
                                           *
                                           * _.map({ 'a': 4, 'b': 8 }, square);
                                           * // => [16, 64] (iteration order is not guaranteed)
                                           *
                                           * var users = [
                                           *   { 'user': 'barney' },
                                           *   { 'user': 'fred' }
                                           * ];
                                           *
                                           * // The `_.property` iteratee shorthand.
                                           * _.map(users, 'user');
                                           * // => ['barney', 'fred']
                                           */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,baseIteratee(iteratee,3))}module.exports=map},{"./_arrayMap":69,"./_baseIteratee":105,"./_baseMap":109,"./isArray":243}],263:[function(require,module,exports){var baseAssignValue=require("./_baseAssignValue"),baseForOwn=require("./_baseForOwn"),baseIteratee=require("./_baseIteratee");/**
                                                      * Creates an object with the same keys as `object` and values generated
                                                      * by running each own enumerable string keyed property of `object` thru
                                                      * `iteratee`. The iteratee is invoked with three arguments:
                                                      * (value, key, object).
                                                      *
                                                      * @static
                                                      * @memberOf _
                                                      * @since 2.4.0
                                                      * @category Object
                                                      * @param {Object} object The object to iterate over.
                                                      * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                                      * @returns {Object} Returns the new mapped object.
                                                      * @see _.mapKeys
                                                      * @example
                                                      *
                                                      * var users = {
                                                      *   'fred':    { 'user': 'fred',    'age': 40 },
                                                      *   'pebbles': { 'user': 'pebbles', 'age': 1 }
                                                      * };
                                                      *
                                                      * _.mapValues(users, function(o) { return o.age; });
                                                      * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
                                                      *
                                                      * // The `_.property` iteratee shorthand.
                                                      * _.mapValues(users, 'age');
                                                      * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
                                                      */function mapValues(object,iteratee){var result={};iteratee=baseIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object))});return result}module.exports=mapValues},{"./_baseAssignValue":79,"./_baseForOwn":88,"./_baseIteratee":105}],264:[function(require,module,exports){var baseExtremum=require("./_baseExtremum"),baseGt=require("./_baseGt"),identity=require("./identity");/**
                                             * Computes the maximum value of `array`. If `array` is empty or falsey,
                                             * `undefined` is returned.
                                             *
                                             * @static
                                             * @since 0.1.0
                                             * @memberOf _
                                             * @category Math
                                             * @param {Array} array The array to iterate over.
                                             * @returns {*} Returns the maximum value.
                                             * @example
                                             *
                                             * _.max([4, 2, 8, 6]);
                                             * // => 8
                                             *
                                             * _.max([]);
                                             * // => undefined
                                             */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):void 0}module.exports=max},{"./_baseExtremum":83,"./_baseGt":92,"./identity":241}],265:[function(require,module,exports){var MapCache=require("./_MapCache"),FUNC_ERROR_TEXT="Expected a function";/** Error message constants. */ /**
                                                    * Creates a function that memoizes the result of `func`. If `resolver` is
                                                    * provided, it determines the cache key for storing the result based on the
                                                    * arguments provided to the memoized function. By default, the first argument
                                                    * provided to the memoized function is used as the map cache key. The `func`
                                                    * is invoked with the `this` binding of the memoized function.
                                                    *
                                                    * **Note:** The cache is exposed as the `cache` property on the memoized
                                                    * function. Its creation may be customized by replacing the `_.memoize.Cache`
                                                    * constructor with one whose instances implement the
                                                    * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
                                                    * method interface of `clear`, `delete`, `get`, `has`, and `set`.
                                                    *
                                                    * @static
                                                    * @memberOf _
                                                    * @since 0.1.0
                                                    * @category Function
                                                    * @param {Function} func The function to have its output memoized.
                                                    * @param {Function} [resolver] The function to resolve the cache key.
                                                    * @returns {Function} Returns the new memoized function.
                                                    * @example
                                                    *
                                                    * var object = { 'a': 1, 'b': 2 };
                                                    * var other = { 'c': 3, 'd': 4 };
                                                    *
                                                    * var values = _.memoize(_.values);
                                                    * values(object);
                                                    * // => [1, 2]
                                                    *
                                                    * values(other);
                                                    * // => [3, 4]
                                                    *
                                                    * object.a = 2;
                                                    * values(object);
                                                    * // => [1, 2]
                                                    *
                                                    * // Modify the result cache.
                                                    * values.cache.set(object, ['a', 'b']);
                                                    * values(object);
                                                    * // => ['a', 'b']
                                                    *
                                                    * // Replace `_.memoize.Cache`.
                                                    * _.memoize.Cache = WeakMap;
                                                    */function memoize(func,resolver){if("function"!=typeof func||null!=resolver&&"function"!=typeof resolver){throw new TypeError(FUNC_ERROR_TEXT)}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key)}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result};memoized.cache=new(memoize.Cache||MapCache);return memoized}// Expose `MapCache`.
memoize.Cache=MapCache;module.exports=memoize},{"./_MapCache":55}],266:[function(require,module,exports){var baseMerge=require("./_baseMerge"),createAssigner=require("./_createAssigner"),merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex)});/**
                                                          * This method is like `_.assign` except that it recursively merges own and
                                                          * inherited enumerable string keyed properties of source objects into the
                                                          * destination object. Source properties that resolve to `undefined` are
                                                          * skipped if a destination value exists. Array and plain object properties
                                                          * are merged recursively. Other objects and value types are overridden by
                                                          * assignment. Source objects are applied from left to right. Subsequent
                                                          * sources overwrite property assignments of previous sources.
                                                          *
                                                          * **Note:** This method mutates `object`.
                                                          *
                                                          * @static
                                                          * @memberOf _
                                                          * @since 0.5.0
                                                          * @category Object
                                                          * @param {Object} object The destination object.
                                                          * @param {...Object} [sources] The source objects.
                                                          * @returns {Object} Returns `object`.
                                                          * @example
                                                          *
                                                          * var object = {
                                                          *   'a': [{ 'b': 2 }, { 'd': 4 }]
                                                          * };
                                                          *
                                                          * var other = {
                                                          *   'a': [{ 'c': 3 }, { 'e': 5 }]
                                                          * };
                                                          *
                                                          * _.merge(object, other);
                                                          * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
                                                          */module.exports=merge},{"./_baseMerge":112,"./_createAssigner":147}],267:[function(require,module,exports){var baseExtremum=require("./_baseExtremum"),baseLt=require("./_baseLt"),identity=require("./identity");/**
                                             * Computes the minimum value of `array`. If `array` is empty or falsey,
                                             * `undefined` is returned.
                                             *
                                             * @static
                                             * @since 0.1.0
                                             * @memberOf _
                                             * @category Math
                                             * @param {Array} array The array to iterate over.
                                             * @returns {*} Returns the minimum value.
                                             * @example
                                             *
                                             * _.min([4, 2, 8, 6]);
                                             * // => 2
                                             *
                                             * _.min([]);
                                             * // => undefined
                                             */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):void 0}module.exports=min},{"./_baseExtremum":83,"./_baseLt":108,"./identity":241}],268:[function(require,module,exports){var baseExtremum=require("./_baseExtremum"),baseIteratee=require("./_baseIteratee"),baseLt=require("./_baseLt");/**
                                          * This method is like `_.min` except that it accepts `iteratee` which is
                                          * invoked for each element in `array` to generate the criterion by which
                                          * the value is ranked. The iteratee is invoked with one argument: (value).
                                          *
                                          * @static
                                          * @memberOf _
                                          * @since 4.0.0
                                          * @category Math
                                          * @param {Array} array The array to iterate over.
                                          * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
                                          * @returns {*} Returns the minimum value.
                                          * @example
                                          *
                                          * var objects = [{ 'n': 1 }, { 'n': 2 }];
                                          *
                                          * _.minBy(objects, function(o) { return o.n; });
                                          * // => { 'n': 1 }
                                          *
                                          * // The `_.property` iteratee shorthand.
                                          * _.minBy(objects, 'n');
                                          * // => { 'n': 1 }
                                          */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,baseIteratee(iteratee,2),baseLt):void 0}module.exports=minBy},{"./_baseExtremum":83,"./_baseIteratee":105,"./_baseLt":108}],269:[function(require,module,exports){/**
       * This method returns `undefined`.
       *
       * @static
       * @memberOf _
       * @since 2.3.0
       * @category Util
       * @example
       *
       * _.times(2, _.noop);
       * // => [undefined, undefined]
       */function noop(){// No operation performed.
}module.exports=noop},{}],270:[function(require,module,exports){var root=require("./_root"),now=function(){return root.Date.now()};/**
                                      * Gets the timestamp of the number of milliseconds that have elapsed since
                                      * the Unix epoch (1 January 1970 00:00:00 UTC).
                                      *
                                      * @static
                                      * @memberOf _
                                      * @since 2.4.0
                                      * @category Date
                                      * @returns {number} Returns the timestamp.
                                      * @example
                                      *
                                      * _.defer(function(stamp) {
                                      *   console.log(_.now() - stamp);
                                      * }, _.now());
                                      * // => Logs the number of milliseconds it took for the deferred invocation.
                                      */module.exports=now},{"./_root":208}],271:[function(require,module,exports){var basePick=require("./_basePick"),flatRest=require("./_flatRest"),pick=flatRest(function(object,paths){return null==object?{}:basePick(object,paths)});/**
                                              * Creates an object composed of the picked `object` properties.
                                              *
                                              * @static
                                              * @since 0.1.0
                                              * @memberOf _
                                              * @category Object
                                              * @param {Object} object The source object.
                                              * @param {...(string|string[])} [paths] The property paths to pick.
                                              * @returns {Object} Returns the new object.
                                              * @example
                                              *
                                              * var object = { 'a': 1, 'b': '2', 'c': 3 };
                                              *
                                              * _.pick(object, ['a', 'c']);
                                              * // => { 'a': 1, 'c': 3 }
                                              */module.exports=pick},{"./_basePick":115,"./_flatRest":157}],272:[function(require,module,exports){var baseProperty=require("./_baseProperty"),basePropertyDeep=require("./_basePropertyDeep"),isKey=require("./_isKey"),toKey=require("./_toKey");/**
                                        * Creates a function that returns the value at `path` of a given object.
                                        *
                                        * @static
                                        * @memberOf _
                                        * @since 2.4.0
                                        * @category Util
                                        * @param {Array|string} path The path of the property to get.
                                        * @returns {Function} Returns the new accessor function.
                                        * @example
                                        *
                                        * var objects = [
                                        *   { 'a': { 'b': 2 } },
                                        *   { 'a': { 'b': 1 } }
                                        * ];
                                        *
                                        * _.map(objects, _.property('a.b'));
                                        * // => [2, 1]
                                        *
                                        * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
                                        * // => [1, 2]
                                        */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path)}module.exports=property},{"./_baseProperty":117,"./_basePropertyDeep":118,"./_isKey":183,"./_toKey":223}],273:[function(require,module,exports){var createRange=require("./_createRange"),range=createRange();/**
                                                    * Creates an array of numbers (positive and/or negative) progressing from
                                                    * `start` up to, but not including, `end`. A step of `-1` is used if a negative
                                                    * `start` is specified without an `end` or `step`. If `end` is not specified,
                                                    * it's set to `start` with `start` then set to `0`.
                                                    *
                                                    * **Note:** JavaScript follows the IEEE-754 standard for resolving
                                                    * floating-point values which can produce unexpected results.
                                                    *
                                                    * @static
                                                    * @since 0.1.0
                                                    * @memberOf _
                                                    * @category Util
                                                    * @param {number} [start=0] The start of the range.
                                                    * @param {number} end The end of the range.
                                                    * @param {number} [step=1] The value to increment or decrement by.
                                                    * @returns {Array} Returns the range of numbers.
                                                    * @see _.inRange, _.rangeRight
                                                    * @example
                                                    *
                                                    * _.range(4);
                                                    * // => [0, 1, 2, 3]
                                                    *
                                                    * _.range(-4);
                                                    * // => [0, -1, -2, -3]
                                                    *
                                                    * _.range(1, 5);
                                                    * // => [1, 2, 3, 4]
                                                    *
                                                    * _.range(0, 20, 5);
                                                    * // => [0, 5, 10, 15]
                                                    *
                                                    * _.range(0, -4, -1);
                                                    * // => [0, -1, -2, -3]
                                                    *
                                                    * _.range(1, 4, 0);
                                                    * // => [1, 1, 1]
                                                    *
                                                    * _.range(0);
                                                    * // => []
                                                    */module.exports=range},{"./_createRange":151}],274:[function(require,module,exports){var arrayReduce=require("./_arrayReduce"),baseEach=require("./_baseEach"),baseIteratee=require("./_baseIteratee"),baseReduce=require("./_baseReduce"),isArray=require("./isArray");/**
                                           * Reduces `collection` to a value which is the accumulated result of running
                                           * each element in `collection` thru `iteratee`, where each successive
                                           * invocation is supplied the return value of the previous. If `accumulator`
                                           * is not given, the first element of `collection` is used as the initial
                                           * value. The iteratee is invoked with four arguments:
                                           * (accumulator, value, index|key, collection).
                                           *
                                           * Many lodash methods are guarded to work as iteratees for methods like
                                           * `_.reduce`, `_.reduceRight`, and `_.transform`.
                                           *
                                           * The guarded methods are:
                                           * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
                                           * and `sortBy`
                                           *
                                           * @static
                                           * @memberOf _
                                           * @since 0.1.0
                                           * @category Collection
                                           * @param {Array|Object} collection The collection to iterate over.
                                           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                           * @param {*} [accumulator] The initial value.
                                           * @returns {*} Returns the accumulated value.
                                           * @see _.reduceRight
                                           * @example
                                           *
                                           * _.reduce([1, 2], function(sum, n) {
                                           *   return sum + n;
                                           * }, 0);
                                           * // => 3
                                           *
                                           * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
                                           *   (result[value] || (result[value] = [])).push(key);
                                           *   return result;
                                           * }, {});
                                           * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
                                           */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=3>arguments.length;return func(collection,baseIteratee(iteratee,4),accumulator,initAccum,baseEach)}module.exports=reduce},{"./_arrayReduce":71,"./_baseEach":82,"./_baseIteratee":105,"./_baseReduce":120,"./isArray":243}],275:[function(require,module,exports){var baseKeys=require("./_baseKeys"),getTag=require("./_getTag"),isArrayLike=require("./isArrayLike"),isString=require("./isString"),stringSize=require("./_stringSize"),mapTag="[object Map]",setTag="[object Set]";/** `Object#toString` result references. */ /**
                                    * Gets the size of `collection` by returning its length for array-like
                                    * values or the number of own enumerable string keyed properties for objects.
                                    *
                                    * @static
                                    * @memberOf _
                                    * @since 0.1.0
                                    * @category Collection
                                    * @param {Array|Object|string} collection The collection to inspect.
                                    * @returns {number} Returns the collection size.
                                    * @example
                                    *
                                    * _.size([1, 2, 3]);
                                    * // => 3
                                    *
                                    * _.size({ 'a': 1, 'b': 2 });
                                    * // => 2
                                    *
                                    * _.size('pebbles');
                                    * // => 7
                                    */function size(collection){if(null==collection){return 0}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size}return baseKeys(collection).length}module.exports=size},{"./_baseKeys":106,"./_getTag":168,"./_stringSize":221,"./isArrayLike":244,"./isString":255}],276:[function(require,module,exports){var baseFlatten=require("./_baseFlatten"),baseOrderBy=require("./_baseOrderBy"),baseRest=require("./_baseRest"),isIterateeCall=require("./_isIterateeCall"),sortBy=baseRest(function(collection,iteratees){if(null==collection){return[]}var length=iteratees.length;if(1<length&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[]}else if(2<length&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]]}return baseOrderBy(collection,baseFlatten(iteratees,1),[])});/**
                                                          * Creates an array of elements, sorted in ascending order by the results of
                                                          * running each element in a collection thru each iteratee. This method
                                                          * performs a stable sort, that is, it preserves the original sort order of
                                                          * equal elements. The iteratees are invoked with one argument: (value).
                                                          *
                                                          * @static
                                                          * @memberOf _
                                                          * @since 0.1.0
                                                          * @category Collection
                                                          * @param {Array|Object} collection The collection to iterate over.
                                                          * @param {...(Function|Function[])} [iteratees=[_.identity]]
                                                          *  The iteratees to sort by.
                                                          * @returns {Array} Returns the new sorted array.
                                                          * @example
                                                          *
                                                          * var users = [
                                                          *   { 'user': 'fred',   'age': 48 },
                                                          *   { 'user': 'barney', 'age': 36 },
                                                          *   { 'user': 'fred',   'age': 40 },
                                                          *   { 'user': 'barney', 'age': 34 }
                                                          * ];
                                                          *
                                                          * _.sortBy(users, [function(o) { return o.user; }]);
                                                          * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
                                                          *
                                                          * _.sortBy(users, ['user', 'age']);
                                                          * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
                                                          */module.exports=sortBy},{"./_baseFlatten":86,"./_baseOrderBy":114,"./_baseRest":121,"./_isIterateeCall":182}],277:[function(require,module,exports){/**
       * This method returns a new empty array.
       *
       * @static
       * @memberOf _
       * @since 4.13.0
       * @category Util
       * @returns {Array} Returns the new empty array.
       * @example
       *
       * var arrays = _.times(2, _.stubArray);
       *
       * console.log(arrays);
       * // => [[], []]
       *
       * console.log(arrays[0] === arrays[1]);
       * // => false
       */function stubArray(){return[]}module.exports=stubArray},{}],278:[function(require,module,exports){/**
       * This method returns `false`.
       *
       * @static
       * @memberOf _
       * @since 4.13.0
       * @category Util
       * @returns {boolean} Returns `false`.
       * @example
       *
       * _.times(2, _.stubFalse);
       * // => [false, false]
       */function stubFalse(){return!1}module.exports=stubFalse},{}],279:[function(require,module,exports){var toNumber=require("./toNumber"),INFINITY=1/0,MAX_INTEGER=17976931348623157e292;/** Used as references for various `Number` constants. */ /**
                                                * Converts `value` to a finite number.
                                                *
                                                * @static
                                                * @memberOf _
                                                * @since 4.12.0
                                                * @category Lang
                                                * @param {*} value The value to convert.
                                                * @returns {number} Returns the converted number.
                                                * @example
                                                *
                                                * _.toFinite(3.2);
                                                * // => 3.2
                                                *
                                                * _.toFinite(Number.MIN_VALUE);
                                                * // => 5e-324
                                                *
                                                * _.toFinite(Infinity);
                                                * // => 1.7976931348623157e+308
                                                *
                                                * _.toFinite('3.2');
                                                * // => 3.2
                                                */function toFinite(value){if(!value){return 0===value?value:0}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=0>value?-1:1;return sign*MAX_INTEGER}return value===value?value:0}module.exports=toFinite},{"./toNumber":281}],280:[function(require,module,exports){var toFinite=require("./toFinite");/**
                                             * Converts `value` to an integer.
                                             *
                                             * **Note:** This method is loosely based on
                                             * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
                                             *
                                             * @static
                                             * @memberOf _
                                             * @since 4.0.0
                                             * @category Lang
                                             * @param {*} value The value to convert.
                                             * @returns {number} Returns the converted integer.
                                             * @example
                                             *
                                             * _.toInteger(3.2);
                                             * // => 3
                                             *
                                             * _.toInteger(Number.MIN_VALUE);
                                             * // => 0
                                             *
                                             * _.toInteger(Infinity);
                                             * // => 1.7976931348623157e+308
                                             *
                                             * _.toInteger('3.2');
                                             * // => 3
                                             */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0}module.exports=toInteger},{"./toFinite":279}],281:[function(require,module,exports){var isObject=require("./isObject"),isSymbol=require("./isSymbol"),NAN=0/0,reTrim=/^\s+|\s+$/g,reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt;/** Used as references for various `Number` constants. */ /**
                                    * Converts `value` to a number.
                                    *
                                    * @static
                                    * @memberOf _
                                    * @since 4.0.0
                                    * @category Lang
                                    * @param {*} value The value to process.
                                    * @returns {number} Returns the number.
                                    * @example
                                    *
                                    * _.toNumber(3.2);
                                    * // => 3.2
                                    *
                                    * _.toNumber(Number.MIN_VALUE);
                                    * // => 5e-324
                                    *
                                    * _.toNumber(Infinity);
                                    * // => Infinity
                                    *
                                    * _.toNumber('3.2');
                                    * // => 3.2
                                    */function toNumber(value){if("number"==typeof value){return value}if(isSymbol(value)){return NAN}if(isObject(value)){var other="function"==typeof value.valueOf?value.valueOf():value;value=isObject(other)?other+"":other}if("string"!=typeof value){return 0===value?value:+value}value=value.replace(reTrim,"");var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value}module.exports=toNumber},{"./isObject":251,"./isSymbol":256}],282:[function(require,module,exports){var copyObject=require("./_copyObject"),keysIn=require("./keysIn");/**
                                         * Converts `value` to a plain object flattening inherited enumerable string
                                         * keyed properties of `value` to own properties of the plain object.
                                         *
                                         * @static
                                         * @memberOf _
                                         * @since 3.0.0
                                         * @category Lang
                                         * @param {*} value The value to convert.
                                         * @returns {Object} Returns the converted plain object.
                                         * @example
                                         *
                                         * function Foo() {
                                         *   this.b = 2;
                                         * }
                                         *
                                         * Foo.prototype.c = 3;
                                         *
                                         * _.assign({ 'a': 1 }, new Foo);
                                         * // => { 'a': 1, 'b': 2 }
                                         *
                                         * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
                                         * // => { 'a': 1, 'b': 2, 'c': 3 }
                                         */function toPlainObject(value){return copyObject(value,keysIn(value))}module.exports=toPlainObject},{"./_copyObject":143,"./keysIn":260}],283:[function(require,module,exports){var baseToString=require("./_baseToString");/**
                                                      * Converts `value` to a string. An empty string is returned for `null`
                                                      * and `undefined` values. The sign of `-0` is preserved.
                                                      *
                                                      * @static
                                                      * @memberOf _
                                                      * @since 4.0.0
                                                      * @category Lang
                                                      * @param {*} value The value to convert.
                                                      * @returns {string} Returns the converted string.
                                                      * @example
                                                      *
                                                      * _.toString(null);
                                                      * // => ''
                                                      *
                                                      * _.toString(-0);
                                                      * // => '-0'
                                                      *
                                                      * _.toString([1, 2, 3]);
                                                      * // => '1,2,3'
                                                      */function toString(value){return null==value?"":baseToString(value)}module.exports=toString},{"./_baseToString":126}],284:[function(require,module,exports){var arrayEach=require("./_arrayEach"),baseCreate=require("./_baseCreate"),baseForOwn=require("./_baseForOwn"),baseIteratee=require("./_baseIteratee"),getPrototype=require("./_getPrototype"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isFunction=require("./isFunction"),isObject=require("./isObject"),isTypedArray=require("./isTypedArray");/**
                                                     * An alternative to `_.reduce`; this method transforms `object` to a new
                                                     * `accumulator` object which is the result of running each of its own
                                                     * enumerable string keyed properties thru `iteratee`, with each invocation
                                                     * potentially mutating the `accumulator` object. If `accumulator` is not
                                                     * provided, a new object with the same `[[Prototype]]` will be used. The
                                                     * iteratee is invoked with four arguments: (accumulator, value, key, object).
                                                     * Iteratee functions may exit iteration early by explicitly returning `false`.
                                                     *
                                                     * @static
                                                     * @memberOf _
                                                     * @since 1.3.0
                                                     * @category Object
                                                     * @param {Object} object The object to iterate over.
                                                     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
                                                     * @param {*} [accumulator] The custom accumulator value.
                                                     * @returns {*} Returns the accumulated value.
                                                     * @example
                                                     *
                                                     * _.transform([2, 3, 4], function(result, n) {
                                                     *   result.push(n *= n);
                                                     *   return n % 2 == 0;
                                                     * }, []);
                                                     * // => [4, 9]
                                                     *
                                                     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
                                                     *   (result[value] || (result[value] = [])).push(key);
                                                     * }, {});
                                                     * // => { '1': ['a', 'c'], '2': ['b'] }
                                                     */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=baseIteratee(iteratee,4);if(null==accumulator){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor:[]}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{}}else{accumulator={}}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object)});return accumulator}module.exports=transform},{"./_arrayEach":64,"./_baseCreate":81,"./_baseForOwn":88,"./_baseIteratee":105,"./_getPrototype":164,"./isArray":243,"./isBuffer":246,"./isFunction":248,"./isObject":251,"./isTypedArray":257}],285:[function(require,module,exports){var baseFlatten=require("./_baseFlatten"),baseRest=require("./_baseRest"),baseUniq=require("./_baseUniq"),isArrayLikeObject=require("./isArrayLikeObject"),union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,!0))});/**
                                                               * Creates an array of unique values, in order, from all given arrays using
                                                               * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
                                                               * for equality comparisons.
                                                               *
                                                               * @static
                                                               * @memberOf _
                                                               * @since 0.1.0
                                                               * @category Array
                                                               * @param {...Array} [arrays] The arrays to inspect.
                                                               * @returns {Array} Returns the new array of combined values.
                                                               * @example
                                                               *
                                                               * _.union([2], [1, 2]);
                                                               * // => [2, 1]
                                                               */module.exports=union},{"./_baseFlatten":86,"./_baseRest":121,"./_baseUniq":128,"./isArrayLikeObject":245}],286:[function(require,module,exports){var toString=require("./toString"),idCounter=0;/** Used to generate unique IDs. */ /**
                          * Generates a unique ID. If `prefix` is given, the ID is appended to it.
                          *
                          * @static
                          * @since 0.1.0
                          * @memberOf _
                          * @category Util
                          * @param {string} [prefix=''] The value to prefix the ID with.
                          * @returns {string} Returns the unique ID.
                          * @example
                          *
                          * _.uniqueId('contact_');
                          * // => 'contact_104'
                          *
                          * _.uniqueId();
                          * // => '105'
                          */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id}module.exports=uniqueId},{"./toString":283}],287:[function(require,module,exports){var baseValues=require("./_baseValues"),keys=require("./keys");/**
                                     * Creates an array of the own enumerable string keyed property values of `object`.
                                     *
                                     * **Note:** Non-object values are coerced to objects.
                                     *
                                     * @static
                                     * @since 0.1.0
                                     * @memberOf _
                                     * @category Object
                                     * @param {Object} object The object to query.
                                     * @returns {Array} Returns the array of property values.
                                     * @example
                                     *
                                     * function Foo() {
                                     *   this.a = 1;
                                     *   this.b = 2;
                                     * }
                                     *
                                     * Foo.prototype.c = 3;
                                     *
                                     * _.values(new Foo);
                                     * // => [1, 2] (iteration order is not guaranteed)
                                     *
                                     * _.values('hi');
                                     * // => ['h', 'i']
                                     */function values(object){return null==object?[]:baseValues(object,keys(object))}module.exports=values},{"./_baseValues":129,"./keys":259}],288:[function(require,module,exports){var assignValue=require("./_assignValue"),baseZipObject=require("./_baseZipObject");/**
                                                        * This method is like `_.fromPairs` except that it accepts two arrays,
                                                        * one of property identifiers and one of corresponding values.
                                                        *
                                                        * @static
                                                        * @memberOf _
                                                        * @since 0.4.0
                                                        * @category Array
                                                        * @param {Array} [props=[]] The property identifiers.
                                                        * @param {Array} [values=[]] The property values.
                                                        * @returns {Object} Returns the new object.
                                                        * @example
                                                        *
                                                        * _.zipObject(['a', 'b'], [1, 2]);
                                                        * // => { 'a': 1, 'b': 2 }
                                                        */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue)}module.exports=zipObject},{"./_assignValue":75,"./_baseZipObject":130}]},{},[1])(1)});const methods={},names=[];function registerMethods(name,m){if(Array.isArray(name)){for(let _name of name){registerMethods(_name,m)}return}if("object"===typeof name){for(let _name in name){registerMethods(_name,name[_name])}return}addMethodNames(Object.getOwnPropertyNames(m));methods[name]=Object.assign(methods[name]||{},m)}function getMethodsFor(name){return methods[name]||{}}function getMethodNames(){return[...new Set(names)]}function addMethodNames(_names){names.push(..._names)}var methods$1={registerMethods:registerMethods,getMethodsFor:getMethodsFor,getMethodNames:getMethodNames,addMethodNames:addMethodNames};// Map function
_exports.$methods=methods$1;function map(array,block){var i,il=array.length,result=[];for(i=0;i<il;i++){result.push(block(array[i]))}return result}// Filter function
function filter(array,block){var i,il=array.length,result=[];for(i=0;i<il;i++){if(block(array[i])){result.push(array[i])}}return result}// Degrees to radians
function radians(d){return d%360*Math.PI/180}// Radians to degrees
function degrees(r){return 180*r/Math.PI%360}// Convert dash-separated-string to camelCase
function camelCase(s){return s.toLowerCase().replace(/-(.)/g,function(m,g){return g.toUpperCase()})}// Convert camel cased string to string seperated
function unCamelCase(s){return s.replace(/([A-Z])/g,function(m,g){return"-"+g.toLowerCase()})}// Capitalize first letter of a string
function capitalize(s){return s.charAt(0).toUpperCase()+s.slice(1)}// Calculate proportional width and height values when necessary
function proportionalSize(element,width,height,box){if(null==width||null==height){box=box||element.bbox();if(null==width){width=box.width/box.height*height}else if(null==height){height=box.height/box.width*width}}return{width:width,height:height}}function getOrigin(o,element){// Allow origin or around as the names
let origin=o.origin,ox,oy;// o.around == null ? o.origin : o.around
// Allow the user to pass a string to rotate around a given point
if("string"===typeof origin||null==origin){// Get the bounding box of the element with no transformations applied
const string=(origin||"center").toLowerCase().trim(),{height,width,x,y}=element.bbox();// Calculate the transformed x and y coordinates
let bx=string.includes("left")?x:string.includes("right")?x+width:x+width/2,by=string.includes("top")?y:string.includes("bottom")?y+height:y+height/2;// Set the bounds eg : "bottom-left", "Top right", "middle" etc...
ox=null!=o.ox?o.ox:bx;oy=null!=o.oy?o.oy:by}else{ox=origin[0];oy=origin[1]}// Return the origin as it is if it wasn't a string
return[ox,oy]}var utils={map:map,filter:filter,radians:radians,degrees:degrees,camelCase:camelCase,unCamelCase:unCamelCase,capitalize:capitalize,proportionalSize:proportionalSize,getOrigin:getOrigin};// Default namespaces
_exports.utils=_exports.$utils=utils;let ns="http://www.w3.org/2000/svg";_exports.ns=ns;let xmlns="http://www.w3.org/2000/xmlns/";_exports.xmlns=xmlns;let xlink="http://www.w3.org/1999/xlink";_exports.xlink=xlink;let svgjs="http://svgjs.com/svgjs";_exports.svgjs=svgjs;var namespaces={ns:ns,xmlns:xmlns,xlink:xlink,svgjs:svgjs};_exports.namespaces=_exports.$namespaces=namespaces;const globals={window:"undefined"===typeof window?null:window,document:"undefined"===typeof document?null:document};_exports.globals=globals;function registerWindow(win=null,doc=null){globals.window=win;globals.document=doc}const save={};function saveWindow(){save.window=globals.window;save.document=globals.document}function restoreWindow(){globals.window=save.window;globals.document=save.document}function withWindow(win,fn){saveWindow();registerWindow(win,win.document);fn(win,win.document);restoreWindow()}function getWindow(){return globals.window}var window$1={globals:globals,registerWindow:registerWindow,saveWindow:saveWindow,restoreWindow:restoreWindow,withWindow:withWindow,getWindow:getWindow};_exports.$window=window$1;class Base{// constructor (node/*, {extensions = []} */) {
//   // this.tags = []
//   //
//   // for (let extension of extensions) {
//   //   extension.setup.call(this, node)
//   //   this.tags.push(extension.name)
//   // }
// }
}_exports.$BaseDefault=Base;var Base$1={default:Base};_exports.$Base=Base$1;const elements={},root="___SYMBOL___ROOT___";_exports.root=root;// Method for element creation
function create(name){// create element
return globals.document.createElementNS(ns,name)}function makeInstance(element){if(element instanceof Base)return element;if("object"===typeof element){return adopter(element)}if(null==element){return new elements[root]}if("string"===typeof element&&"<"!==element.charAt(0)){return adopter(globals.document.querySelector(element))}var node=create("svg");node.innerHTML=element;// We can use firstChild here because we know,
// that the first char is < and thus an element
element=adopter(node.firstChild);return element}function nodeOrNew(name,node){return node instanceof globals.window.Node?node:create(name)}// Adopt existing svg elements
function adopt(node){// check for presence of node
if(!node)return null;// make sure a node isn't already adopted
if(node.instance instanceof Base)return node.instance;// initialize variables
var className=capitalize(node.nodeName||"Dom");// Make sure that gradients are adopted correctly
if("LinearGradient"===className||"RadialGradient"===className){className="Gradient";// Fallback to Dom if element is not known
}else if(!elements[className]){className="Dom"}return new elements[className](node)}let adopter=adopt;function mockAdopt(mock=adopt){adopter=mock}function register(element,name=element.name,asRoot=!1){elements[name]=element;if(asRoot)elements[root]=element;addMethodNames(Object.getOwnPropertyNames(element.prototype));return element}function getClass(name){return elements[name]}// Element id sequence
let did=1e3;// Get next named element id
function eid(name){return"Svgjs"+capitalize(name)+did++}// Deep new id assignment
function assignNewId(node){// do the same for SVG child nodes as well
for(var i=node.children.length-1;0<=i;i--){assignNewId(node.children[i])}if(node.id){return adopt(node).id(eid(node.nodeName))}return adopt(node)}// Method for extending objects
function extend(modules,methods,attrCheck){var key,i;modules=Array.isArray(modules)?modules:[modules];for(i=modules.length-1;0<=i;i--){for(key in methods){let method=methods[key];if(attrCheck){method=wrapWithAttrCheck(methods[key])}modules[i].prototype[key]=method}}}// export function extendWithAttrCheck (...args) {
//   extend(...args, true)
// }
function wrapWithAttrCheck(fn){return function(...args){let o=args[args.length-1];if(o&&o.constructor===Object&&!(o instanceof Array)){return fn.apply(this,args.slice(0,-1)).attr(o)}else{return fn.apply(this,args)}}}function invent(config){// Create element initializer
var initializer="function"===typeof config.create?config.create:function(node){this.constructor(node||create(config.create))};// Inherit prototype
if(config.inherit){/* eslint new-cap: off */initializer.prototype=new config.inherit;initializer.prototype.constructor=initializer}// Extend with methods
if(config.extend){extend(initializer,config.extend)}// Attach construct method to parent
if(config.construct){extend(config.parent||elements.Container,config.construct)}return initializer}var adopter$1={root:root,create:create,makeInstance:makeInstance,nodeOrNew:nodeOrNew,adopt:adopt,mockAdopt:mockAdopt,register:register,getClass:getClass,eid:eid,assignNewId:assignNewId,extend:extend,wrapWithAttrCheck:wrapWithAttrCheck,invent:invent};_exports.$adopter=adopter$1;function siblings(){return this.parent().children()}// Get the curent position siblings
function position(){return this.parent().index(this)}// Get the next element (will return null if there is none)
function next(){return this.siblings()[this.position()+1]}// Get the next element (will return null if there is none)
function prev(){return this.siblings()[this.position()-1]}// Send given element one step forward
function forward(){var i=this.position()+1,p=this.parent();// move node one step forward
p.removeElement(this).add(this,i);// make sure defs node is always at the top
if("function"===typeof p.isRoot&&p.isRoot()){p.node.appendChild(p.defs().node)}return this}// Send given element one step backward
function backward(){var i=this.position();if(0<i){this.parent().removeElement(this).add(this,i-1)}return this}// Send given element all the way to the front
function front(){var p=this.parent();// Move node forward
p.node.appendChild(this.node);// Make sure defs node is always at the top
if("function"===typeof p.isRoot&&p.isRoot()){p.node.appendChild(p.defs().node)}return this}// Send given element all the way to the back
function back(){if(0<this.position()){this.parent().removeElement(this).add(this,0)}return this}// Inserts a given element before the targeted element
function before(element){element=makeInstance(element);element.remove();var i=this.position();this.parent().add(element,i);return this}// Inserts a given element after the targeted element
function after(element){element=makeInstance(element);element.remove();var i=this.position();this.parent().add(element,i+1);return this}function insertBefore(element){element=makeInstance(element);element.before(this);return this}function insertAfter(element){element=makeInstance(element);element.after(this);return this}registerMethods("Dom",{siblings,position,next,prev,forward,backward,front,back,before,after,insertBefore,insertAfter});var arrange={siblings:siblings,position:position,next:next,prev:prev,forward:forward,backward:backward,front:front,back:back,before:before,after:after,insertBefore:insertBefore,insertAfter:insertAfter};// Parse unit value
_exports.$arrange=arrange;let numberAndUnit=/^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i;// Parse hex value
_exports.numberAndUnit=numberAndUnit;let hex=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;// Parse rgb value
_exports.hex=hex;let rgb=/rgb\((\d+),(\d+),(\d+)\)/;// Parse reference id
_exports.rgb=rgb;let reference=/(#[a-z0-9\-_]+)/i;// splits a transformation chain
_exports.reference=reference;let transforms=/\)\s*,?\s*/;// Whitespace
_exports.transforms=transforms;let whitespace=/\s/g;// Test hex value
_exports.whitespace=whitespace;let isHex=/^#[a-f0-9]{3,6}$/i;// Test rgb value
_exports.isHex=isHex;let isRgb=/^rgb\(/;// Test css declaration
_exports.isRgb=isRgb;let isCss=/[^:]+:[^;]+;?/;// Test for blank string
_exports.isCss=isCss;let isBlank=/^(\s+)?$/;// Test for numeric string
_exports.isBlank=isBlank;let isNumber=/^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;// Test for percent value
_exports.isNumber=isNumber;let isPercent=/^-?[\d.]+%$/;// Test for image url
_exports.isPercent=isPercent;let isImage=/\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i;// split at whitespace and comma
_exports.isImage=isImage;let delimiter=/[\s,]+/;// The following regex are used to parse the d attribute of a path
// Matches all hyphens which are not after an exponent
_exports.delimiter=delimiter;let hyphen=/([^e])-/gi;// Replaces and tests for all path letters
_exports.hyphen=hyphen;let pathLetters=/[MLHVCSQTAZ]/gi;// yes we need this one, too
_exports.pathLetters=pathLetters;let isPathLetter=/[MLHVCSQTAZ]/i;// matches 0.154.23.45
_exports.isPathLetter=isPathLetter;let numbersWithDots=/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi;// matches .
_exports.numbersWithDots=numbersWithDots;let dots=/\./g;_exports.dots=dots;var regex={numberAndUnit:numberAndUnit,hex:hex,rgb:rgb,reference:reference,transforms:transforms,whitespace:whitespace,isHex:isHex,isRgb:isRgb,isCss:isCss,isBlank:isBlank,isNumber:isNumber,isPercent:isPercent,isImage:isImage,delimiter:delimiter,hyphen:hyphen,pathLetters:pathLetters,isPathLetter:isPathLetter,numbersWithDots:numbersWithDots,dots:dots};_exports.regex=_exports.$regex=regex;function classes(){var attr=this.attr("class");return null==attr?[]:attr.trim().split(delimiter)}// Return true if class exists on the node, false otherwise
function hasClass(name){return-1!==this.classes().indexOf(name)}// Add class to the node
function addClass(name){if(!this.hasClass(name)){var array=this.classes();array.push(name);this.attr("class",array.join(" "))}return this}// Remove class from the node
function removeClass(name){if(this.hasClass(name)){this.attr("class",this.classes().filter(function(c){return c!==name}).join(" "))}return this}// Toggle the presence of a class on the node
function toggleClass(name){return this.hasClass(name)?this.removeClass(name):this.addClass(name)}registerMethods("Dom",{classes,hasClass,addClass,removeClass,toggleClass});var _class={classes:classes,hasClass:hasClass,addClass:addClass,removeClass:removeClass,toggleClass:toggleClass};_exports.$class=_class;function css(style,val){let ret={};if(0===arguments.length){// get full style as object
this.node.style.cssText.split(/\s*;\s*/).filter(function(el){return!!el.length}).forEach(function(el){let t=el.split(/\s*:\s*/);ret[t[0]]=t[1]});return ret}if(2>arguments.length){// get style properties in the array
if(Array.isArray(style)){for(let name of style){let cased=camelCase(name);ret[cased]=this.node.style[cased]}return ret}// get style for property
if("string"===typeof style){return this.node.style[camelCase(style)]}// set styles in object
if("object"===typeof style){for(let name in style){// set empty string if null/undefined/'' was given
this.node.style[camelCase(name)]=null==style[name]||isBlank.test(style[name])?"":style[name]}}}// set style for property
if(2===arguments.length){this.node.style[camelCase(style)]=null==val||isBlank.test(val)?"":val}return this}// Show element
function show(){return this.css("display","")}// Hide element
function hide(){return this.css("display","none")}// Is element visible?
function visible(){return"none"!==this.css("display")}registerMethods("Dom",{css,show,hide,visible});var css$1={css:css,show:show,hide:hide,visible:visible};_exports.$css=css$1;function data(a,v,r){if("object"===typeof a){for(v in a){this.data(v,a[v])}}else if(2>arguments.length){try{return JSON.parse(this.attr("data-"+a))}catch(e){return this.attr("data-"+a)}}else{this.attr("data-"+a,null===v?null:!0===r||"string"===typeof v||"number"===typeof v?v:JSON.stringify(v))}return this}registerMethods("Dom",{data});var data$1={data:data};_exports.$data=data$1;function remember(k,v){// remember every item in an object individually
if("object"===typeof arguments[0]){for(var key in k){this.remember(key,k[key])}}else if(1===arguments.length){// retrieve memory
return this.memory()[k]}else{// store memory
this.memory()[k]=v}return this}// Erase a given memory
function forget(){if(0===arguments.length){this._memory={}}else{for(var i=arguments.length-1;0<=i;i--){delete this.memory()[arguments[i]]}}return this}// This triggers creation of a new hidden class which is not performant
// However, this function is not rarely used so it will not happen frequently
// Return local memory object
function memory(){return this._memory=this._memory||{}}registerMethods("Dom",{remember,forget,memory});var memory$1={remember:remember,forget:forget,memory:memory};_exports.$memory=memory$1;let listenerId=0,windowEvents={};function getEvents(instance){let n=instance.getEventHolder();// We dont want to save events in global space
if(n===globals.window)n=windowEvents;if(!n.events)n.events={};return n.events}function getEventTarget(instance){return instance.getEventTarget()}function clearEvents(instance){const n=instance.getEventHolder();if(n.events)n.events={}}// Add event binder in the SVG namespace
function on(node,events,listener,binding,options){var l=listener.bind(binding||node),instance=makeInstance(node),bag=getEvents(instance),n=getEventTarget(instance);// events can be an array of events or a string of events
events=Array.isArray(events)?events:events.split(delimiter);// add id to listener
if(!listener._svgjsListenerId){listener._svgjsListenerId=++listenerId}events.forEach(function(event){var ev=event.split(".")[0],ns=event.split(".")[1]||"*";// ensure valid object
bag[ev]=bag[ev]||{};bag[ev][ns]=bag[ev][ns]||{};// reference listener
bag[ev][ns][listener._svgjsListenerId]=l;// add listener
n.addEventListener(ev,l,options||!1)})}// Add event unbinder in the SVG namespace
function off(node,events,listener,options){var instance=makeInstance(node),bag=getEvents(instance),n=getEventTarget(instance);// listener can be a function or a number
if("function"===typeof listener){listener=listener._svgjsListenerId;if(!listener)return}// events can be an array of events or a string or undefined
events=Array.isArray(events)?events:(events||"").split(delimiter);events.forEach(function(event){var ev=event&&event.split(".")[0],ns=event&&event.split(".")[1],namespace,l;if(listener){// remove listener reference
if(bag[ev]&&bag[ev][ns||"*"]){// removeListener
n.removeEventListener(ev,bag[ev][ns||"*"][listener],options||!1);delete bag[ev][ns||"*"][listener]}}else if(ev&&ns){// remove all listeners for a namespaced event
if(bag[ev]&&bag[ev][ns]){for(l in bag[ev][ns]){off(n,[ev,ns].join("."),l)}delete bag[ev][ns]}}else if(ns){// remove all listeners for a specific namespace
for(event in bag){for(namespace in bag[event]){if(ns===namespace){off(n,[event,ns].join("."))}}}}else if(ev){// remove all listeners for the event
if(bag[ev]){for(namespace in bag[ev]){off(n,[ev,namespace].join("."))}delete bag[ev]}}else{// remove all listeners on a given node
for(event in bag){off(n,event)}clearEvents(instance)}})}function dispatch(node,event,data){var n=getEventTarget(node);// Dispatch event
if(event instanceof globals.window.Event){n.dispatchEvent(event)}else{event=new globals.window.CustomEvent(event,{detail:data,cancelable:!0});n.dispatchEvent(event)}return event}var event={on:on,off:off,dispatch:dispatch};_exports.$event=event;function sixDigitHex(hex){return 4===hex.length?["#",hex.substring(1,2),hex.substring(1,2),hex.substring(2,3),hex.substring(2,3),hex.substring(3,4),hex.substring(3,4)].join(""):hex}function componentHex(component){const integer=Math.round(component),bounded=Math.max(0,Math.min(255,integer)),hex=bounded.toString(16);return 1===hex.length?"0"+hex:hex}function is(object,space){for(let i=space.length;i--;){if(null==object[space[i]]){return!1}}return!0}function getParameters(a,b){const params=is(a,"rgb")?{_a:a.r,_b:a.g,_c:a.b,space:"rgb"}:is(a,"xyz")?{_a:a.x,_b:a.y,_c:a.z,_d:0,space:"xyz"}:is(a,"hsl")?{_a:a.h,_b:a.s,_c:a.l,_d:0,space:"hsl"}:is(a,"lab")?{_a:a.l,_b:a.a,_c:a.b,_d:0,space:"lab"}:is(a,"lch")?{_a:a.l,_b:a.c,_c:a.h,_d:0,space:"lch"}:is(a,"cmyk")?{_a:a.c,_b:a.m,_c:a.y,_d:a.k,space:"cmyk"}:{_a:0,_b:0,_c:0,space:"rgb"};params.space=b||params.space;return params}function cieSpace(space){if("lab"===space||"xyz"===space||"lch"===space){return!0}else{return!1}}function hueToRgb(p,q,t){if(0>t)t+=1;if(1<t)t-=1;if(t<1/6)return p+6*(q-p)*t;if(t<1/2)return q;if(t<2/3)return p+6*((q-p)*(2/3-t));return p}class Color{constructor(...inputs){this.init(...inputs)}init(a=0,b=0,c=0,d=0,space="rgb"){// This catches the case when a falsy value is passed like ''
a=!a?0:a;// Reset all values in case the init function is rerun with new color space
if(this.space){for(let component in this.space){delete this[this.space[component]]}}if("number"===typeof a){// Allow for the case that we don't need d...
space="string"===typeof d?d:space;d="string"===typeof d?0:d;// Assign the values straight to the color
Object.assign(this,{_a:a,_b:b,_c:c,_d:d,space});// If the user gave us an array, make the color from it
}else if(a instanceof Array){this.space=b||("string"===typeof a[3]?a[3]:a[4])||"rgb";Object.assign(this,{_a:a[0],_b:a[1],_c:a[2],_d:a[3]||0})}else if(a instanceof Object){// Set the object up and assign its values directly
const values=getParameters(a,b);Object.assign(this,values)}else if("string"===typeof a){if(isRgb.test(a)){const noWhitespace=a.replace(whitespace,""),[_a,_b,_c]=rgb.exec(noWhitespace).slice(1,4).map(v=>parseInt(v));Object.assign(this,{_a,_b,_c,_d:0,space:"rgb"})}else if(isHex.test(a)){const hexParse=v=>parseInt(v,16),[,_a,_b,_c]=hex.exec(sixDigitHex(a)).map(hexParse);Object.assign(this,{_a,_b,_c,_d:0,space:"rgb"})}else throw Error(`Unsupported string format, can't construct Color`)}// Now add the components as a convenience
const{_a,_b,_c,_d}=this,components="rgb"===this.space?{r:_a,g:_b,b:_c}:"xyz"===this.space?{x:_a,y:_b,z:_c}:"hsl"===this.space?{h:_a,s:_b,l:_c}:"lab"===this.space?{l:_a,a:_b,b:_c}:"lch"===this.space?{l:_a,c:_b,h:_c}:"cmyk"===this.space?{c:_a,m:_b,y:_c,k:_d}:{};Object.assign(this,components)}/*
    Conversion Methods
    */rgb(){if("rgb"===this.space){return this}else if(cieSpace(this.space)){// Convert to the xyz color space
let{x,y,z}=this;if("lab"===this.space||"lch"===this.space){// Get the values in the lab space
let{l,a,b}=this;if("lch"===this.space){let{c,h}=this;const dToR=Math.PI/180;a=c*Math.cos(dToR*h);b=c*Math.sin(dToR*h)}// Undo the nonlinear function
const yL=(l+16)/116,xL=a/500+yL,zL=yL-b/200,ct=16/116,mx=.008856,nm=7.787;x=.95047*(Math.pow(xL,3)>mx?Math.pow(xL,3):(xL-ct)/nm);y=1*(Math.pow(yL,3)>mx?Math.pow(yL,3):(yL-ct)/nm);z=1.08883*(Math.pow(zL,3)>mx?Math.pow(zL,3):(zL-ct)/nm)}// Convert xyz to unbounded rgb values
const rU=3.2406*x+-1.5372*y+-.4986*z,gU=-.9689*x+1.8758*y+.0415*z,bU=.0557*x+-.204*y+1.057*z;// Convert the values to true rgb values
let pow=Math.pow,bd=.0031308;const r=rU>bd?1.055*pow(rU,1/2.4)-.055:12.92*rU,g=gU>bd?1.055*pow(gU,1/2.4)-.055:12.92*gU,b=bU>bd?1.055*pow(bU,1/2.4)-.055:12.92*bU,color=new Color(255*r,255*g,255*b);return color}else if("hsl"===this.space){// https://bgrins.github.io/TinyColor/docs/tinycolor.html
// Get the current hsl values
let{h,s,l}=this;h/=360;s/=100;l/=100;// If we are grey, then just make the color directly
if(0===s){l*=255;let color=new Color(l,l,l);return color}// TODO I have no idea what this does :D If you figure it out, tell me!
const q=.5>l?l*(1+s):l+s-l*s,p=2*l-q,r=255*hueToRgb(p,q,h+1/3),g=255*hueToRgb(p,q,h),b=255*hueToRgb(p,q,h-1/3),color=new Color(r,g,b);return color}else if("cmyk"===this.space){// https://gist.github.com/felipesabino/5066336
// Get the normalised cmyk values
const{c,m,y,k}=this,r=255*(1-Math.min(1,c*(1-k)+k)),g=255*(1-Math.min(1,m*(1-k)+k)),b=255*(1-Math.min(1,y*(1-k)+k)),color=new Color(r,g,b);// Get the rgb values
return color}else{return this}}lab(){// Get the xyz color
const{x,y,z}=this.xyz(),l=116*y-16,a=500*(x-y),b=200*(y-z),color=new Color(l,a,b,"lab");// Get the lab components
return color}xyz(){// Normalise the red, green and blue values
const{_a:r255,_b:g255,_c:b255}=this.rgb(),[r,g,b]=[r255,g255,b255].map(v=>v/255),rL=.04045<r?Math.pow((r+.055)/1.055,2.4):r/12.92,gL=.04045<g?Math.pow((g+.055)/1.055,2.4):g/12.92,bL=.04045<b?Math.pow((b+.055)/1.055,2.4):b/12.92,xU=(.4124*rL+.3576*gL+.1805*bL)/.95047,yU=(.2126*rL+.7152*gL+.0722*bL)/1,zU=(.0193*rL+.1192*gL+.9505*bL)/1.08883,x=.008856<xU?Math.pow(xU,1/3):7.787*xU+16/116,y=.008856<yU?Math.pow(yU,1/3):7.787*yU+16/116,z=.008856<zU?Math.pow(zU,1/3):7.787*zU+16/116,color=new Color(x,y,z,"xyz");return color}lch(){// Get the lab color directly
const{l,a,b}=this.lab(),c=Math.sqrt(Math.pow(a,2)+Math.pow(b,2));// Get the chromaticity and the hue using polar coordinates
let h=180*Math.atan2(b,a)/Math.PI;if(0>h){h*=-1;h=360-h}// Make a new color and return it
const color=new Color(l,c,h,"lch");return color}hsl(){// Get the rgb values
const{_a,_b,_c}=this.rgb(),[r,g,b]=[_a,_b,_c].map(v=>v/255),max=Math.max(r,g,b),min=Math.min(r,g,b),l=(max+min)/2,isGrey=max===min,delta=max-min,s=isGrey?0:.5<l?delta/(2-max-min):delta/(max+min),h=isGrey?0:max===r?((g-b)/delta+(g<b?6:0))/6:max===g?((b-r)/delta+2)/6:max===b?((r-g)/delta+4)/6:0,color=new Color(360*h,100*s,100*l,"hsl");return color}cmyk(){// Get the rgb values for the current color
const{_a,_b,_c}=this.rgb(),[r,g,b]=[_a,_b,_c].map(v=>v/255),k=Math.min(1-r,1-g,1-b);if(1===k){// Catch the black case
return new Color(0,0,0,1,"cmyk")}const c=(1-r-k)/(1-k),m=(1-g-k)/(1-k),y=(1-b-k)/(1-k),color=new Color(c,m,y,k,"cmyk");return color}/*
    Input and Output methods
    */_clamped(){let{_a,_b,_c}=this.rgb(),{max,min,round}=Math,format=v=>max(0,min(round(v),255));return[_a,_b,_c].map(format)}toHex(){let[r,g,b]=this._clamped().map(componentHex);return`#${r}${g}${b}`}toString(){return this.toHex()}toRgb(){let[rV,gV,bV]=this._clamped(),string=`rgb(${rV},${gV},${bV})`;return string}toArray(){let{_a,_b,_c,_d,space}=this;return[_a,_b,_c,_d,space]}/*
    Generating random colors
    */static random(mode="vibrant",t,u){// Get the math modules
const{random,round,sin,PI:pi}=Math;// Run the correct generator
if("vibrant"===mode){const l=(81-57)*random()+57,c=(83-45)*random()+45,h=360*random(),color=new Color(l,c,h,"lch");return color}else if("sine"===mode){t=null==t?random():t;const r=round(80*sin(2*pi*t/.5+.01)+150),g=round(50*sin(2*pi*t/.5+4.6)+200),b=round(100*sin(2*pi*t/.5+2.3)+150),color=new Color(r,g,b);return color}else if("pastel"===mode){const l=(94-86)*random()+86,c=(26-9)*random()+9,h=360*random(),color=new Color(l,c,h,"lch");return color}else if("dark"===mode){const l=10+10*random(),c=(125-75)*random()+86,h=360*random(),color=new Color(l,c,h,"lch");return color}else if("rgb"===mode){const r=255*random(),g=255*random(),b=255*random(),color=new Color(r,g,b);return color}else if("lab"===mode){const l=100*random(),a=256*random()-128,b=256*random()-128,color=new Color(l,a,b,"lab");return color}else if("grey"===mode){const grey=255*random(),color=new Color(grey,grey,grey);return color}}/*
    Constructing colors
    */ // Test if given value is a color string
static test(color){return"string"===typeof color&&(isHex.test(color)||isRgb.test(color))}// Test if given value is an rgb object
static isRgb(color){return color&&"number"===typeof color.r&&"number"===typeof color.g&&"number"===typeof color.b}// Test if given value is a color
static isColor(color){return color&&(color instanceof Color||this.isRgb(color)||this.test(color))}}_exports.Color=_exports.$ColorDefault=Color;var Color$1={default:Color};_exports.$Color=Color$1;class Point{// Initialize
constructor(...args){this.init(...args)}init(x,y){let source,base={x:0,y:0// ensure source as object
};source=Array.isArray(x)?{x:x[0],y:x[1]}:"object"===typeof x?{x:x.x,y:x.y}:{x:x,y:y// merge source
};this.x=null==source.x?base.x:source.x;this.y=null==source.y?base.y:source.y;return this}// Clone point
clone(){return new Point(this)}transform(m){return this.clone().transformO(m)}// Transform point with matrix
transformO(m){if(!Matrix.isMatrixLike(m)){m=new Matrix(m)}let{x,y}=this;// Perform the matrix multiplication
this.x=m.a*x+m.c*y+m.e;this.y=m.b*x+m.d*y+m.f;return this}toArray(){return[this.x,this.y]}}_exports.Point=_exports.$PointDefault=Point;function point(x,y){return new Point(x,y).transform(this.screenCTM().inverse())}var Point$1={default:Point,point:point};_exports.$Point=Point$1;function closeEnough(a,b,threshold){return Math.abs(b-a)<(threshold||1e-6)}class Matrix{constructor(...args){this.init(...args)}// Initialize
init(source){var base=Matrix.fromArray([1,0,0,1,0,0]);// ensure source as object
source=source instanceof Element?source.matrixify():"string"===typeof source?Matrix.fromArray(source.split(delimiter).map(parseFloat)):Array.isArray(source)?Matrix.fromArray(source):"object"===typeof source&&Matrix.isMatrixLike(source)?source:"object"===typeof source?new Matrix().transform(source):6===arguments.length?Matrix.fromArray([].slice.call(arguments)):base;// Merge the source matrix with the base matrix
this.a=null!=source.a?source.a:base.a;this.b=null!=source.b?source.b:base.b;this.c=null!=source.c?source.c:base.c;this.d=null!=source.d?source.d:base.d;this.e=null!=source.e?source.e:base.e;this.f=null!=source.f?source.f:base.f;return this}// Clones this matrix
clone(){return new Matrix(this)}// Transform a matrix into another matrix by manipulating the space
transform(o){// Check if o is a matrix and then left multiply it directly
if(Matrix.isMatrixLike(o)){var matrix=new Matrix(o);return matrix.multiplyO(this)}// Get the proposed transformations and the current transformations
var t=Matrix.formatTransforms(o),current=this;let{x:ox,y:oy}=new Point(t.ox,t.oy).transform(current);// Construct the resulting matrix
var transformer=new Matrix().translateO(t.rx,t.ry).lmultiplyO(current).translateO(-ox,-oy).scaleO(t.scaleX,t.scaleY).skewO(t.skewX,t.skewY).shearO(t.shear).rotateO(t.theta).translateO(ox,oy);// If we want the origin at a particular place, we force it there
if(isFinite(t.px)||isFinite(t.py)){const origin=new Point(ox,oy).transform(transformer),dx=t.px?t.px-origin.x:0,dy=t.py?t.py-origin.y:0;// TODO: Replace t.px with isFinite(t.px)
transformer.translateO(dx,dy)}// Translate now after positioning
transformer.translateO(t.tx,t.ty);return transformer}// Applies a matrix defined by its affine parameters
compose(o){if(o.origin){o.originX=o.origin[0];o.originY=o.origin[1]}// Get the parameters
var ox=o.originX||0,oy=o.originY||0,sx=o.scaleX||1,sy=o.scaleY||1,lam=o.shear||0,theta=o.rotate||0,tx=o.translateX||0,ty=o.translateY||0,result=new Matrix().translateO(-ox,-oy).scaleO(sx,sy).shearO(lam).rotateO(theta).translateO(tx,ty).lmultiplyO(this).translateO(ox,oy);return result}// Decomposes this matrix into its affine parameters
decompose(cx=0,cy=0){// Get the parameters from the matrix
var a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f,determinant=a*d-b*c,ccw=0<determinant?1:-1,sx=ccw*Math.sqrt(a*a+b*b),thetaRad=Math.atan2(ccw*b,ccw*a),theta=180/Math.PI*thetaRad,ct=Math.cos(thetaRad),st=Math.sin(thetaRad),lam=(a*c+b*d)/determinant,sy=c*sx/(lam*a-b)||d*sx/(lam*b+a);// Use the translations
let tx=e-cx+cx*ct*sx+cy*(lam*ct*sx-st*sy),ty=f-cy+cx*st*sx+cy*(lam*st*sx+ct*sy);// Construct the decomposition and return it
return{// Return the affine parameters
scaleX:sx,scaleY:sy,shear:lam,rotate:theta,translateX:tx,translateY:ty,originX:cx,originY:cy,// Return the matrix parameters
a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f}}// Left multiplies by the given matrix
multiply(matrix){return this.clone().multiplyO(matrix)}multiplyO(matrix){// Get the matrices
var l=this,r=matrix instanceof Matrix?matrix:new Matrix(matrix);return Matrix.matrixMultiply(l,r,this)}lmultiply(matrix){return this.clone().lmultiplyO(matrix)}lmultiplyO(matrix){var r=this,l=matrix instanceof Matrix?matrix:new Matrix(matrix);return Matrix.matrixMultiply(l,r,this)}// Inverses matrix
inverseO(){// Get the current parameters out of the matrix
var a=this.a,b=this.b,c=this.c,d=this.d,e=this.e,f=this.f,det=a*d-b*c;if(!det)throw new Error("Cannot invert "+this);// Calculate the top 2x2 matrix
var na=d/det,nb=-b/det,nc=-c/det,nd=a/det,ne=-(na*e+nc*f),nf=-(nb*e+nd*f);// Construct the inverted matrix
this.a=na;this.b=nb;this.c=nc;this.d=nd;this.e=ne;this.f=nf;return this}inverse(){return this.clone().inverseO()}// Translate matrix
translate(x,y){return this.clone().translateO(x,y)}translateO(x,y){this.e+=x||0;this.f+=y||0;return this}// Scale matrix
scale(x,y,cx,cy){return this.clone().scaleO(...arguments)}scaleO(x,y=x,cx=0,cy=0){// Support uniform scaling
if(3===arguments.length){cy=cx;cx=y;y=x}let{a,b,c,d,e,f}=this;this.a=a*x;this.b=b*y;this.c=c*x;this.d=d*y;this.e=e*x-cx*x+cx;this.f=f*y-cy*y+cy;return this}// Rotate matrix
rotate(r,cx,cy){return this.clone().rotateO(r,cx,cy)}rotateO(r,cx=0,cy=0){// Convert degrees to radians
r=radians(r);let cos=Math.cos(r),sin=Math.sin(r),{a,b,c,d,e,f}=this;this.a=a*cos-b*sin;this.b=b*cos+a*sin;this.c=c*cos-d*sin;this.d=d*cos+c*sin;this.e=e*cos-f*sin+cy*sin-cx*cos+cx;this.f=f*cos+e*sin-cx*sin-cy*cos+cy;return this}// Flip matrix on x or y, at a given offset
flip(axis,around){return this.clone().flipO(axis,around)}flipO(axis,around){return"x"===axis?this.scaleO(-1,1,around,0):"y"===axis?this.scaleO(1,-1,0,around):this.scaleO(-1,-1,axis,around||axis);// Define an x, y flip point
}// Shear matrix
shear(a,cx,cy){return this.clone().shearO(a,cx,cy)}shearO(lx,cx=0,cy=0){let{a,b,c,d,e,f}=this;this.a=a+b*lx;this.c=c+d*lx;this.e=e+f*lx-cy*lx;return this}// Skew Matrix
skew(x,y,cx,cy){return this.clone().skewO(...arguments)}skewO(x,y=x,cx=0,cy=0){// support uniformal skew
if(3===arguments.length){cy=cx;cx=y;y=x}// Convert degrees to radians
x=radians(x);y=radians(y);let lx=Math.tan(x),ly=Math.tan(y),{a,b,c,d,e,f}=this;this.a=a+b*lx;this.b=b+a*ly;this.c=c+d*lx;this.d=d+c*ly;this.e=e+f*lx-cy*lx;this.f=f+e*ly-cx*ly;return this}// SkewX
skewX(x,cx,cy){return this.skew(x,0,cx,cy)}skewXO(x,cx,cy){return this.skewO(x,0,cx,cy)}// SkewY
skewY(y,cx,cy){return this.skew(0,y,cx,cy)}skewYO(y,cx,cy){return this.skewO(0,y,cx,cy)}// Transform around a center point
aroundO(cx,cy,matrix){var dx=cx||0,dy=cy||0;return this.translateO(-dx,-dy).lmultiplyO(matrix).translateO(dx,dy)}around(cx,cy,matrix){return this.clone().aroundO(cx,cy,matrix)}// Check if two matrices are equal
equals(other){var comp=new Matrix(other);return closeEnough(this.a,comp.a)&&closeEnough(this.b,comp.b)&&closeEnough(this.c,comp.c)&&closeEnough(this.d,comp.d)&&closeEnough(this.e,comp.e)&&closeEnough(this.f,comp.f)}// Convert matrix to string
toString(){return"matrix("+this.a+","+this.b+","+this.c+","+this.d+","+this.e+","+this.f+")"}toArray(){return[this.a,this.b,this.c,this.d,this.e,this.f]}valueOf(){return{a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f}}static fromArray(a){return{a:a[0],b:a[1],c:a[2],d:a[3],e:a[4],f:a[5]}}static isMatrixLike(o){return null!=o.a||null!=o.b||null!=o.c||null!=o.d||null!=o.e||null!=o.f}static formatTransforms(o){// Get all of the parameters required to form the matrix
var flipBoth="both"===o.flip||!0===o.flip,flipX=o.flip&&(flipBoth||"x"===o.flip)?-1:1,flipY=o.flip&&(flipBoth||"y"===o.flip)?-1:1,skewX=o.skew&&o.skew.length?o.skew[0]:isFinite(o.skew)?o.skew:isFinite(o.skewX)?o.skewX:0,skewY=o.skew&&o.skew.length?o.skew[1]:isFinite(o.skew)?o.skew:isFinite(o.skewY)?o.skewY:0,scaleX=o.scale&&o.scale.length?o.scale[0]*flipX:isFinite(o.scale)?o.scale*flipX:isFinite(o.scaleX)?o.scaleX*flipX:flipX,scaleY=o.scale&&o.scale.length?o.scale[1]*flipY:isFinite(o.scale)?o.scale*flipY:isFinite(o.scaleY)?o.scaleY*flipY:flipY,shear=o.shear||0,theta=o.rotate||o.theta||0,origin=new Point(o.origin||o.around||o.ox||o.originX,o.oy||o.originY),ox=origin.x,oy=origin.y,position=new Point(o.position||o.px||o.positionX,o.py||o.positionY),px=position.x,py=position.y,translate=new Point(o.translate||o.tx||o.translateX,o.ty||o.translateY),tx=translate.x,ty=translate.y,relative=new Point(o.relative||o.rx||o.relativeX,o.ry||o.relativeY),rx=relative.x,ry=relative.y;// Populate all of the values
return{scaleX,scaleY,skewX,skewY,shear,theta,rx,ry,tx,ty,ox,oy,px,py}}// left matrix, right matrix, target matrix which is overwritten
static matrixMultiply(l,r,o){// Work out the product directly
var a=l.a*r.a+l.c*r.b,b=l.b*r.a+l.d*r.b,c=l.a*r.c+l.c*r.d,d=l.b*r.c+l.d*r.d,e=l.e+l.a*r.e+l.c*r.f,f=l.f+l.b*r.e+l.d*r.f;// make sure to use local variables because l/r and o could be the same
o.a=a;o.b=b;o.c=c;o.d=d;o.e=e;o.f=f;return o}}_exports.Matrix=_exports.$MatrixDefault=Matrix;function ctm(){return new Matrix(this.node.getCTM())}function screenCTM(){/* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537
     This is needed because FF does not return the transformation matrix
     for the inner coordinate system when getScreenCTM() is called on nested svgs.
     However all other Browsers do that */if("function"===typeof this.isRoot&&!this.isRoot()){var rect=this.rect(1,1),m=rect.node.getScreenCTM();rect.remove();return new Matrix(m)}return new Matrix(this.node.getScreenCTM())}register(Matrix,"Matrix");var Matrix$1={default:Matrix,ctm:ctm,screenCTM:screenCTM};_exports.$Matrix=Matrix$1;function parser(){// Reuse cached element if possible
if(!parser.nodes){let svg=makeInstance().size(2,0);svg.node.style.cssText=["opacity: 0","position: absolute","left: -100%","top: -100%","overflow: hidden"].join(";");svg.attr("focusable","false");let path=svg.path().node;parser.nodes={svg,path}}if(!parser.nodes.svg.node.parentNode){let b=globals.document.body||globals.document.documentElement;parser.nodes.svg.addTo(b)}return parser.nodes}var parser$1={default:parser};_exports.$parser=parser$1;function isNulledBox(box){return!box.width&&!box.height&&!box.x&&!box.y}function domContains(node){return node===globals.document||(globals.document.documentElement.contains||function(node){// This is IE - it does not support contains() for top-level SVGs
while(node.parentNode){node=node.parentNode}return node===globals.document}).call(globals.document.documentElement,node)}class Box{constructor(...args){this.init(...args)}init(source){var base=[0,0,0,0];source="string"===typeof source?source.split(delimiter).map(parseFloat):Array.isArray(source)?source:"object"===typeof source?[null!=source.left?source.left:source.x,null!=source.top?source.top:source.y,source.width,source.height]:4===arguments.length?[].slice.call(arguments):base;this.x=source[0]||0;this.y=source[1]||0;this.width=this.w=source[2]||0;this.height=this.h=source[3]||0;// Add more bounding box properties
this.x2=this.x+this.w;this.y2=this.y+this.h;this.cx=this.x+this.w/2;this.cy=this.y+this.h/2;return this}// Merge rect box with another, return a new instance
merge(box){let x=Math.min(this.x,box.x),y=Math.min(this.y,box.y),width=Math.max(this.x+this.width,box.x+box.width)-x,height=Math.max(this.y+this.height,box.y+box.height)-y;return new Box(x,y,width,height)}transform(m){if(!(m instanceof Matrix)){m=new Matrix(m)}let xMin=1/0,xMax=-Infinity,yMin=1/0,yMax=-Infinity,pts=[new Point(this.x,this.y),new Point(this.x2,this.y),new Point(this.x,this.y2),new Point(this.x2,this.y2)];pts.forEach(function(p){p=p.transform(m);xMin=Math.min(xMin,p.x);xMax=Math.max(xMax,p.x);yMin=Math.min(yMin,p.y);yMax=Math.max(yMax,p.y)});return new Box(xMin,yMin,xMax-xMin,yMax-yMin)}addOffset(){// offset by window scroll position, because getBoundingClientRect changes when window is scrolled
this.x+=globals.window.pageXOffset;this.y+=globals.window.pageYOffset;return this}toString(){return this.x+" "+this.y+" "+this.width+" "+this.height}toArray(){return[this.x,this.y,this.width,this.height]}isNulled(){return isNulledBox(this)}}_exports.Box=_exports.$BoxDefault=Box;function getBox(cb,retry){let box;try{box=cb(this.node);if(isNulledBox(box)&&!domContains(this.node)){throw new Error("Element not in the dom")}}catch(e){box=retry(this)}return box}function bbox(){return new Box(getBox.call(this,node=>node.getBBox(),el=>{try{let clone=el.clone().addTo(parser().svg).show(),box=clone.node.getBBox();clone.remove();return box}catch(e){throw new Error("Getting bbox of element \""+el.node.nodeName+"\" is not possible. "+e.toString())}}))}function rbox(el){let box=new Box(getBox.call(this,node=>node.getBoundingClientRect(),el=>{throw new Error("Getting rbox of element \""+el.node.nodeName+"\" is not possible")}));if(el)return box.transform(el.screenCTM().inverse());return box.addOffset()}registerMethods({viewbox:{viewbox(x,y,width,height){// act as getter
if(null==x)return new Box(this.attr("viewBox"));// act as setter
return this.attr("viewBox",new Box(x,y,width,height))},zoom(level,point){let width=this.node.clientWidth,height=this.node.clientHeight;const v=this.viewbox();// Firefox does not support clientHeight and returns 0
// https://bugzilla.mozilla.org/show_bug.cgi?id=874811
if(!width&&!height){var style=window.getComputedStyle(this.node);width=parseFloat(style.getPropertyValue("width"));height=parseFloat(style.getPropertyValue("height"))}const zoomX=width/v.width,zoomY=height/v.height,zoom=Math.min(zoomX,zoomY);if(null==level){return zoom}let zoomAmount=zoom/level;if(zoomAmount===1/0)zoomAmount=Number.MIN_VALUE;point=point||new Point(width/2/zoomX+v.x,height/2/zoomY+v.y);const box=new Box(v).transform(new Matrix({scale:zoomAmount,origin:point}));return this.viewbox(box)}}});register(Box,"Box");var Box$1={default:Box,bbox:bbox,rbox:rbox};/* eslint no-new-func: "off" */_exports.$Box=Box$1;const subClassArray=function(){try{// try es6 subclassing
return Function("name","baseClass","_constructor",["baseClass = baseClass || Array","return {","  [name]: class extends baseClass {","    constructor (...args) {","      super(...args)","      _constructor && _constructor.apply(this, args)","    }","  }","}[name]"].join("\n"))}catch(e){// Use es5 approach
return(name,baseClass=Array,_constructor)=>{const Arr=function(){baseClass.apply(this,arguments);_constructor&&_constructor.apply(this,arguments)};Arr.prototype=Object.create(baseClass.prototype);Arr.prototype.constructor=Arr;Arr.prototype.map=function(fn){const arr=new Arr;arr.push.apply(arr,Array.prototype.map.call(this,fn));return arr};return Arr}}}();_exports.subClassArray=subClassArray;var ArrayPolyfill={subClassArray:subClassArray};_exports.$ArrayPolyfill=ArrayPolyfill;const List=subClassArray("List",Array,function(arr=[]){// This catches the case, that native map tries to create an array with new Array(1)
if("number"===typeof arr)return this;this.length=0;this.push(...arr)});_exports.List=_exports.$ListDefault=List;extend(List,{each(fnOrMethodName,...args){if("function"===typeof fnOrMethodName){return this.map(el=>{return fnOrMethodName.call(el,el)})}else{return this.map(el=>{return el[fnOrMethodName](...args)})}},toArray(){return Array.prototype.concat.apply([],this)}});const reserved=["toArray","constructor","each"];List.extend=function(methods){methods=methods.reduce((obj,name)=>{// Don't overwrite own methods
if(reserved.includes(name))return obj;// Don't add private methods
if("_"===name[0])return obj;// Relay every call to each()
obj[name]=function(...attrs){return this.each(name,...attrs)};return obj},{});extend(List,methods)};var List$1={default:List};_exports.$List=List$1;function baseFind(query,parent){return new List(map((parent||globals.document).querySelectorAll(query),function(node){return adopt(node)}))}// Scoped find method
function find(query){return baseFind(query,this.node)}function findOne(query){return adopt(this.node.querySelector(query))}var selector={default:baseFind,find:find,findOne:findOne};_exports.$selector=selector;class EventTarget extends Base{constructor({events={}}={}){super();this.events=events}addEventListener(){}dispatch(event,data){return dispatch(this,event,data)}dispatchEvent(event){const bag=this.getEventHolder().events;if(!bag)return!0;const events=bag[event.type];for(let i in events){for(let j in events[i]){events[i][j](event)}}return!event.defaultPrevented}// Fire given event
fire(event,data){this.dispatch(event,data);return this}getEventHolder(){return this}getEventTarget(){return this}// Unbind event from listener
off(event,listener){off(this,event,listener);return this}// Bind given event to listener
on(event,listener,binding,options){on(this,event,listener,binding,options);return this}removeEventListener(){}}_exports.EventTarget=_exports.$EventTargetDefault=EventTarget;register(EventTarget,"EventTarget");var EventTarget$1={default:EventTarget};_exports.$EventTarget=EventTarget$1;function noop(){}// Default animation values
let timeline={duration:400,ease:">",delay:0// Default attribute values
};_exports.timeline=timeline;let attrs={// fill and stroke
"fill-opacity":1,"stroke-opacity":1,"stroke-width":0,"stroke-linejoin":"miter","stroke-linecap":"butt",fill:"#000000",stroke:"#000000",opacity:1,// position
x:0,y:0,cx:0,cy:0,// size
width:0,height:0,// radius
r:0,rx:0,ry:0,// gradient
offset:0,"stop-opacity":1,"stop-color":"#000000",// text
"text-anchor":"start"};_exports.attrs=attrs;var defaults={noop:noop,timeline:timeline,attrs:attrs};_exports.defaults=_exports.$defaults=defaults;const SVGArray=subClassArray("SVGArray",Array,function(arr){this.init(arr)});_exports.Array=_exports.$SVGArrayDefault=SVGArray;extend(SVGArray,{init(arr){// This catches the case, that native map tries to create an array with new Array(1)
if("number"===typeof arr)return this;this.length=0;this.push(...this.parse(arr));return this},toArray(){return Array.prototype.concat.apply([],this)},toString(){return this.join(" ")},// Flattens the array if needed
valueOf(){const ret=[...this];return ret},// Parse whitespace separated string
parse(array=[]){// If already is an array, no need to parse it
if(array instanceof Array)return array;return array.trim().split(delimiter).map(parseFloat)},clone(){return new this.constructor(this)},toSet(){return new Set(this)}});var SVGArray$1={default:SVGArray};_exports.$SVGArray=SVGArray$1;class SVGNumber{// Initialize
constructor(...args){this.init(...args)}init(value,unit){unit=Array.isArray(value)?value[1]:unit;value=Array.isArray(value)?value[0]:value;// initialize defaults
this.value=0;this.unit=unit||"";// parse value
if("number"===typeof value){// ensure a valid numeric value
this.value=isNaN(value)?0:!isFinite(value)?0>value?-34e37:+34e37:value}else if("string"===typeof value){unit=value.match(numberAndUnit);if(unit){// make value numeric
this.value=parseFloat(unit[1]);// normalize
if("%"===unit[5]){this.value/=100}else if("s"===unit[5]){this.value*=1e3}// store unit
this.unit=unit[5]}}else{if(value instanceof SVGNumber){this.value=value.valueOf();this.unit=value.unit}}return this}toString(){return("%"===this.unit?~~(1e8*this.value)/1e6:"s"===this.unit?this.value/1e3:this.value)+this.unit}toJSON(){return this.toString()}toArray(){return[this.value,this.unit]}valueOf(){return this.value}// Add number
plus(number){number=new SVGNumber(number);return new SVGNumber(this+number,this.unit||number.unit)}// Subtract number
minus(number){number=new SVGNumber(number);return new SVGNumber(this-number,this.unit||number.unit)}// Multiply number
times(number){number=new SVGNumber(number);return new SVGNumber(this*number,this.unit||number.unit)}// Divide number
divide(number){number=new SVGNumber(number);return new SVGNumber(this/number,this.unit||number.unit)}convert(unit){return new SVGNumber(this.value,unit)}}_exports.Number=_exports.$SVGNumberDefault=SVGNumber;var SVGNumber$1={default:SVGNumber};_exports.$SVGNumber=SVGNumber$1;const hooks=[];function registerAttrHook(fn){hooks.push(fn)}// Set svg element attribute
function attr(attr,val,ns){// act as full getter
if(null==attr){// get an object of attributes
attr={};val=this.node.attributes;for(let node of val){attr[node.nodeName]=isNumber.test(node.nodeValue)?parseFloat(node.nodeValue):node.nodeValue}return attr}else if(attr instanceof Array){// loop through array and get all values
return attr.reduce((last,curr)=>{last[curr]=this.attr(curr);return last},{})}else if("object"===typeof attr&&attr.constructor===Object){// apply every attribute individually if an object is passed
for(val in attr)this.attr(val,attr[val])}else if(null===val){// remove value
this.node.removeAttribute(attr)}else if(null==val){// act as a getter if the first and only argument is not an object
val=this.node.getAttribute(attr);return null==val?attrs[attr]:isNumber.test(val)?parseFloat(val):val}else{// Loop through hooks and execute them to convert value
val=hooks.reduce((_val,hook)=>{return hook(attr,_val,this)},val);// ensure correct numeric values (also accepts NaN and Infinity)
if("number"===typeof val){val=new SVGNumber(val)}else if(Color.isColor(val)){// ensure full hex color
val=new Color(val)}else if(val.constructor===Array){// Check for plain arrays and parse array values
val=new SVGArray(val)}// if the passed attribute is leading...
if("leading"===attr){// ... call the leading method instead
if(this.leading){this.leading(val)}}else{// set given attribute on node
"string"===typeof ns?this.node.setAttributeNS(ns,attr,val.toString()):this.node.setAttribute(attr,val.toString())}// rebuild if required
if(this.rebuild&&("font-size"===attr||"x"===attr)){this.rebuild()}}return this}var attr$1={registerAttrHook:registerAttrHook,default:attr};_exports.$attr=attr$1;class Dom extends EventTarget{constructor(node,attrs){super(node);this.node=node;this.type=node.nodeName;if(attrs&&node!==attrs){this.attr(attrs)}}// Add given element at a position
add(element,i){element=makeInstance(element);if(null==i){this.node.appendChild(element.node)}else if(element.node!==this.node.childNodes[i]){this.node.insertBefore(element.node,this.node.childNodes[i])}return this}// Add element to given container and return self
addTo(parent){return makeInstance(parent).put(this)}// Returns all child elements
children(){return new List(map(this.node.children,function(node){return adopt(node)}))}// Remove all elements in this container
clear(){// remove children
while(this.node.hasChildNodes()){this.node.removeChild(this.node.lastChild)}return this}// Clone element
clone(){// write dom data to the dom so the clone can pickup the data
this.writeDataToDom();// clone element and assign new id
return assignNewId(this.node.cloneNode(!0))}// Iterates over all children and invokes a given block
each(block,deep){var children=this.children(),i,il;for(i=0,il=children.length;i<il;i++){block.apply(children[i],[i,children]);if(deep){children[i].each(block,deep)}}return this}element(nodeName){return this.put(new Dom(create(nodeName)))}// Get first child
first(){return adopt(this.node.firstChild)}// Get a element at the given index
get(i){return adopt(this.node.childNodes[i])}getEventHolder(){return this.node}getEventTarget(){return this.node}// Checks if the given element is a child
has(element){return 0<=this.index(element)}// Get / set id
id(id){// generate new id if no id set
if("undefined"===typeof id&&!this.node.id){this.node.id=eid(this.type)}// dont't set directly width this.node.id to make `null` work correctly
return this.attr("id",id)}// Gets index of given element
index(element){return[].slice.call(this.node.childNodes).indexOf(element.node)}// Get the last child
last(){return adopt(this.node.lastChild)}// matches the element vs a css selector
matches(selector){const el=this.node;return(el.matches||el.matchesSelector||el.msMatchesSelector||el.mozMatchesSelector||el.webkitMatchesSelector||el.oMatchesSelector).call(el,selector)}// Returns the parent element instance
parent(type){var parent=this;// check for parent
if(!parent.node.parentNode)return null;// get parent element
parent=adopt(parent.node.parentNode);if(!type)return parent;// loop trough ancestors if type is given
while(parent){if("string"===typeof type?parent.matches(type):parent instanceof type)return parent;if(!parent.node.parentNode||"#document"===parent.node.parentNode.nodeName||"#document-fragment"===parent.node.parentNode.nodeName)return null;// #759, #720
parent=adopt(parent.node.parentNode)}}// Basically does the same as `add()` but returns the added element instead
put(element,i){this.add(element,i);return element}// Add element to given container and return container
putIn(parent){return makeInstance(parent).add(this)}// Remove element
remove(){if(this.parent()){this.parent().removeElement(this)}return this}// Remove a given child
removeElement(element){this.node.removeChild(element.node);return this}// Replace this with element
replace(element){element=makeInstance(element);this.node.parentNode.replaceChild(element.node,this.node);return element}round(precision=2,map){const factor=Math.pow(10,precision),attrs=this.attr();// If we have no map, build one from attrs
if(!map){map=Object.keys(attrs)}// Holds rounded attributes
const newAttrs={};map.forEach(key=>{newAttrs[key]=Math.round(attrs[key]*factor)/factor});this.attr(newAttrs);return this}// Return id on string conversion
toString(){return this.id()}// Import raw svg
svg(svgOrFn,outerHTML){var well,len,fragment;if(!1===svgOrFn){outerHTML=!1;svgOrFn=null}// act as getter if no svg string is given
if(null==svgOrFn||"function"===typeof svgOrFn){// The default for exports is, that the outerNode is included
outerHTML=null==outerHTML?!0:outerHTML;// write svgjs data to the dom
this.writeDataToDom();let current=this;// An export modifier was passed
if(null!=svgOrFn){current=adopt(current.node.cloneNode(!0));// If the user wants outerHTML we need to process this node, too
if(outerHTML){let result=svgOrFn(current);current=result||current;// The user does not want this node? Well, then he gets nothing
if(!1===result)return""}// Deep loop through all children and apply modifier
current.each(function(){let result=svgOrFn(this),_this=result||this;// If modifier returns false, discard node
if(!1===result){this.remove();// If modifier returns new node, use it
}else if(result&&this!==_this){this.replace(_this)}},!0)}// Return outer or inner content
return outerHTML?current.node.outerHTML:current.node.innerHTML}// Act as setter if we got a string
// The default for import is, that the current node is not replaced
outerHTML=null==outerHTML?!1:outerHTML;// Create temporary holder
well=globals.document.createElementNS(ns,"svg");fragment=globals.document.createDocumentFragment();// Dump raw svg
well.innerHTML=svgOrFn;// Transplant nodes into the fragment
for(len=well.children.length;len--;){fragment.appendChild(well.firstElementChild)}let parent=this.parent();// Add the whole fragment at once
return outerHTML?this.replace(fragment)&&parent:this.add(fragment)}words(text){// This is faster than removing all children and adding a new one
this.node.textContent=text;return this}// write svgjs data to the dom
writeDataToDom(){// dump variables recursively
this.each(function(){this.writeDataToDom()});return this}}_exports.Dom=_exports.$DomDefault=Dom;extend(Dom,{attr,find,findOne});register(Dom,"Dom");var Dom$1={default:Dom};_exports.$Dom=Dom$1;class Element extends Dom{constructor(node,attrs){super(node,attrs);// initialize data object
this.dom={};// create circular reference
this.node.instance=this;if(node.hasAttribute("svgjs:data")){// pull svgjs data from the dom (getAttributeNS doesn't work in html5)
this.setData(JSON.parse(node.getAttribute("svgjs:data"))||{})}}// Move element by its center
center(x,y){return this.cx(x).cy(y)}// Move by center over x-axis
cx(x){return null==x?this.x()+this.width()/2:this.x(x-this.width()/2)}// Move by center over y-axis
cy(y){return null==y?this.y()+this.height()/2:this.y(y-this.height()/2)}// Get defs
defs(){return this.root().defs()}// Relative move over x and y axes
dmove(x,y){return this.dx(x).dy(y)}// Relative move over x axis
dx(x){return this.x(new SVGNumber(x).plus(this.x()))}// Relative move over y axis
dy(y){return this.y(new SVGNumber(y).plus(this.y()))}// Get parent document
root(){let p=this.parent(getClass(root));return p&&p.root()}getEventHolder(){return this}// Set height of element
height(height){return this.attr("height",height)}// Checks whether the given point inside the bounding box of the element
inside(x,y){let box=this.bbox();return x>box.x&&y>box.y&&x<box.x+box.width&&y<box.y+box.height}// Move element to given x and y values
move(x,y){return this.x(x).y(y)}// return array of all ancestors of given type up to the root svg
parents(until=globals.document){until=makeInstance(until);let parents=new List,parent=this;while((parent=parent.parent())&&parent.node!==until.node&&parent.node!==globals.document){parents.push(parent)}return parents}// Get referenced element form attribute value
reference(attr){attr=this.attr(attr);if(!attr)return null;const m=attr.match(reference);return m?makeInstance(m[1]):null}// set given data to the elements data property
setData(o){this.dom=o;return this}// Set element size to given width and height
size(width,height){let p=proportionalSize(this,width,height);return this.width(new SVGNumber(p.width)).height(new SVGNumber(p.height))}// Set width of element
width(width){return this.attr("width",width)}// write svgjs data to the dom
writeDataToDom(){// remove previously set data
this.node.removeAttribute("svgjs:data");if(Object.keys(this.dom).length){this.node.setAttribute("svgjs:data",JSON.stringify(this.dom));// see #428
}return super.writeDataToDom()}// Move over x-axis
x(x){return this.attr("x",x)}// Move over y-axis
y(y){return this.attr("y",y)}}_exports.Element=_exports.$ElementDefault=Element;extend(Element,{bbox,rbox,point,ctm,screenCTM});register(Element,"Element");var Element$1={default:Element};_exports.$Element=Element$1;var sugar={stroke:["color","width","opacity","linecap","linejoin","miterlimit","dasharray","dashoffset"],fill:["color","opacity","rule"],prefix:function(t,a){return"color"===a?t:t+"-"+a}// Add sugar for fill and stroke
};["fill","stroke"].forEach(function(m){var extension={},i;extension[m]=function(o){if("undefined"===typeof o){return this.attr(m)}if("string"===typeof o||o instanceof Color||Color.isRgb(o)||o instanceof Element){this.attr(m,o)}else{// set all attributes from sugar.fill and sugar.stroke list
for(i=sugar[m].length-1;0<=i;i--){if(null!=o[sugar[m][i]]){this.attr(sugar.prefix(m,sugar[m][i]),o[sugar[m][i]])}}}return this};registerMethods(["Element","Runner"],extension)});registerMethods(["Element","Runner"],{// Let the user set the matrix directly
matrix:function(mat,b,c,d,e,f){// Act as a getter
if(null==mat){return new Matrix(this)}// Act as a setter, the user can pass a matrix or a set of numbers
return this.attr("transform",new Matrix(mat,b,c,d,e,f))},// Map rotation to transform
rotate:function(angle,cx,cy){return this.transform({rotate:angle,ox:cx,oy:cy},!0)},// Map skew to transform
skew:function(x,y,cx,cy){return 1===arguments.length||3===arguments.length?this.transform({skew:x,ox:y,oy:cx},!0):this.transform({skew:[x,y],ox:cx,oy:cy},!0)},shear:function(lam,cx,cy){return this.transform({shear:lam,ox:cx,oy:cy},!0)},// Map scale to transform
scale:function(x,y,cx,cy){return 1===arguments.length||3===arguments.length?this.transform({scale:x,ox:y,oy:cx},!0):this.transform({scale:[x,y],ox:cx,oy:cy},!0)},// Map translate to transform
translate:function(x,y){return this.transform({translate:[x,y]},!0)},// Map relative translations to transform
relative:function(x,y){return this.transform({relative:[x,y]},!0)},// Map flip to transform
flip:function(direction,around){var directionString="string"===typeof direction?direction:isFinite(direction)?"both":"both",origin="both"===direction&&isFinite(around)?[around,around]:"x"===direction?[around,0]:"y"===direction?[0,around]:isFinite(direction)?[direction,direction]:[0,0];return this.transform({flip:directionString,origin:origin},!0)},// Opacity
opacity:function(value){return this.attr("opacity",value)}});registerMethods("radius",{// Add x and y radius
radius:function(x,y){var type=(this._element||this).type;return"radialGradient"===type||"radialGradient"===type?this.attr("r",new SVGNumber(x)):this.rx(x).ry(null==y?x:y)}});registerMethods("Path",{// Get path length
length:function(){return this.node.getTotalLength()},// Get point at length
pointAt:function(length){return new Point(this.node.getPointAtLength(length))}});registerMethods(["Element","Runner"],{// Set font
font:function(a,v){if("object"===typeof a){for(v in a)this.font(v,a[v]);return this}return"leading"===a?this.leading(v):"anchor"===a?this.attr("text-anchor",v):"size"===a||"family"===a||"weight"===a||"stretch"===a||"variant"===a||"style"===a?this.attr("font-"+a,v):this.attr(a,v)}});registerMethods("Text",{ax(x){return this.attr("x",x)},ay(y){return this.attr("y",y)},amove(x,y){return this.ax(x).ay(y)}});// Add events to elements
const methods$2=["click","dblclick","mousedown","mouseup","mouseover","mouseout","mousemove","mouseenter","mouseleave","touchstart","touchmove","touchleave","touchend","touchcancel"].reduce(function(last,event){// add event to Element
const fn=function(f){if(null===f){off(this,event)}else{on(this,event,f)}return this};last[event]=fn;return last},{});registerMethods("Element",methods$2);function untransform(){return this.attr("transform",null)}// merge the whole transformation chain into one matrix and returns it
function matrixify(){var matrix=(this.attr("transform")||"").// split transformations
split(transforms).slice(0,-1).map(function(str){// generate key => value pairs
var kv=str.trim().split("(");return[kv[0],kv[1].split(delimiter).map(function(str){return parseFloat(str)})]}).reverse()// merge every transformation into one matrix
.reduce(function(matrix,transform){if("matrix"===transform[0]){return matrix.lmultiply(Matrix.fromArray(transform[1]))}return matrix[transform[0]].apply(matrix,transform[1])},new Matrix);return matrix}// add an element to another parent without changing the visual representation on the screen
function toParent(parent){if(this===parent)return this;var ctm=this.screenCTM(),pCtm=parent.screenCTM().inverse();this.addTo(parent).untransform().transform(pCtm.multiply(ctm));return this}// same as above with parent equals root-svg
function toRoot(){return this.toParent(this.root())}// Add transformations
function transform(o,relative){// Act as a getter if no object was passed
if(null==o||"string"===typeof o){var decomposed=new Matrix(this).decompose();return null==o?decomposed:decomposed[o]}if(!Matrix.isMatrixLike(o)){// Set the origin according to the defined transform
o=_objectSpread({},o,{origin:getOrigin(o,this)})}// The user can pass a boolean, an Element or an Matrix or nothing
var cleanRelative=!0===relative?this:relative||!1,result=new Matrix(cleanRelative).transform(o);return this.attr("transform",result)}registerMethods("Element",{untransform,matrixify,toParent,toRoot,transform});var transform$1={untransform:untransform,matrixify:matrixify,toParent:toParent,toRoot:toRoot,transform:transform};_exports.$transform=transform$1;function rx(rx){return this.attr("rx",rx)}// Radius y value
function ry(ry){return this.attr("ry",ry)}// Move over x-axis
function x(x){return null==x?this.cx()-this.rx():this.cx(x+this.rx())}// Move over y-axis
function y(y){return null==y?this.cy()-this.ry():this.cy(y+this.ry())}// Move by center over x-axis
function cx(x){return null==x?this.attr("cx"):this.attr("cx",x)}// Move by center over y-axis
function cy(y){return null==y?this.attr("cy"):this.attr("cy",y)}// Set width of element
function width(width){return null==width?2*this.rx():this.rx(new SVGNumber(width).divide(2))}// Set height of element
function height(height){return null==height?2*this.ry():this.ry(new SVGNumber(height).divide(2))}var circled={rx:rx,ry:ry,x:x,y:y,cx:cx,cy:cy,width:width,height:height};_exports.$circled=circled;class Shape extends Element{}_exports.Shape=_exports.$ShapeDefault=Shape;register(Shape,"Shape");var Shape$1={default:Shape};_exports.$Shape=Shape$1;class Circle extends Shape{constructor(node){super(nodeOrNew("circle",node),node)}radius(r){return this.attr("r",r)}// Radius x value
rx(rx){return this.attr("r",rx)}// Alias radius x value
ry(ry){return this.rx(ry)}size(size){return this.radius(new SVGNumber(size).divide(2))}}_exports.Circle=_exports.$CircleDefault=Circle;extend(Circle,{x,y,cx,cy,width,height});registerMethods({Container:{// Create circle element
circle:wrapWithAttrCheck(function(size){return this.put(new Circle).size(size).move(0,0)})}});register(Circle,"Circle");var Circle$1={default:Circle};_exports.$Circle=Circle$1;class Container extends Element{flatten(parent){this.each(function(){if(this instanceof Container)return this.flatten(parent).ungroup(parent);return this.toParent(parent)});// we need this so that the root does not get removed
this.node.firstElementChild||this.remove();return this}ungroup(parent){parent=parent||this.parent();this.each(function(){return this.toParent(parent)});this.remove();return this}}_exports.Container=_exports.$ContainerDefault=Container;register(Container,"Container");var Container$1={default:Container};_exports.$Container=Container$1;class Defs extends Container{constructor(node){super(nodeOrNew("defs",node),node)}flatten(){return this}ungroup(){return this}}_exports.Defs=_exports.$DefsDefault=Defs;register(Defs,"Defs");var Defs$1={default:Defs};_exports.$Defs=Defs$1;class Ellipse extends Shape{constructor(node){super(nodeOrNew("ellipse",node),node)}size(width,height){var p=proportionalSize(this,width,height);return this.rx(new SVGNumber(p.width).divide(2)).ry(new SVGNumber(p.height).divide(2))}}_exports.Ellipse=_exports.$EllipseDefault=Ellipse;extend(Ellipse,circled);registerMethods("Container",{// Create an ellipse
ellipse:wrapWithAttrCheck(function(width=0,height=width){return this.put(new Ellipse).size(width,height).move(0,0)})});register(Ellipse,"Ellipse");var Ellipse$1={default:Ellipse};_exports.$Ellipse=Ellipse$1;class Stop extends Element{constructor(node){super(nodeOrNew("stop",node),node)}// add color stops
update(o){if("number"===typeof o||o instanceof SVGNumber){o={offset:arguments[0],color:arguments[1],opacity:arguments[2]}}// set attributes
if(null!=o.opacity)this.attr("stop-opacity",o.opacity);if(null!=o.color)this.attr("stop-color",o.color);if(null!=o.offset)this.attr("offset",new SVGNumber(o.offset));return this}}_exports.Stop=_exports.$StopDefault=Stop;register(Stop,"Stop");var Stop$1={default:Stop};_exports.$Stop=Stop$1;function from(x,y){return"radialGradient"===(this._element||this).type?this.attr({fx:new SVGNumber(x),fy:new SVGNumber(y)}):this.attr({x1:new SVGNumber(x),y1:new SVGNumber(y)})}function to(x,y){return"radialGradient"===(this._element||this).type?this.attr({cx:new SVGNumber(x),cy:new SVGNumber(y)}):this.attr({x2:new SVGNumber(x),y2:new SVGNumber(y)})}var gradiented={from:from,to:to};_exports.$gradiented=gradiented;class Gradient extends Container{constructor(type,attrs){super(nodeOrNew(type+"Gradient","string"===typeof type?null:type),attrs)}// Add a color stop
stop(offset,color,opacity){return this.put(new Stop).update(offset,color,opacity)}// Update gradient
update(block){// remove all stops
this.clear();// invoke passed block
if("function"===typeof block){block.call(this,this)}return this}// Return the fill id
url(){return"url(#"+this.id()+")"}// Alias string convertion to fill
toString(){return this.url()}// custom attr to handle transform
attr(a,b,c){if("transform"===a)a="gradientTransform";return super.attr(a,b,c)}targets(){return baseFind("svg [fill*=\""+this.id()+"\"]")}bbox(){return new Box}}_exports.Gradient=_exports.$GradientDefault=Gradient;extend(Gradient,gradiented);registerMethods({Container:{// Create gradient element in defs
gradient:wrapWithAttrCheck(function(type,block){return this.defs().gradient(type,block)})},// define gradient
Defs:{gradient:wrapWithAttrCheck(function(type,block){return this.put(new Gradient(type)).update(block)})}});register(Gradient,"Gradient");var Gradient$1={default:Gradient};_exports.$Gradient=Gradient$1;class Pattern extends Container{// Initialize node
constructor(node){super(nodeOrNew("pattern",node),node)}// Return the fill id
url(){return"url(#"+this.id()+")"}// Update pattern by rebuilding
update(block){// remove content
this.clear();// invoke passed block
if("function"===typeof block){block.call(this,this)}return this}// Alias string convertion to fill
toString(){return this.url()}// custom attr to handle transform
attr(a,b,c){if("transform"===a)a="patternTransform";return super.attr(a,b,c)}targets(){return baseFind("svg [fill*=\""+this.id()+"\"]")}bbox(){return new Box}}_exports.Pattern=_exports.$PatternDefault=Pattern;registerMethods({Container:{// Create pattern element in defs
pattern(...args){return this.defs().pattern(...args)}},Defs:{pattern:wrapWithAttrCheck(function(width,height,block){return this.put(new Pattern).update(block).attr({x:0,y:0,width:width,height:height,patternUnits:"userSpaceOnUse"})})}});register(Pattern,"Pattern");var Pattern$1={default:Pattern};_exports.$Pattern=Pattern$1;class Image extends Shape{constructor(node){super(nodeOrNew("image",node),node)}// (re)load image
load(url,callback){if(!url)return this;var img=new globals.window.Image;on(img,"load",function(e){var p=this.parent(Pattern);// ensure image size
if(0===this.width()&&0===this.height()){this.size(img.width,img.height)}if(p instanceof Pattern){// ensure pattern size if not set
if(0===p.width()&&0===p.height()){p.size(this.width(),this.height())}}if("function"===typeof callback){callback.call(this,e)}},this);on(img,"load error",function(){// dont forget to unbind memory leaking events
off(img)});return this.attr("href",img.src=url,xlink)}}_exports.Image=_exports.$ImageDefault=Image;registerAttrHook(function(attr,val,_this){// convert image fill and stroke to patterns
if("fill"===attr||"stroke"===attr){if(isImage.test(val)){val=_this.root().defs().image(val)}}if(val instanceof Image){val=_this.root().defs().pattern(0,0,pattern=>{pattern.add(val)})}return val});registerMethods({Container:{// create image element, load image and set its size
image:wrapWithAttrCheck(function(source,callback){return this.put(new Image).size(0,0).load(source,callback)})}});register(Image,"Image");var Image$1={default:Image};_exports.$Image=Image$1;const PointArray=subClassArray("PointArray",SVGArray);_exports.PointArray=_exports.$PointArrayDefault=PointArray;extend(PointArray,{// Convert array to string
toString(){// convert to a poly point string
for(var i=0,il=this.length,array=[];i<il;i++){array.push(this[i].join(","))}return array.join(" ")},// Convert array to line object
toLine(){return{x1:this[0][0],y1:this[0][1],x2:this[1][0],y2:this[1][1]}},// Get morphed array at given position
at(pos){// make sure a destination is defined
if(!this.destination)return this;// generate morphed point string
for(var i=0,il=this.length,array=[];i<il;i++){array.push([this[i][0]+(this.destination[i][0]-this[i][0])*pos,this[i][1]+(this.destination[i][1]-this[i][1])*pos])}return new PointArray(array)},// Parse point string and flat array
parse(array=[[0,0]]){var points=[];// if it is an array
if(array instanceof Array){// and it is not flat, there is no need to parse it
if(array[0]instanceof Array){return array}}else{// Else, it is considered as a string
// parse points
array=array.trim().split(delimiter).map(parseFloat)}// validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints
// Odd number of coordinates is an error. In such cases, drop the last odd coordinate.
if(0!==array.length%2)array.pop();// wrap points in two-tuples
for(var i=0,len=array.length;i<len;i=i+2){points.push([array[i],array[i+1]])}return points},// transform points with matrix (similar to Point.transform)
transform(m){const points=[];for(let i=0;i<this.length;i++){const point=this[i];// Perform the matrix multiplication
points.push([m.a*point[0]+m.c*point[1]+m.e,m.b*point[0]+m.d*point[1]+m.f])}// Return the required point
return new PointArray(points)},// Move point string
move(x,y){var box=this.bbox();// get relative offset
x-=box.x;y-=box.y;// move every point
if(!isNaN(x)&&!isNaN(y)){for(var i=this.length-1;0<=i;i--){this[i]=[this[i][0]+x,this[i][1]+y]}}return this},// Resize poly string
size(width,height){var i,box=this.bbox();// recalculate position of all points according to new size
for(i=this.length-1;0<=i;i--){if(box.width)this[i][0]=(this[i][0]-box.x)*width/box.width+box.x;if(box.height)this[i][1]=(this[i][1]-box.y)*height/box.height+box.y}return this},// Get bounding box of points
bbox(){var maxX=-Infinity,maxY=-Infinity,minX=1/0,minY=1/0;this.forEach(function(el){maxX=Math.max(el[0],maxX);maxY=Math.max(el[1],maxY);minX=Math.min(el[0],minX);minY=Math.min(el[1],minY)});return{x:minX,y:minY,width:maxX-minX,height:maxY-minY}}});var PointArray$1={default:PointArray};_exports.$PointArray=PointArray$1;let MorphArray=PointArray;// Move by left top corner over x-axis
_exports.MorphArray=MorphArray;function x$1(x){return null==x?this.bbox().x:this.move(x,this.bbox().y)}// Move by left top corner over y-axis
function y$1(y){return null==y?this.bbox().y:this.move(this.bbox().x,y)}// Set width of element
function width$1(width){let b=this.bbox();return null==width?b.width:this.size(width,b.height)}// Set height of element
function height$1(height){let b=this.bbox();return null==height?b.height:this.size(b.width,height)}var pointed={MorphArray:MorphArray,x:x$1,y:y$1,width:width$1,height:height$1};_exports.$pointed=pointed;class Line extends Shape{// Initialize node
constructor(node){super(nodeOrNew("line",node),node)}// Get array
array(){return new PointArray([[this.attr("x1"),this.attr("y1")],[this.attr("x2"),this.attr("y2")]])}// Overwrite native plot() method
plot(x1,y1,x2,y2){if(null==x1){return this.array()}else if("undefined"!==typeof y1){x1={x1:x1,y1:y1,x2:x2,y2:y2}}else{x1=new PointArray(x1).toLine()}return this.attr(x1)}// Move by left top corner
move(x,y){return this.attr(this.array().move(x,y).toLine())}// Set element size to given width and height
size(width,height){var p=proportionalSize(this,width,height);return this.attr(this.array().size(p.width,p.height).toLine())}}_exports.Line=_exports.$LineDefault=Line;extend(Line,pointed);registerMethods({Container:{// Create a line element
line:wrapWithAttrCheck(function(...args){// make sure plot is called as a setter
// x1 is not necessarily a number, it can also be an array, a string and a PointArray
return Line.prototype.plot.apply(this.put(new Line),null!=args[0]?args:[0,0,0,0])})}});register(Line,"Line");var Line$1={default:Line};_exports.$Line=Line$1;class Marker extends Container{// Initialize node
constructor(node){super(nodeOrNew("marker",node),node)}// Set width of element
width(width){return this.attr("markerWidth",width)}// Set height of element
height(height){return this.attr("markerHeight",height)}// Set marker refX and refY
ref(x,y){return this.attr("refX",x).attr("refY",y)}// Update marker
update(block){// remove all content
this.clear();// invoke passed block
if("function"===typeof block){block.call(this,this)}return this}// Return the fill id
toString(){return"url(#"+this.id()+")"}}_exports.Marker=_exports.$MarkerDefault=Marker;registerMethods({Container:{marker(...args){// Create marker element in defs
return this.defs().marker(...args)}},Defs:{// Create marker
marker:wrapWithAttrCheck(function(width,height,block){// Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto
return this.put(new Marker).size(width,height).ref(width/2,height/2).viewbox(0,0,width,height).attr("orient","auto").update(block)})},marker:{// Create and attach markers
marker(marker,width,height,block){var attr=["marker"];// Build attribute name
if("all"!==marker)attr.push(marker);attr=attr.join("-");// Set marker attribute
marker=arguments[1]instanceof Marker?arguments[1]:this.defs().marker(width,height,block);return this.attr(attr,marker)}}});register(Marker,"Marker");var Marker$1={default:Marker};_exports.$Marker=Marker$1;function makeSetterGetter(k,f){return function(v){if(null==v)return this[v];this[k]=v;if(f)f.call(this);return this}}let easing={"-":function(pos){return pos},"<>":function(pos){return-Math.cos(pos*Math.PI)/2+.5},">":function(pos){return Math.sin(pos*Math.PI/2)},"<":function(pos){return-Math.cos(pos*Math.PI/2)+1},bezier:function(x1,y1,x2,y2){// see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo
return function(t){if(0>t){if(0<x1){return y1/x1*t}else if(0<x2){return y2/x2*t}else{return 0}}else if(1<t){if(1>x2){return(1-y2)/(1-x2)*t+(y2-x2)/(1-x2)}else if(1>x1){return(1-y1)/(1-x1)*t+(y1-x1)/(1-x1)}else{return 1}}else{return 3*t*Math.pow(1-t,2)*y1+3*Math.pow(t,2)*(1-t)*y2+Math.pow(t,3)}}},// see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo
steps:function(steps,stepPosition="end"){// deal with "jump-" prefix
stepPosition=stepPosition.split("-").reverse()[0];let jumps=steps;if("none"===stepPosition){--jumps}else if("both"===stepPosition){++jumps}// The beforeFlag is essentially useless
return(t,beforeFlag=!1)=>{// Step is called currentStep in referenced url
let step=Math.floor(t*steps);const jumping=0===t*step%1;if("start"===stepPosition||"both"===stepPosition){++step}if(beforeFlag&&jumping){--step}if(0<=t&&0>step){step=0}if(1>=t&&step>jumps){step=jumps}return step/jumps}}};_exports.easing$1=_exports.easing=easing;class Stepper{done(){return!1}}/***
  Easing Functions
  ================
  ***/_exports.Stepper=Stepper;class Ease extends Stepper{constructor(fn){super();this.ease=easing[fn||timeline.ease]||fn}step(from,to,pos){if("number"!==typeof from){return 1>pos?from:to}return from+(to-from)*this.ease(pos)}}/***
  Controller Types
  ================
  ***/_exports.Ease$1=_exports.Ease=Ease;class Controller extends Stepper{constructor(fn){super();this.stepper=fn}step(current,target,dt,c){return this.stepper(current,target,dt,c)}done(c){return c.done}}_exports.Controller$1=_exports.Controller=Controller;function recalculate(){// Apply the default parameters
var duration=(this._duration||500)/1e3,overshoot=this._overshoot||0,eps=1e-10,pi=Math.PI,os=Math.log(overshoot/100+eps),zeta=-os/Math.sqrt(pi*pi+os*os),wn=3.9/(zeta*duration);// Calculate the Spring values
this.d=2*zeta*wn;this.k=wn*wn}class Spring extends Controller{constructor(duration,overshoot){super();this.duration(duration||500).overshoot(overshoot||0)}step(current,target,dt,c){if("string"===typeof current)return current;c.done=dt===1/0;if(dt===1/0)return target;if(0===dt)return current;if(100<dt)dt=16;dt/=1e3;// Get the previous velocity
var velocity=c.velocity||0,acceleration=-this.d*velocity-this.k*(current-target),newPosition=current+velocity*dt+acceleration*dt*dt/2;// Apply the control to get the new position and store it
// Store the velocity
c.velocity=velocity+acceleration*dt;// Figure out if we have converged, and if so, pass the value
c.done=.002>Math.abs(target-newPosition)+Math.abs(velocity);return c.done?target:newPosition}}_exports.Spring$1=_exports.Spring=Spring;extend(Spring,{duration:makeSetterGetter("_duration",recalculate),overshoot:makeSetterGetter("_overshoot",recalculate)});class PID extends Controller{constructor(p,i,d,windup){super();p=null==p?.1:p;i=null==i?.01:i;d=null==d?0:d;windup=null==windup?1e3:windup;this.p(p).i(i).d(d).windup(windup)}step(current,target,dt,c){if("string"===typeof current)return current;c.done=dt===1/0;if(dt===1/0)return target;if(0===dt)return current;var p=target-current,i=(c.integral||0)+p*dt,d=(p-(c.error||0))/dt,windup=this.windup;// antiwindup
if(!1!==windup){i=Math.max(-windup,Math.min(i,windup))}c.error=p;c.integral=i;c.done=.001>Math.abs(p);return c.done?target:current+(this.P*p+this.I*i+this.D*d)}}_exports.PID$1=_exports.PID=PID;extend(PID,{windup:makeSetterGetter("windup"),p:makeSetterGetter("P"),i:makeSetterGetter("I"),d:makeSetterGetter("D")});var Controller$1={easing:easing,Stepper:Stepper,Ease:Ease,Controller:Controller,Spring:Spring,PID:PID};_exports.$Controller=Controller$1;const PathArray=subClassArray("PathArray",SVGArray);_exports.PathArray=_exports.$PathArrayDefault=PathArray;function pathRegReplace(a,b,c,d){return c+d.replace(dots," .")}function arrayToString(a){for(var i=0,il=a.length,s="";i<il;i++){s+=a[i][0];if(null!=a[i][1]){s+=a[i][1];if(null!=a[i][2]){s+=" ";s+=a[i][2];if(null!=a[i][3]){s+=" ";s+=a[i][3];s+=" ";s+=a[i][4];if(null!=a[i][5]){s+=" ";s+=a[i][5];s+=" ";s+=a[i][6];if(null!=a[i][7]){s+=" ";s+=a[i][7]}}}}}}return s+" "}const pathHandlers={M:function(c,p,p0){p.x=p0.x=c[0];p.y=p0.y=c[1];return["M",p.x,p.y]},L:function(c,p){p.x=c[0];p.y=c[1];return["L",c[0],c[1]]},H:function(c,p){p.x=c[0];return["H",c[0]]},V:function(c,p){p.y=c[0];return["V",c[0]]},C:function(c,p){p.x=c[4];p.y=c[5];return["C",c[0],c[1],c[2],c[3],c[4],c[5]]},S:function(c,p){p.x=c[2];p.y=c[3];return["S",c[0],c[1],c[2],c[3]]},Q:function(c,p){p.x=c[2];p.y=c[3];return["Q",c[0],c[1],c[2],c[3]]},T:function(c,p){p.x=c[0];p.y=c[1];return["T",c[0],c[1]]},Z:function(c,p,p0){p.x=p0.x;p.y=p0.y;return["Z"]},A:function(c,p){p.x=c[5];p.y=c[6];return["A",c[0],c[1],c[2],c[3],c[4],c[5],c[6]]}};let mlhvqtcsaz="mlhvqtcsaz".split("");for(var i=0,il=mlhvqtcsaz.length;i<il;++i){pathHandlers[mlhvqtcsaz[i]]=function(i){return function(c,p,p0){if("H"===i)c[0]=c[0]+p.x;else if("V"===i)c[0]=c[0]+p.y;else if("A"===i){c[5]=c[5]+p.x;c[6]=c[6]+p.y}else{for(var j=0,jl=c.length;j<jl;++j){c[j]=c[j]+(j%2?p.y:p.x)}}return pathHandlers[i](c,p,p0)}}(mlhvqtcsaz[i].toUpperCase())}extend(PathArray,{// Convert array to string
toString(){return arrayToString(this)},// Move path string
move(x,y){// get bounding box of current situation
var box=this.bbox();// get relative offset
x-=box.x;y-=box.y;if(!isNaN(x)&&!isNaN(y)){// move every point
for(var l,i=this.length-1;0<=i;i--){l=this[i][0];if("M"===l||"L"===l||"T"===l){this[i][1]+=x;this[i][2]+=y}else if("H"===l){this[i][1]+=x}else if("V"===l){this[i][1]+=y}else if("C"===l||"S"===l||"Q"===l){this[i][1]+=x;this[i][2]+=y;this[i][3]+=x;this[i][4]+=y;if("C"===l){this[i][5]+=x;this[i][6]+=y}}else if("A"===l){this[i][6]+=x;this[i][7]+=y}}}return this},// Resize path string
size(width,height){// get bounding box of current situation
var box=this.bbox(),i,l;// If the box width or height is 0 then we ignore
// transformations on the respective axis
box.width=0===box.width?1:box.width;box.height=0===box.height?1:box.height;// recalculate position of all points according to new size
for(i=this.length-1;0<=i;i--){l=this[i][0];if("M"===l||"L"===l||"T"===l){this[i][1]=(this[i][1]-box.x)*width/box.width+box.x;this[i][2]=(this[i][2]-box.y)*height/box.height+box.y}else if("H"===l){this[i][1]=(this[i][1]-box.x)*width/box.width+box.x}else if("V"===l){this[i][1]=(this[i][1]-box.y)*height/box.height+box.y}else if("C"===l||"S"===l||"Q"===l){this[i][1]=(this[i][1]-box.x)*width/box.width+box.x;this[i][2]=(this[i][2]-box.y)*height/box.height+box.y;this[i][3]=(this[i][3]-box.x)*width/box.width+box.x;this[i][4]=(this[i][4]-box.y)*height/box.height+box.y;if("C"===l){this[i][5]=(this[i][5]-box.x)*width/box.width+box.x;this[i][6]=(this[i][6]-box.y)*height/box.height+box.y}}else if("A"===l){// resize radii
this[i][1]=this[i][1]*width/box.width;this[i][2]=this[i][2]*height/box.height;// move position values
this[i][6]=(this[i][6]-box.x)*width/box.width+box.x;this[i][7]=(this[i][7]-box.y)*height/box.height+box.y}}return this},// Test if the passed path array use the same path data commands as this path array
equalCommands(pathArray){var i,il,equalCommands;pathArray=new PathArray(pathArray);equalCommands=this.length===pathArray.length;for(i=0,il=this.length;equalCommands&&i<il;i++){equalCommands=this[i][0]===pathArray[i][0]}return equalCommands},// Make path array morphable
morph(pathArray){pathArray=new PathArray(pathArray);if(this.equalCommands(pathArray)){this.destination=pathArray}else{this.destination=null}return this},// Get morphed path array at given position
at(pos){// make sure a destination is defined
if(!this.destination)return this;var sourceArray=this,destinationArray=this.destination.value,array=[],pathArray=new PathArray,i,il,j,jl;// Animate has specified in the SVG spec
// See: https://www.w3.org/TR/SVG11/paths.html#PathElement
for(i=0,il=sourceArray.length;i<il;i++){array[i]=[sourceArray[i][0]];for(j=1,jl=sourceArray[i].length;j<jl;j++){array[i][j]=sourceArray[i][j]+(destinationArray[i][j]-sourceArray[i][j])*pos}// For the two flags of the elliptical arc command, the SVG spec say:
// Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true
// Elliptical arc command as an array followed by corresponding indexes:
// ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]
//   0    1   2        3                 4             5      6  7
if("A"===array[i][0]){array[i][4]=+(0!==array[i][4]);array[i][5]=+(0!==array[i][5])}}// Directly modify the value of a path array, this is done this way for performance
pathArray.value=array;return pathArray},// Absolutize and parse path to array
parse(array=[["M",0,0]]){// if it's already a patharray, no need to parse it
if(array instanceof PathArray)return array;// prepare for parsing
var s,paramCnt={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};if("string"===typeof array){array=array.replace(numbersWithDots,pathRegReplace)// convert 45.123.123 to 45.123 .123
.replace(pathLetters," $& ")// put some room between letters and numbers
.replace(hyphen,"$1 -")// add space before hyphen
.trim()// trim
.split(delimiter);// split into array
}else{array=array.reduce(function(prev,curr){return[].concat.call(prev,curr)},[])}// array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]
var result=[],p=new Point,p0=new Point,index=0,len=array.length;do{// Test if we have a path letter
if(isPathLetter.test(array[index])){s=array[index];++index;// If last letter was a move command and we got no new, it defaults to [L]ine
}else if("M"===s){s="L"}else if("m"===s){s="l"}result.push(pathHandlers[s].call(null,array.slice(index,index=index+paramCnt[s.toUpperCase()]).map(parseFloat),p,p0))}while(len>index);return result},// Get bounding box of path
bbox(){parser().path.setAttribute("d",this.toString());return parser.nodes.path.getBBox()}});var PathArray$1={default:PathArray,pathRegReplace:pathRegReplace};_exports.$PathArray=PathArray$1;class Morphable{constructor(stepper){this._stepper=stepper||new Ease("-");this._from=null;this._to=null;this._type=null;this._context=null;this._morphObj=null}from(val){if(null==val){return this._from}this._from=this._set(val);return this}to(val){if(null==val){return this._to}this._to=this._set(val);return this}type(type){// getter
if(null==type){return this._type}// setter
this._type=type;return this}_set(value){if(!this._type){var type=typeof value;if("number"===type){this.type(SVGNumber)}else if("string"===type){if(Color.isColor(value)){this.type(Color)}else if(delimiter.test(value)){this.type(pathLetters.test(value)?PathArray:SVGArray)}else if(numberAndUnit.test(value)){this.type(SVGNumber)}else{this.type(NonMorphable)}}else if(-1<morphableTypes.indexOf(value.constructor)){this.type(value.constructor)}else if(Array.isArray(value)){this.type(SVGArray)}else if("object"===type){this.type(ObjectBag)}else{this.type(NonMorphable)}}var result=new this._type(value);if(this._type===Color){result=this._to?result[this._to[4]]():this._from?result[this._from[4]]():result}result=result.toArray();this._morphObj=this._morphObj||new this._type;this._context=this._context||Array.apply(null,Array(result.length)).map(Object).map(function(o){o.done=!0;return o});return result}stepper(stepper){if(null==stepper)return this._stepper;this._stepper=stepper;return this}done(){var complete=this._context.map(this._stepper.done).reduce(function(last,curr){return last&&curr},!0);return complete}at(pos){var _this=this;return this._morphObj.fromArray(this._from.map(function(i,index){return _this._stepper.step(i,_this._to[index],pos,_this._context[index],_this._context)}))}}_exports.Morphable=_exports.$MorphableDefault=Morphable;class NonMorphable{constructor(...args){this.init(...args)}init(val){val=Array.isArray(val)?val[0]:val;this.value=val;return this}valueOf(){return this.value}toArray(){return[this.value]}}_exports.NonMorphable$1=_exports.NonMorphable=NonMorphable;class TransformBag{constructor(...args){this.init(...args)}init(obj){if(Array.isArray(obj)){obj={scaleX:obj[0],scaleY:obj[1],shear:obj[2],rotate:obj[3],translateX:obj[4],translateY:obj[5],originX:obj[6],originY:obj[7]}}Object.assign(this,TransformBag.defaults,obj);return this}toArray(){var v=this;return[v.scaleX,v.scaleY,v.shear,v.rotate,v.translateX,v.translateY,v.originX,v.originY]}}_exports.TransformBag$1=_exports.TransformBag=TransformBag;TransformBag.defaults={scaleX:1,scaleY:1,shear:0,rotate:0,translateX:0,translateY:0,originX:0,originY:0};class ObjectBag{constructor(...args){this.init(...args)}init(objOrArr){this.values=[];if(Array.isArray(objOrArr)){this.values=objOrArr;return}objOrArr=objOrArr||{};var entries=[];for(let i in objOrArr){entries.push([i,objOrArr[i]])}entries.sort((a,b)=>{return a[0]-b[0]});this.values=entries.reduce((last,curr)=>last.concat(curr),[]);return this}valueOf(){for(var obj={},arr=this.values,i=0,len=arr.length;i<len;i+=2){obj[arr[i]]=arr[i+1]}return obj}toArray(){return this.values}}_exports.ObjectBag$1=_exports.ObjectBag=ObjectBag;const morphableTypes=[NonMorphable,TransformBag,ObjectBag];function registerMorphableType(type=[]){morphableTypes.push(...[].concat(type))}function makeMorphable(){extend(morphableTypes,{to(val){return new Morphable().type(this.constructor).from(this.valueOf()).to(val)},fromArray(arr){this.init(arr);return this}})}var Morphable$1={default:Morphable,NonMorphable:NonMorphable,TransformBag:TransformBag,ObjectBag:ObjectBag,registerMorphableType:registerMorphableType,makeMorphable:makeMorphable};_exports.$Morphable=Morphable$1;class Path extends Shape{// Initialize node
constructor(node){super(nodeOrNew("path",node),node)}// Get array
array(){return this._array||(this._array=new PathArray(this.attr("d")))}// Plot new path
plot(d){return null==d?this.array():this.clear().attr("d","string"===typeof d?d:this._array=new PathArray(d))}// Clear array cache
clear(){delete this._array;return this}// Move by left top corner
move(x,y){return this.attr("d",this.array().move(x,y))}// Move by left top corner over x-axis
x(x){return null==x?this.bbox().x:this.move(x,this.bbox().y)}// Move by left top corner over y-axis
y(y){return null==y?this.bbox().y:this.move(this.bbox().x,y)}// Set element size to given width and height
size(width,height){var p=proportionalSize(this,width,height);return this.attr("d",this.array().size(p.width,p.height))}// Set width of element
width(width){return null==width?this.bbox().width:this.size(width,this.bbox().height)}// Set height of element
height(height){return null==height?this.bbox().height:this.size(this.bbox().width,height)}targets(){return baseFind("svg textpath [href*=\""+this.id()+"\"]")}}// Define morphable array
_exports.Path=_exports.$PathDefault=Path;Path.prototype.MorphArray=PathArray;// Add parent method
registerMethods({Container:{// Create a wrapped path element
path:wrapWithAttrCheck(function(d){// make sure plot is called as a setter
return this.put(new Path).plot(d||new PathArray)})}});register(Path,"Path");var Path$1={default:Path};_exports.$Path=Path$1;function array(){return this._array||(this._array=new PointArray(this.attr("points")))}// Plot new path
function plot(p){return null==p?this.array():this.clear().attr("points","string"===typeof p?p:this._array=new PointArray(p))}// Clear array cache
function clear(){delete this._array;return this}// Move by left top corner
function move(x,y){return this.attr("points",this.array().move(x,y))}// Set element size to given width and height
function size(width,height){let p=proportionalSize(this,width,height);return this.attr("points",this.array().size(p.width,p.height))}var poly={array:array,plot:plot,clear:clear,move:move,size:size};_exports.$poly=poly;class Polygon extends Shape{// Initialize node
constructor(node){super(nodeOrNew("polygon",node),node)}}_exports.Polygon=_exports.$PolygonDefault=Polygon;registerMethods({Container:{// Create a wrapped polygon element
polygon:wrapWithAttrCheck(function(p){// make sure plot is called as a setter
return this.put(new Polygon).plot(p||new PointArray)})}});extend(Polygon,pointed);extend(Polygon,poly);register(Polygon,"Polygon");var Polygon$1={default:Polygon};_exports.$Polygon=Polygon$1;class Polyline extends Shape{// Initialize node
constructor(node){super(nodeOrNew("polyline",node),node)}}_exports.Polyline=_exports.$PolylineDefault=Polyline;registerMethods({Container:{// Create a wrapped polygon element
polyline:wrapWithAttrCheck(function(p){// make sure plot is called as a setter
return this.put(new Polyline).plot(p||new PointArray)})}});extend(Polyline,pointed);extend(Polyline,poly);register(Polyline,"Polyline");var Polyline$1={default:Polyline};_exports.$Polyline=Polyline$1;class Rect extends Shape{// Initialize node
constructor(node){super(nodeOrNew("rect",node),node)}}_exports.Rect=_exports.$RectDefault=Rect;extend(Rect,{rx,ry});registerMethods({Container:{// Create a rect element
rect:wrapWithAttrCheck(function(width,height){return this.put(new Rect).size(width,height)})}});register(Rect,"Rect");var Rect$1={default:Rect};_exports.$Rect=Rect$1;class Queue{constructor(){this._first=null;this._last=null}push(value){// An item stores an id and the provided value
var item=value.next?value:{value:value,next:null,prev:null// Deal with the queue being empty or populated
};if(this._last){item.prev=this._last;this._last.next=item;this._last=item}else{this._last=item;this._first=item}// Return the current item
return item}shift(){// Check if we have a value
var remove=this._first;if(!remove)return null;// If we do, remove it and relink things
this._first=remove.next;if(this._first)this._first.prev=null;this._last=this._first?this._last:null;return remove.value}// Shows us the first item in the list
first(){return this._first&&this._first.value}// Shows us the last item in the list
last(){return this._last&&this._last.value}// Removes the item that was returned from the push
remove(item){// Relink the previous item
if(item.prev)item.prev.next=item.next;if(item.next)item.next.prev=item.prev;if(item===this._last)this._last=item.prev;if(item===this._first)this._first=item.next;// Invalidate item
item.prev=null;item.next=null}}_exports.Queue=_exports.$QueueDefault=Queue;var Queue$1={default:Queue};_exports.$Queue=Queue$1;const Animator={nextDraw:null,frames:new Queue,timeouts:new Queue,immediates:new Queue,timer:()=>globals.window.performance||globals.window.Date,transforms:[],frame(fn){// Store the node
var node=Animator.frames.push({run:fn});// Request an animation frame if we don't have one
if(null===Animator.nextDraw){Animator.nextDraw=globals.window.requestAnimationFrame(Animator._draw)}// Return the node so we can remove it easily
return node},timeout(fn,delay){delay=delay||0;// Work out when the event should fire
var time=Animator.timer().now()+delay,node=Animator.timeouts.push({run:fn,time:time});// Add the timeout to the end of the queue
// Request another animation frame if we need one
if(null===Animator.nextDraw){Animator.nextDraw=globals.window.requestAnimationFrame(Animator._draw)}return node},immediate(fn){// Add the immediate fn to the end of the queue
var node=Animator.immediates.push(fn);// Request another animation frame if we need one
if(null===Animator.nextDraw){Animator.nextDraw=globals.window.requestAnimationFrame(Animator._draw)}return node},cancelFrame(node){null!=node&&Animator.frames.remove(node)},clearTimeout(node){null!=node&&Animator.timeouts.remove(node)},cancelImmediate(node){null!=node&&Animator.immediates.remove(node)},_draw(now){// Run all the timeouts we can run, if they are not ready yet, add them
// to the end of the queue immediately! (bad timeouts!!! [sarcasm])
var nextTimeout=null,lastTimeout=Animator.timeouts.last();while(nextTimeout=Animator.timeouts.shift()){// Run the timeout if its time, or push it to the end
if(now>=nextTimeout.time){nextTimeout.run()}else{Animator.timeouts.push(nextTimeout)}// If we hit the last item, we should stop shifting out more items
if(nextTimeout===lastTimeout)break}// Run all of the animation frames
var nextFrame=null,lastFrame=Animator.frames.last();while(nextFrame!==lastFrame&&(nextFrame=Animator.frames.shift())){nextFrame.run(now)}var nextImmediate=null;while(nextImmediate=Animator.immediates.shift()){nextImmediate()}// If we have remaining timeouts or frames, draw until we don't anymore
Animator.nextDraw=Animator.timeouts.first()||Animator.frames.first()?globals.window.requestAnimationFrame(Animator._draw):null}};_exports.Animator=_exports.$AnimatorDefault=Animator;var Animator$1={default:Animator};_exports.$Animator=Animator$1;var makeSchedule=function(runnerInfo){var start=runnerInfo.start,duration=runnerInfo.runner.duration(),end=start+duration;return{start:start,duration:duration,end:end,runner:runnerInfo.runner}};const defaultSource=function(){let w=globals.window;return(w.performance||w.Date).now()};class Timeline extends EventTarget{// Construct a new timeline on the given element
constructor(timeSource=defaultSource){super();this._timeSource=timeSource;// Store the timing variables
this._startTime=0;this._speed=1;// Determines how long a runner is hold in memory. Can be a dt or true/false
this._persist=0;// Keep track of the running animations and their starting parameters
this._nextFrame=null;this._paused=!0;this._runners=[];this._runnerIds=[];this._lastRunnerId=-1;this._time=0;this._lastSourceTime=0;this._lastStepTime=0;// Make sure that step is always called in class context
this._step=this._stepFn.bind(this,!1);this._stepImmediate=this._stepFn.bind(this,!0)}// schedules a runner on the timeline
schedule(runner,delay,when){if(null==runner){return this._runners.map(makeSchedule)}// The start time for the next animation can either be given explicitly,
// derived from the current timeline time or it can be relative to the
// last start time to chain animations direclty
var absoluteStartTime=0,endTime=this.getEndTime();delay=delay||0;// Work out when to start the animation
if(null==when||"last"===when||"after"===when){// Take the last time and increment
absoluteStartTime=endTime}else if("absolute"===when||"start"===when){absoluteStartTime=delay;delay=0}else if("now"===when){absoluteStartTime=this._time}else if("relative"===when){let runnerInfo=this._runners[runner.id];if(runnerInfo){absoluteStartTime=runnerInfo.start+delay;delay=0}}else{throw new Error("Invalid value for the \"when\" parameter")}// Manage runner
runner.unschedule();runner.timeline(this);const persist=runner.persist(),runnerInfo={persist:null===persist?this._persist:persist,start:absoluteStartTime+delay,runner};this._lastRunnerId=runner.id;this._runners.push(runnerInfo);this._runners.sort((a,b)=>a.start-b.start);this._runnerIds=this._runners.map(info=>info.runner.id);this.updateTime()._continue();return this}// Remove the runner from this timeline
unschedule(runner){var index=this._runnerIds.indexOf(runner.id);if(0>index)return this;this._runners.splice(index,1);this._runnerIds.splice(index,1);runner.timeline(null);return this}// Calculates the end of the timeline
getEndTime(){var lastRunnerInfo=this._runners[this._runnerIds.indexOf(this._lastRunnerId)],lastDuration=lastRunnerInfo?lastRunnerInfo.runner.duration():0,lastStartTime=lastRunnerInfo?lastRunnerInfo.start:0;return lastStartTime+lastDuration}getEndTimeOfTimeline(){let lastEndTime=0;for(var i=0;i<this._runners.length;i++){let runnerInfo=this._runners[i];var duration=runnerInfo?runnerInfo.runner.duration():0,startTime=runnerInfo?runnerInfo.start:0;let endTime=startTime+duration;if(endTime>lastEndTime){lastEndTime=endTime}}return lastEndTime}// Makes sure, that after pausing the time doesn't jump
updateTime(){if(!this.active()){this._lastSourceTime=this._timeSource()}return this}play(){// Now make sure we are not paused and continue the animation
this._paused=!1;return this.updateTime()._continue()}pause(){this._paused=!0;return this._continue()}stop(){// Go to start and pause
this.time(0);return this.pause()}finish(){// Go to end and pause
this.time(this.getEndTimeOfTimeline()+1);return this.pause()}speed(speed){if(null==speed)return this._speed;this._speed=speed;return this}reverse(yes){var currentSpeed=this.speed();if(null==yes)return this.speed(-currentSpeed);var positive=Math.abs(currentSpeed);return this.speed(yes?positive:-positive)}seek(dt){return this.time(this._time+dt)}time(time){if(null==time)return this._time;this._time=time;return this._continue(!0)}persist(dtOrForever){if(null==dtOrForever)return this._persist;this._persist=dtOrForever;return this}source(fn){if(null==fn)return this._timeSource;this._timeSource=fn;return this}_stepFn(immediateStep=!1){// Get the time delta from the last time and update the time
var time=this._timeSource(),dtSource=time-this._lastSourceTime;if(immediateStep)dtSource=0;var dtTime=this._speed*dtSource+(this._time-this._lastStepTime);this._lastSourceTime=time;// Only update the time if we use the timeSource.
// Otherwise use the current time
if(!immediateStep){// Update the time
this._time+=dtTime;this._time=0>this._time?0:this._time}this._lastStepTime=this._time;this.fire("time",this._time);// This is for the case that the timeline was seeked so that the time
// is now before the startTime of the runner. Thats why we need to set
// the runner to position 0
// FIXME:
// However, reseting in insertion order leads to bugs. Considering the case,
// where 2 runners change the same attriute but in different times,
// reseting both of them will lead to the case where the later defined
// runner always wins the reset even if the other runner started earlier
// and therefore should win the attribute battle
// this can be solved by reseting them backwards
for(var k=this._runners.length;k--;){// Get and run the current runner and ignore it if its inactive
let runnerInfo=this._runners[k],runner=runnerInfo.runner,dtToStart=this._time-runnerInfo.start;// Dont run runner if not started yet
// and try to reset it
if(0>=dtToStart){runner.reset()}}// Run all of the runners directly
for(var runnersLeft=!1,i=0,len=this._runners.length;i<len;i++){// Get and run the current runner and ignore it if its inactive
let runnerInfo=this._runners[i],runner=runnerInfo.runner,dt=dtTime,dtToStart=this._time-runnerInfo.start;// Dont run runner if not started yet
if(0>=dtToStart){runnersLeft=!0;continue}else if(dtToStart<dt){// Adjust dt to make sure that animation is on point
dt=dtToStart}if(!runner.active())continue;// If this runner is still going, signal that we need another animation
// frame, otherwise, remove the completed runner
var finished=runner.step(dt).done;if(!finished){runnersLeft=!0;// continue
}else if(!0!==runnerInfo.persist){// runner is finished. And runner might get removed
var endTime=runner.duration()-runner.time()+this._time;if(endTime+runnerInfo.persist<this._time){// Delete runner and correct index
runner.unschedule();--i;--len}}}// Basically: we continue when there are runners right from us in time
// when -->, and when runners are left from us when <--
if(runnersLeft&&!(0>this._speed&&0===this._time)||this._runnerIds.length&&0>this._speed&&0<this._time){this._continue()}else{this.pause();this.fire("finished")}return this}// Checks if we are running and continues the animation
_continue(immediateStep=!1){Animator.cancelFrame(this._nextFrame);this._nextFrame=null;if(immediateStep)return this._stepImmediate();if(this._paused)return this;this._nextFrame=Animator.frame(this._step);return this}active(){return!!this._nextFrame}}_exports.Timeline=_exports.$TimelineDefault=Timeline;registerMethods({Element:{timeline:function(timeline){if(null==timeline){this._timeline=this._timeline||new Timeline;return this._timeline}else{this._timeline=timeline;return this}}}});var Timeline$1={default:Timeline};_exports.$Timeline=Timeline$1;class Runner extends EventTarget{constructor(options){super();// Store a unique id on the runner, so that we can identify it later
this.id=Runner.id++;// Ensure a default value
options=null==options?timeline.duration:options;// Ensure that we get a controller
options="function"===typeof options?new Controller(options):options;// Declare all of the variables
this._element=null;this._timeline=null;this.done=!1;this._queue=[];// Work out the stepper and the duration
this._duration="number"===typeof options&&options;this._isDeclarative=options instanceof Controller;this._stepper=this._isDeclarative?options:new Ease;// We copy the current values from the timeline because they can change
this._history={};// Store the state of the runner
this.enabled=!0;this._time=0;this._lastTime=0;// At creation, the runner is in reseted state
this._reseted=!0;// Save transforms applied to this runner
this.transforms=new Matrix;this.transformId=1;// Looping variables
this._haveReversed=!1;this._reverse=!1;this._loopsDone=0;this._swing=!1;this._wait=0;this._times=1;this._frameId=null;// Stores how long a runner is stored after beeing done
this._persist=this._isDeclarative?!0:null}/*
    Runner Definitions
    ==================
    These methods help us define the runtime behaviour of the Runner or they
    help us make new runners from the current runner
    */element(element){if(null==element)return this._element;this._element=element;element._prepareRunner();return this}timeline(timeline){// check explicitly for undefined so we can set the timeline to null
if("undefined"===typeof timeline)return this._timeline;this._timeline=timeline;return this}animate(duration,delay,when){var o=Runner.sanitise(duration,delay,when),runner=new Runner(o.duration);if(this._timeline)runner.timeline(this._timeline);if(this._element)runner.element(this._element);return runner.loop(o).schedule(delay,when)}schedule(timeline,delay,when){// The user doesn't need to pass a timeline if we already have one
if(!(timeline instanceof Timeline)){when=delay;delay=timeline;timeline=this.timeline()}// If there is no timeline, yell at the user...
if(!timeline){throw Error("Runner cannot be scheduled without timeline")}// Schedule the runner on the timeline provided
timeline.schedule(this,delay,when);return this}unschedule(){var timeline=this.timeline();timeline&&timeline.unschedule(this);return this}loop(times,swing,wait){// Deal with the user passing in an object
if("object"===typeof times){swing=times.swing;wait=times.wait;times=times.times}// Sanitise the values and store them
this._times=times||1/0;this._swing=swing||!1;this._wait=wait||0;// Allow true to be passed
if(!0===this._times){this._times=1/0}return this}delay(delay){return this.animate(0,delay)}/*
    Basic Functionality
    ===================
    These methods allow us to attach basic functions to the runner directly
    */queue(initFn,runFn,retargetFn,isTransform){this._queue.push({initialiser:initFn||noop,runner:runFn||noop,retarget:retargetFn,isTransform:isTransform,initialised:!1,finished:!1});var timeline=this.timeline();timeline&&this.timeline()._continue();return this}during(fn){return this.queue(null,fn)}after(fn){return this.on("finished",fn)}/*
    Runner animation methods
    ========================
    Control how the animation plays
    */time(time){if(null==time){return this._time}let dt=time-this._time;this.step(dt);return this}duration(){return this._times*(this._wait+this._duration)-this._wait}loops(p){var loopDuration=this._duration+this._wait;if(null==p){var loopsDone=Math.floor(this._time/loopDuration),relativeTime=this._time-loopsDone*loopDuration,position=relativeTime/this._duration;return Math.min(loopsDone+position,this._times)}var whole=Math.floor(p),partial=p%1,time=loopDuration*whole+this._duration*partial;return this.time(time)}persist(dtOrForever){if(null==dtOrForever)return this._persist;this._persist=dtOrForever;return this}position(p){// Get all of the variables we need
var x=this._time,d=this._duration,w=this._wait,t=this._times,s=this._swing,r=this._reverse,position;if(null==p){/*
      This function converts a time to a position in the range [0, 1]
      The full explanation can be found in this desmos demonstration
        https://www.desmos.com/calculator/u4fbavgche
      The logic is slightly simplified here because we can use booleans
      */ // Figure out the value without thinking about the start or end time
const f=function(x){var swinging=s*Math.floor(x%(2*(w+d))/(w+d)),backwards=swinging&&!r||!swinging&&r,uncliped=Math.pow(-1,backwards)*(x%(w+d))/d+backwards,clipped=Math.max(Math.min(uncliped,1),0);return clipped};// Figure out the value by incorporating the start time
var endTime=t*(w+d)-w;position=0>=x?Math.round(f(1e-5)):x<endTime?f(x):Math.round(f(endTime-1e-5));return position}// Work out the loops done and add the position to the loops done
var loopsDone=Math.floor(this.loops()),swingForward=s&&0===loopsDone%2,forwards=swingForward&&!r||r&&swingForward;position=loopsDone+(forwards?p:1-p);return this.loops(position)}progress(p){if(null==p){return Math.min(1,this._time/this.duration())}return this.time(p*this.duration())}step(dt){// If we are inactive, this stepper just gets skipped
if(!this.enabled)return this;// Update the time and get the new position
dt=null==dt?16:dt;this._time+=dt;var position=this.position(),running=this._lastPosition!==position&&0<=this._time;// Figure out if we need to run the stepper in this frame
this._lastPosition=position;// Figure out if we just started
var duration=this.duration(),justStarted=0>=this._lastTime&&0<this._time,justFinished=this._lastTime<duration&&this._time>=duration;this._lastTime=this._time;if(justStarted){this.fire("start",this)}// Work out if the runner is finished set the done flag here so animations
// know, that they are running in the last step (this is good for
// transformations which can be merged)
var declarative=this._isDeclarative;this.done=!declarative&&!justFinished&&this._time>=duration;// Runner is running. So its not in reseted state anymore
this._reseted=!1;// Call initialise and the run function
if(running||declarative){this._initialise(running);// clear the transforms on this runner so they dont get added again and again
this.transforms=new Matrix;var converged=this._run(declarative?dt:position);this.fire("step",this)}// correct the done flag here
// declaritive animations itself know when they converged
this.done=this.done||converged&&declarative;if(justFinished){this.fire("finished",this)}return this}reset(){if(this._reseted)return this;this.time(0);this._reseted=!0;return this}finish(){return this.step(1/0)}reverse(reverse){this._reverse=null==reverse?!this._reverse:reverse;return this}ease(fn){this._stepper=new Ease(fn);return this}active(enabled){if(null==enabled)return this.enabled;this.enabled=enabled;return this}/*
    Private Methods
    ===============
    Methods that shouldn't be used externally
    */ // Save a morpher to the morpher list so that we can retarget it later
_rememberMorpher(method,morpher){this._history[method]={morpher:morpher,caller:this._queue[this._queue.length-1]// We have to resume the timeline in case a controller
// is already done without beeing ever run
// This can happen when e.g. this is done:
//    anim = el.animate(new SVG.Spring)
// and later
//    anim.move(...)
};if(this._isDeclarative){var timeline=this.timeline();timeline&&timeline.play()}}// Try to set the target for a morpher if the morpher exists, otherwise
// do nothing and return false
_tryRetarget(method,target,extra){if(this._history[method]){// if the last method wasnt even initialised, throw it away
if(!this._history[method].caller.initialised){let index=this._queue.indexOf(this._history[method].caller);this._queue.splice(index,1);return!1}// for the case of transformations, we use the special retarget function
// which has access to the outer scope
if(this._history[method].caller.retarget){this._history[method].caller.retarget(target,extra);// for everything else a simple morpher change is sufficient
}else{this._history[method].morpher.to(target)}this._history[method].caller.finished=!1;var timeline=this.timeline();timeline&&timeline.play();return!0}return!1}// Run each initialise function in the runner if required
_initialise(running){// If we aren't running, we shouldn't initialise when not declarative
if(!running&&!this._isDeclarative)return;// Loop through all of the initialisers
for(var i=0,len=this._queue.length;i<len;++i){// Get the current initialiser
var current=this._queue[i],needsIt=this._isDeclarative||!current.initialised&&running;// Determine whether we need to initialise
running=!current.finished;// Call the initialiser if we need to
if(needsIt&&running){current.initialiser.call(this);current.initialised=!0}}}// Run each run function for the position or dt given
_run(positionOrDt){// Run all of the _queue directly
for(var allfinished=!0,i=0,len=this._queue.length;i<len;++i){// Get the current function to run
var current=this._queue[i],converged=current.runner.call(this,positionOrDt);// Run the function if its not finished, we keep track of the finished
// flag for the sake of declarative _queue
current.finished=current.finished||!0===converged;allfinished=allfinished&&current.finished}// We report when all of the constructors are finished
return allfinished}addTransform(transform,index){this.transforms.lmultiplyO(transform);return this}clearTransform(){this.transforms=new Matrix;return this}// TODO: Keep track of all transformations so that deletion is faster
clearTransformsFromQueue(){if(!this.done||!this._timeline||!this._timeline._runnerIds.includes(this.id)){this._queue=this._queue.filter(item=>{return!item.isTransform})}}static sanitise(duration,delay,when){// Initialise the default parameters
var times=1,swing=!1,wait=0;duration=duration||timeline.duration;delay=delay||timeline.delay;when=when||"last";// If we have an object, unpack the values
if("object"===typeof duration&&!(duration instanceof Stepper)){delay=duration.delay||delay;when=duration.when||when;swing=duration.swing||swing;times=duration.times||times;wait=duration.wait||wait;duration=duration.duration||timeline.duration}return{duration:duration,delay:delay,swing:swing,times:times,wait:wait,when:when}}}_exports.Runner=_exports.$RunnerDefault=Runner;Runner.id=0;class FakeRunner{constructor(transforms=new Matrix,id=-1,done=!0){this.transforms=transforms;this.id=id;this.done=done}clearTransformsFromQueue(){}}extend([Runner,FakeRunner],{mergeWith(runner){return new FakeRunner(runner.transforms.lmultiply(this.transforms),runner.id)}});// FakeRunner.emptyRunner = new FakeRunner()
const lmultiply=(last,curr)=>last.lmultiplyO(curr),getRunnerTransform=runner=>runner.transforms;function mergeTransforms(){// Find the matrix to apply to the element and apply it
let runners=this._transformationRunners.runners,netTransform=runners.map(getRunnerTransform).reduce(lmultiply,new Matrix);this.transform(netTransform);this._transformationRunners.merge();if(1===this._transformationRunners.length()){this._frameId=null}}class RunnerArray{constructor(){this.runners=[];this.ids=[]}add(runner){if(this.runners.includes(runner))return;let id=runner.id+1;this.runners.push(runner);this.ids.push(id);return this}getByID(id){return this.runners[this.ids.indexOf(id+1)]}remove(id){let index=this.ids.indexOf(id+1);this.ids.splice(index,1);this.runners.splice(index,1);return this}merge(){let lastRunner=null;this.runners.forEach((runner,i)=>{const condition=lastRunner&&runner.done&&lastRunner.done// don't merge runner when persisted on timeline
&&(!runner._timeline||!runner._timeline._runnerIds.includes(runner.id))&&(!lastRunner._timeline||!lastRunner._timeline._runnerIds.includes(lastRunner.id));if(condition){// the +1 happens in the function
this.remove(runner.id);this.edit(lastRunner.id,runner.mergeWith(lastRunner))}lastRunner=runner});return this}edit(id,newRunner){let index=this.ids.indexOf(id+1);this.ids.splice(index,1,id+1);this.runners.splice(index,1,newRunner);return this}length(){return this.ids.length}clearBefore(id){let deleteCnt=this.ids.indexOf(id+1)||1;this.ids.splice(0,deleteCnt,0);this.runners.splice(0,deleteCnt,new FakeRunner).forEach(r=>r.clearTransformsFromQueue());return this}}registerMethods({Element:{animate(duration,delay,when){var o=Runner.sanitise(duration,delay,when),timeline=this.timeline();return new Runner(o.duration).loop(o).element(this).timeline(timeline.play()).schedule(delay,when)},delay(by,when){return this.animate(0,by,when)},// this function searches for all runners on the element and deletes the ones
// which run before the current one. This is because absolute transformations
// overwfrite anything anyway so there is no need to waste time computing
// other runners
_clearTransformRunnersBefore(currentRunner){this._transformationRunners.clearBefore(currentRunner.id)},_currentTransform(current){return this._transformationRunners.runners// we need the equal sign here to make sure, that also transformations
// on the same runner which execute before the current transformation are
// taken into account
.filter(runner=>runner.id<=current.id).map(getRunnerTransform).reduce(lmultiply,new Matrix)},_addRunner(runner){this._transformationRunners.add(runner);// Make sure that the runner merge is executed at the very end of
// all Animator functions. Thats why we use immediate here to execute
// the merge right after all frames are run
Animator.cancelImmediate(this._frameId);this._frameId=Animator.immediate(mergeTransforms.bind(this))},_prepareRunner(){if(null==this._frameId){this._transformationRunners=new RunnerArray().add(new FakeRunner(new Matrix(this)))}}}});extend(Runner,{attr(a,v){return this.styleAttr("attr",a,v)},// Add animatable styles
css(s,v){return this.styleAttr("css",s,v)},styleAttr(type,name,val){// apply attributes individually
if("object"===typeof name){for(var key in name){this.styleAttr(type,key,name[key])}return this}var morpher=new Morphable(this._stepper).to(val);this.queue(function(){morpher=morpher.from(this.element()[type](name))},function(pos){this.element()[type](name,morpher.at(pos));return morpher.done()});return this},zoom(level,point){if(this._tryRetarget("zoom",to,point))return this;var morpher=new Morphable(this._stepper).to(new SVGNumber(level));this.queue(function(){morpher=morpher.from(this.element().zoom())},function(pos){this.element().zoom(morpher.at(pos),point);return morpher.done()},function(newLevel,newPoint){point=newPoint;morpher.to(newLevel)});this._rememberMorpher("zoom",morpher);return this},/**
   ** absolute transformations
   **/ //
// M v -----|-----(D M v = F v)------|----->  T v
//
// 1. define the final state (T) and decompose it (once)
//    t = [tx, ty, the, lam, sy, sx]
// 2. on every frame: pull the current state of all previous transforms
//    (M - m can change)
//   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]
// 3. Find the interpolated matrix F(pos) = m + pos * (t - m)
//   - Note F(0) = M
//   - Note F(1) = T
// 4. Now you get the delta matrix as a result: D = F * inv(M)
transform(transforms,relative,affine){// If we have a declarative function, we should retarget it if possible
relative=transforms.relative||relative;if(this._isDeclarative&&!relative&&this._tryRetarget("transform",transforms)){return this}// Parse the parameters
var isMatrix=Matrix.isMatrixLike(transforms);affine=null!=transforms.affine?transforms.affine:null!=affine?affine:!isMatrix;// Create a morepher and set its type
const morpher=new Morphable(this._stepper).type(affine?TransformBag:Matrix);let origin,element,current,currentAngle,startTransform;function setup(){// make sure element and origin is defined
element=element||this.element();origin=origin||getOrigin(transforms,element);startTransform=new Matrix(relative?void 0:element);// add the runner to the element so it can merge transformations
element._addRunner(this);// Deactivate all transforms that have run so far if we are absolute
if(!relative){element._clearTransformRunnersBefore(this)}}function run(pos){// clear all other transforms before this in case something is saved
// on this runner. We are absolute. We dont need these!
if(!relative)this.clearTransform();let{x,y}=new Point(origin).transform(element._currentTransform(this)),target=new Matrix(_objectSpread({},transforms,{origin:[x,y]})),start=this._isDeclarative&&current?current:startTransform;if(affine){target=target.decompose(x,y);start=start.decompose(x,y);// Get the current and target angle as it was set
const rTarget=target.rotate,rCurrent=start.rotate,possibilities=[rTarget-360,rTarget,rTarget+360],distances=possibilities.map(a=>Math.abs(a-rCurrent)),shortest=Math.min(...distances),index=distances.indexOf(shortest);target.rotate=possibilities[index]}if(relative){// we have to be careful here not to overwrite the rotation
// with the rotate method of Matrix
if(!isMatrix){target.rotate=transforms.rotate||0}if(this._isDeclarative&&currentAngle){start.rotate=currentAngle}}morpher.from(start);morpher.to(target);let affineParameters=morpher.at(pos);currentAngle=affineParameters.rotate;current=new Matrix(affineParameters);this.addTransform(current);element._addRunner(this);return morpher.done()}function retarget(newTransforms){// only get a new origin if it changed since the last call
if((newTransforms.origin||"center").toString()!==(transforms.origin||"center").toString()){origin=getOrigin(transforms,element)}// overwrite the old transformations with the new ones
transforms=_objectSpread({},newTransforms,{origin})}this.queue(setup,run,retarget,!0);this._isDeclarative&&this._rememberMorpher("transform",morpher);return this},// Animatable x-axis
x(x,relative){return this._queueNumber("x",x)},// Animatable y-axis
y(y){return this._queueNumber("y",y)},dx(x){return this._queueNumberDelta("x",x)},dy(y){return this._queueNumberDelta("y",y)},_queueNumberDelta(method,to){to=new SVGNumber(to);// Try to change the target if we have this method already registerd
if(this._tryRetarget(method,to))return this;// Make a morpher and queue the animation
var morpher=new Morphable(this._stepper).to(to),from=null;this.queue(function(){from=this.element()[method]();morpher.from(from);morpher.to(from+to)},function(pos){this.element()[method](morpher.at(pos));return morpher.done()},function(newTo){morpher.to(from+new SVGNumber(newTo))});// Register the morpher so that if it is changed again, we can retarget it
this._rememberMorpher(method,morpher);return this},_queueObject(method,to){// Try to change the target if we have this method already registerd
if(this._tryRetarget(method,to))return this;// Make a morpher and queue the animation
var morpher=new Morphable(this._stepper).to(to);this.queue(function(){morpher.from(this.element()[method]())},function(pos){this.element()[method](morpher.at(pos));return morpher.done()});// Register the morpher so that if it is changed again, we can retarget it
this._rememberMorpher(method,morpher);return this},_queueNumber(method,value){return this._queueObject(method,new SVGNumber(value))},// Animatable center x-axis
cx(x){return this._queueNumber("cx",x)},// Animatable center y-axis
cy(y){return this._queueNumber("cy",y)},// Add animatable move
move(x,y){return this.x(x).y(y)},// Add animatable center
center(x,y){return this.cx(x).cy(y)},// Add animatable size
size(width,height){// animate bbox based size for all other elements
var box;if(!width||!height){box=this._element.bbox()}if(!width){width=box.width/box.height*height}if(!height){height=box.height/box.width*width}return this.width(width).height(height)},// Add animatable width
width(width){return this._queueNumber("width",width)},// Add animatable height
height(height){return this._queueNumber("height",height)},// Add animatable plot
plot(a,b,c,d){// Lines can be plotted with 4 arguments
if(4===arguments.length){return this.plot([a,b,c,d])}if(this._tryRetarget("plot",a))return this;var morpher=new Morphable(this._stepper).type(this._element.MorphArray).to(a);this.queue(function(){morpher.from(this._element.array())},function(pos){this._element.plot(morpher.at(pos));return morpher.done()});this._rememberMorpher("plot",morpher);return this},// Add leading method
leading(value){return this._queueNumber("leading",value)},// Add animatable viewbox
viewbox(x,y,width,height){return this._queueObject("viewbox",new Box(x,y,width,height))},update(o){if("object"!==typeof o){return this.update({offset:arguments[0],color:arguments[1],opacity:arguments[2]})}if(null!=o.opacity)this.attr("stop-opacity",o.opacity);if(null!=o.color)this.attr("stop-color",o.color);if(null!=o.offset)this.attr("offset",o.offset);return this}});extend(Runner,{rx,ry,from,to});register(Runner,"Runner");var Runner$1={default:Runner};_exports.$Runner=Runner$1;class Svg extends Container{constructor(node){super(nodeOrNew("svg",node),node);this.namespace()}isRoot(){return!this.node.parentNode||!(this.node.parentNode instanceof globals.window.SVGElement)||"#document"===this.node.parentNode.nodeName}// Check if this is a root svg
// If not, call docs from this element
root(){if(this.isRoot())return this;return super.root()}// Add namespaces
namespace(){if(!this.isRoot())return this.root().namespace();return this.attr({xmlns:ns,version:"1.1"}).attr("xmlns:xlink",xlink,xmlns).attr("xmlns:svgjs",svgjs,xmlns)}// Creates and returns defs element
defs(){if(!this.isRoot())return this.root().defs();return adopt(this.node.querySelector("defs"))||this.put(new Defs)}// custom parent method
parent(type){if(this.isRoot()){return"#document"===this.node.parentNode.nodeName?null:adopt(this.node.parentNode)}return super.parent(type)}clear(){// remove children
while(this.node.hasChildNodes()){this.node.removeChild(this.node.lastChild)}// remove defs reference
delete this._defs;return this}}_exports.Svg=_exports.$SvgDefault=Svg;registerMethods({Container:{// Create nested svg document
nested:wrapWithAttrCheck(function(){return this.put(new Svg)})}});register(Svg,"Svg",!0);var Svg$1={default:Svg};_exports.$Svg=Svg$1;class Symbol extends Container{// Initialize node
constructor(node){super(nodeOrNew("symbol",node),node)}}_exports.Symbol=_exports.$SymbolDefault=Symbol;registerMethods({Container:{symbol:wrapWithAttrCheck(function(){return this.put(new Symbol)})}});register(Symbol,"Symbol");var _Symbol={default:Symbol};_exports.$Symbol=_Symbol;function plain(text){// clear if build mode is disabled
if(!1===this._build){this.clear()}// create text node
this.node.appendChild(globals.document.createTextNode(text));return this}// Get length of text element
function length(){return this.node.getComputedTextLength()}var textable={plain:plain,length:length};_exports.$textable=textable;class Text extends Shape{// Initialize node
constructor(node){super(nodeOrNew("text",node),node);this.dom.leading=new SVGNumber(1.3);// store leading value for rebuilding
this._rebuild=!0;// enable automatic updating of dy values
this._build=!1;// disable build mode for adding multiple lines
}// Move over x-axis
// Text is moved its bounding box
// text-anchor does NOT matter
x(x,box=this.bbox()){if(null==x){return box.x}return this.attr("x",this.attr("x")+x-box.x)}// Move over y-axis
y(y,box=this.bbox()){if(null==y){return box.y}return this.attr("y",this.attr("y")+y-box.y)}move(x,y,box=this.bbox()){return this.x(x,box).y(y,box)}// Move center over x-axis
cx(x,box=this.bbox()){if(null==x){return box.cx}return this.attr("x",this.attr("x")+x-box.cx)}// Move center over y-axis
cy(y,box=this.bbox()){if(null==y){return box.cy}return this.attr("y",this.attr("y")+y-box.cy)}center(x,y,box=this.bbox()){return this.cx(x,box).cy(y,box)}// Set the text content
text(text){// act as getter
if(text===void 0){var children=this.node.childNodes,firstLine=0;text="";for(var i=0,len=children.length;i<len;++i){// skip textPaths - they are no lines
if("textPath"===children[i].nodeName){if(0===i)firstLine=1;continue}// add newline if its not the first child and newLined is set to true
if(i!==firstLine&&3!==children[i].nodeType&&!0===adopt(children[i]).dom.newLined){text+="\n"}// add content of this node
text+=children[i].textContent}return text}// remove existing content
this.clear().build(!0);if("function"===typeof text){// call block
text.call(this,this)}else{// store text and make sure text is not blank
text=text.split("\n");// build new lines
for(var j=0,jl=text.length;j<jl;j++){this.tspan(text[j]).newLine()}}// disable build mode and rebuild lines
return this.build(!1).rebuild()}// Set / get leading
leading(value){// act as getter
if(null==value){return this.dom.leading}// act as setter
this.dom.leading=new SVGNumber(value);return this.rebuild()}// Rebuild appearance type
rebuild(rebuild){// store new rebuild flag if given
if("boolean"===typeof rebuild){this._rebuild=rebuild}// define position of all lines
if(this._rebuild){var self=this,blankLineOffset=0,leading=this.dom.leading;this.each(function(){var fontSize=globals.window.getComputedStyle(this.node).getPropertyValue("font-size"),dy=leading*new SVGNumber(fontSize);if(this.dom.newLined){this.attr("x",self.attr("x"));if("\n"===this.text()){blankLineOffset+=dy}else{this.attr("dy",dy+blankLineOffset);blankLineOffset=0}}});this.fire("rebuild")}return this}// Enable / disable build mode
build(build){this._build=!!build;return this}// overwrite method from parent to set data properly
setData(o){this.dom=o;this.dom.leading=new SVGNumber(o.leading||1.3);return this}}_exports.Text=_exports.$TextDefault=Text;extend(Text,textable);registerMethods({Container:{// Create text element
text:wrapWithAttrCheck(function(text){return this.put(new Text).text(text)}),// Create plain text element
plain:wrapWithAttrCheck(function(text){return this.put(new Text).plain(text)})}});register(Text,"Text");var Text$1={default:Text};_exports.$Text=Text$1;class Tspan extends Text{// Initialize node
constructor(node){super(nodeOrNew("tspan",node),node)}// Set text content
text(text){if(null==text)return this.node.textContent+(this.dom.newLined?"\n":"");"function"===typeof text?text.call(this,this):this.plain(text);return this}// Shortcut dx
dx(dx){return this.attr("dx",dx)}// Shortcut dy
dy(dy){return this.attr("dy",dy)}x(x){return this.attr("x",x)}y(y){return this.attr("x",y)}move(x,y){return this.x(x).y(y)}// Create new line
newLine(){// fetch text parent
var t=this.parent(Text);// mark new line
this.dom.newLined=!0;var fontSize=globals.window.getComputedStyle(this.node).getPropertyValue("font-size"),dy=t.dom.leading*new SVGNumber(fontSize);// apply new position
return this.dy(dy).attr("x",t.x())}}_exports.Tspan=_exports.$TspanDefault=Tspan;extend(Tspan,textable);registerMethods({Tspan:{tspan:wrapWithAttrCheck(function(text){var tspan=new Tspan;// clear if build mode is disabled
if(!this._build){this.clear()}// add new tspan
this.node.appendChild(tspan.node);return tspan.text(text)})}});register(Tspan,"Tspan");var Tspan$1={default:Tspan};_exports.$Tspan=Tspan$1;class ClipPath extends Container{constructor(node){super(nodeOrNew("clipPath",node),node)}// Unclip all clipped elements and remove itself
remove(){// unclip all targets
this.targets().forEach(function(el){el.unclip()});// remove clipPath from parent
return super.remove()}targets(){return baseFind("svg [clip-path*=\""+this.id()+"\"]")}}_exports.ClipPath=_exports.$ClipPathDefault=ClipPath;registerMethods({Container:{// Create clipping element
clip:wrapWithAttrCheck(function(){return this.defs().put(new ClipPath)})},Element:{// Distribute clipPath to svg element
clipWith(element){// use given clip or create a new one
let clipper=element instanceof ClipPath?element:this.parent().clip().add(element);// apply mask
return this.attr("clip-path","url(\"#"+clipper.id()+"\")")},// Unclip element
unclip(){return this.attr("clip-path",null)},clipper(){return this.reference("clip-path")}}});register(ClipPath,"ClipPath");var ClipPath$1={default:ClipPath};_exports.$ClipPath=ClipPath$1;class ForeignObject extends Element{constructor(node){super(nodeOrNew("foreignObject",node),node)}}_exports.ForeignObject=_exports.$ForeignObjectDefault=ForeignObject;registerMethods({Container:{foreignObject:wrapWithAttrCheck(function(width,height){return this.put(new ForeignObject).size(width,height)})}});register(ForeignObject,"ForeignObject");var ForeignObject$1={default:ForeignObject};_exports.$ForeignObject=ForeignObject$1;class G extends Container{constructor(node){super(nodeOrNew("g",node),node)}x(x,box=this.bbox()){if(null==x)return box.x;return this.move(x,box.y,box)}y(y,box=this.bbox()){if(null==y)return box.y;return this.move(box.x,y,box)}move(x=0,y=0,box=this.bbox()){const dx=x-box.x,dy=y-box.y;return this.dmove(dx,dy)}dx(dx){return this.dmove(dx,0)}dy(dy){return this.dmove(0,dy)}dmove(dx,dy){this.children().forEach((child,i)=>{// Get the childs bbox
const bbox=child.bbox(),m=new Matrix(child),matrix=m.translate(dx,dy).transform(m.inverse()),p=new Point(bbox.x,bbox.y).transform(matrix);// Get childs matrix
// Move element
child.move(p.x,p.y)});return this}width(width,box=this.bbox()){if(null==width)return box.width;return this.size(width,box.height,box)}height(height,box=this.bbox()){if(null==height)return box.height;return this.size(box.width,height,box)}size(width,height,box=this.bbox()){const p=proportionalSize(this,width,height,box),scaleX=p.width/box.width,scaleY=p.height/box.height;this.children().forEach((child,i)=>{const o=new Point(box).transform(new Matrix(child).inverse());child.scale(scaleX,scaleY,o.x,o.y)});return this}}_exports.G=_exports.$GDefault=G;registerMethods({Container:{// Create a group element
group:wrapWithAttrCheck(function(){return this.put(new G)})}});register(G,"G");var G$1={default:G};_exports.$G=G$1;class A extends Container{constructor(node){super(nodeOrNew("a",node),node)}// Link url
to(url){return this.attr("href",url,xlink)}// Link target attribute
target(target){return this.attr("target",target)}}_exports.A=_exports.$ADefault=A;registerMethods({Container:{// Create a hyperlink element
link:wrapWithAttrCheck(function(url){return this.put(new A).to(url)})},Element:{// Create a hyperlink element
linkTo:function(url){var link=new A;if("function"===typeof url){url.call(link,link)}else{link.to(url)}return this.parent().put(link).put(this)}}});register(A,"A");var A$1={default:A};_exports.$A=A$1;class Mask extends Container{// Initialize node
constructor(node){super(nodeOrNew("mask",node),node)}// Unmask all masked elements and remove itself
remove(){// unmask all targets
this.targets().forEach(function(el){el.unmask()});// remove mask from parent
return super.remove()}targets(){return baseFind("svg [mask*=\""+this.id()+"\"]")}}_exports.Mask=_exports.$MaskDefault=Mask;registerMethods({Container:{mask:wrapWithAttrCheck(function(){return this.defs().put(new Mask)})},Element:{// Distribute mask to svg element
maskWith(element){// use given mask or create a new one
var masker=element instanceof Mask?element:this.parent().mask().add(element);// apply mask
return this.attr("mask","url(\"#"+masker.id()+"\")")},// Unmask element
unmask(){return this.attr("mask",null)},masker(){return this.reference("mask")}}});register(Mask,"Mask");var Mask$1={default:Mask};_exports.$Mask=Mask$1;function cssRule(selector,rule){if(!selector)return"";if(!rule)return selector;var ret=selector+"{";for(var i in rule){ret+=unCamelCase(i)+":"+rule[i]+";"}ret+="}";return ret}class Style extends Element{constructor(node){super(nodeOrNew("style",node),node)}addText(w=""){this.node.textContent+=w;return this}font(name,src,params={}){return this.rule("@font-face",_objectSpread({fontFamily:name,src:src},params))}rule(selector,obj){return this.addText(cssRule(selector,obj))}}_exports.Style=_exports.$StyleDefault=Style;registerMethods("Dom",{style:wrapWithAttrCheck(function(selector,obj){return this.put(new Style).rule(selector,obj)}),fontface:wrapWithAttrCheck(function(name,src,params){return this.put(new Style).font(name,src,params)})});register(Style,"Style");var Style$1={default:Style};_exports.$Style=Style$1;class TextPath extends Text{// Initialize node
constructor(node){super(nodeOrNew("textPath",node),node)}// return the array of the path track element
array(){var track=this.track();return track?track.array():null}// Plot path if any
plot(d){var track=this.track(),pathArray=null;if(track){pathArray=track.plot(d)}return null==d?pathArray:this}// Get the path element
track(){return this.reference("href")}}_exports.TextPath=_exports.$TextPathDefault=TextPath;registerMethods({Container:{textPath:wrapWithAttrCheck(function(text,path){// Convert text to instance if needed
if(!(text instanceof Text)){text=this.text(text)}return text.path(path)})},Text:{// Create path for text to run on
path:wrapWithAttrCheck(function(track,importNodes=!0){var textPath=new TextPath;// if track is a path, reuse it
if(!(track instanceof Path)){// create path element
track=this.defs().path(track)}// link textPath to path and add content
textPath.attr("href","#"+track,xlink);// Transplant all nodes from text to textPath
let node;if(importNodes){while(node=this.node.firstChild){textPath.node.appendChild(node)}}// add textPath element as child node and return textPath
return this.put(textPath)}),// Get the textPath children
textPath(){return this.findOne("textPath")}},Path:{// creates a textPath from this path
text:wrapWithAttrCheck(function(text){// Convert text to instance if needed
if(!(text instanceof Text)){text=new Text().addTo(this.parent()).text(text)}// Create textPath from text and path and return
return text.path(this)}),targets(){return baseFind("svg [href*=\""+this.id()+"\"]")}}});TextPath.prototype.MorphArray=PathArray;register(TextPath,"TextPath");var TextPath$1={default:TextPath};_exports.$TextPath=TextPath$1;class Use extends Shape{constructor(node){super(nodeOrNew("use",node),node)}// Use element as a reference
element(element,file){// Set lined element
return this.attr("href",(file||"")+"#"+element,xlink)}}_exports.Use=_exports.$UseDefault=Use;registerMethods({Container:{// Create a use element
use:wrapWithAttrCheck(function(element,file){return this.put(new Use).element(element,file)})}});register(Use,"Use");var Use$1={default:Use};_exports.$Use=Use$1;const SVG=makeInstance;_exports.SVG=SVG;extend([Svg,Symbol,Image,Pattern,Marker],getMethodsFor("viewbox"));extend([Line,Polyline,Polygon,Path],getMethodsFor("marker"));extend(Text,getMethodsFor("Text"));extend(Path,getMethodsFor("Path"));extend(Defs,getMethodsFor("Defs"));extend([Text,Tspan],getMethodsFor("Tspan"));extend([Rect,Ellipse,Circle,Gradient],getMethodsFor("radius"));extend(EventTarget,getMethodsFor("EventTarget"));extend(Dom,getMethodsFor("Dom"));extend(Element,getMethodsFor("Element"));extend(Shape,getMethodsFor("Shape"));// extend(Element, getConstructor('Memory'))
extend(Container,getMethodsFor("Container"));extend(Runner,getMethodsFor("Runner"));List.extend(getMethodNames());registerMorphableType([SVGNumber,Color,Box,Matrix,SVGArray,PointArray,PathArray]);makeMorphable();var main={Morphable:Morphable,registerMorphableType:registerMorphableType,makeMorphable:makeMorphable,TransformBag:TransformBag,ObjectBag:ObjectBag,NonMorphable:NonMorphable,defaults:defaults,utils:utils,namespaces:namespaces,regex:regex,SVG:SVG,parser:parser,find:baseFind,on:on,off:off,dispatch:dispatch,root:root,create:create,makeInstance:makeInstance,nodeOrNew:nodeOrNew,adopt:adopt,mockAdopt:mockAdopt,register:register,getClass:getClass,eid:eid,assignNewId:assignNewId,extend:extend,wrapWithAttrCheck:wrapWithAttrCheck,invent:invent,registerWindow:registerWindow,Animator:Animator,Controller:Controller,Ease:Ease,PID:PID,Spring:Spring,easing:easing,Queue:Queue,Runner:Runner,Timeline:Timeline,Array:SVGArray,Box:Box,Color:Color,EventTarget:EventTarget,Matrix:Matrix,Number:SVGNumber,PathArray:PathArray,Point:Point,PointArray:PointArray,List:List,Circle:Circle,ClipPath:ClipPath,Container:Container,Defs:Defs,Dom:Dom,Element:Element,Ellipse:Ellipse,ForeignObject:ForeignObject,Gradient:Gradient,G:G,A:A,Image:Image,Line:Line,Marker:Marker,Mask:Mask,Path:Path,Pattern:Pattern,Polygon:Polygon,Polyline:Polyline,Rect:Rect,Shape:Shape,Stop:Stop,Style:Style,Svg:Svg,Symbol:Symbol,Text:Text,TextPath:TextPath,Tspan:Tspan,Use:Use};_exports.$main=main;const normalizeEvent=ev=>ev.touches||[{clientX:ev.clientX,clientY:ev.clientY}];extend(Svg,{panZoom(options){this.off(".panZoom");// when called with false, disable panZoom
if(!1===options)return this;options=options||{};const zoomFactor=options.zoomFactor||.03,zoomMin=options.zoomMin||Number.MIN_VALUE,zoomMax=options.zoomMax||Number.MAX_VALUE;let lastP,lastTouches,zoomInProgress=!1;var wheelZoom=function(ev){ev.preventDefault();// touchpads can give ev.deltaY == 0, which skrews the lvl calculation
if(0===ev.deltaY)return;let lvl=this.zoom()-zoomFactor*ev.deltaY/Math.abs(ev.deltaY);const p=this.point(ev.clientX,ev.clientY);if(lvl>zoomMax){lvl=zoomMax}if(lvl<zoomMin){lvl=zoomMin}if(this.dispatch("zoom",{level:lvl,focus:p}).defaultPrevented){return this}this.zoom(lvl,p)};const pinchZoomStart=function(ev){lastTouches=normalizeEvent(ev);if(2>lastTouches.length)return;ev.preventDefault();if(this.dispatch("pinchZoomStart",{event:ev}).defaultPrevented){return}this.off("touchstart.panZoom",pinchZoomStart);zoomInProgress=!0;on(document,"touchmove.panZoom",pinchZoom,this,{passive:!1});on(document,"touchend.panZoom",pinchZoomStop,this,{passive:!1})},pinchZoomStop=function(ev){ev.preventDefault();zoomInProgress=!1;this.dispatch("pinchZoomEnd",{event:ev});off(document,"touchmove.panZoom",pinchZoom);off(document,"touchend.panZoom",pinchZoomStop);this.on("touchstart.panZoom",pinchZoomStart)},pinchZoom=function(ev){ev.preventDefault();const currentTouches=normalizeEvent(ev),zoom=this.zoom(),lastDelta=Math.sqrt(Math.pow(lastTouches[0].clientX-lastTouches[1].clientX,2)+Math.pow(lastTouches[0].clientY-lastTouches[1].clientY,2)),currentDelta=Math.sqrt(Math.pow(currentTouches[0].clientX-currentTouches[1].clientX,2)+Math.pow(currentTouches[0].clientY-currentTouches[1].clientY,2));let zoomAmount=lastDelta/currentDelta;if(zoom<zoomMin&&1<zoomAmount||zoom>zoomMax&&1>zoomAmount){zoomAmount=1}const currentFocus={x:currentTouches[0].clientX+.5*(currentTouches[1].clientX-currentTouches[0].clientX),y:currentTouches[0].clientY+.5*(currentTouches[1].clientY-currentTouches[0].clientY)},lastFocus={x:lastTouches[0].clientX+.5*(lastTouches[1].clientX-lastTouches[0].clientX),y:lastTouches[0].clientY+.5*(lastTouches[1].clientY-lastTouches[0].clientY)},p=this.point(currentFocus.x,currentFocus.y),focusP=this.point(2*currentFocus.x-lastFocus.x,2*currentFocus.y-lastFocus.y),box=new Box(this.viewbox()).transform(new Matrix().translate(p.x,p.y).scale(zoomAmount,0,0).translate(-focusP.x,-focusP.y));this.viewbox(box);lastTouches=currentTouches;this.dispatch("zoom",{box:box,focus:focusP})},panStart=function(ev){ev.preventDefault();this.off("mousedown.panZoom",panStart);lastTouches=normalizeEvent(ev);if(zoomInProgress)return;this.dispatch("panStart",{event:ev});lastP={x:lastTouches[0].clientX,y:lastTouches[0].clientY};on(document,"mousemove.panZoom",panning,this);on(document,"mouseup.panZoom",panStop,this)},panStop=function(ev){ev.preventDefault();off(document,"mousemove.panZoom",panning);off(document,"mouseup.panZoom",panStop);this.on("mousedown.panZoom",panStart);this.dispatch("panEnd",{event:ev})},panning=function(ev){ev.preventDefault();const currentTouches=normalizeEvent(ev),currentP={x:currentTouches[0].clientX,y:currentTouches[0].clientY},p1=this.point(currentP.x,currentP.y),p2=this.point(lastP.x,lastP.y),deltaP=[p2.x-p1.x,p2.y-p1.y],box=new Box(this.viewbox()).transform(new Matrix().translate(deltaP[0],deltaP[1]));this.viewbox(box);lastP=currentP};this.on("wheel.panZoom",wheelZoom);this.on("touchstart.panZoom",pinchZoomStart,this,{passive:!1});this.on("mousedown.panZoom",panStart,this);return this}});class FuroGraphRenderer extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}draw(graph){var sizes=graph.graph(),graphWidth=sizes.width,graphHeight=sizes.height;// remove old image on redraw
let i=this.shadowRoot.querySelector("svg");if(i){i.remove()}var canvas=SVG().addTo(this.shadowRoot).panZoom({zoomMin:.1,zoomMax:10,zoomFactor:.015});canvas.viewbox(0,0,graphWidth,graphHeight);this.canvas=canvas;let nodes=graph.nodes();nodes.forEach(v=>{let node=graph.node(v);// boxes for the components
if("component"===node.type){let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2).fill("none");box.radius(5);box.addClass(node.type);// set tooltip if exist
if(""!==node.node.description){let tootltip=box.element("title");tootltip.words(node.node.description);//add info
box.addClass("withdescription")}box.click(e=>{console.log(node.node)})}});// draw the lines
graph.edges().forEach(e=>{let edge=graph.edge(e);if("center"!==edge.type){let points=edge.points.map(p=>{return[p.x,p.y]}),line=canvas.polyline(points).addClass("line");line.addClass(edge.type);let tootltip=line.element("title");tootltip.words(edge.wirename)}});// component Labels over the edges
nodes.forEach(v=>{let node=graph.node(v);if("component"===node.type){let background=canvas.rect(10,25).move(node.x-node.width/2,node.y-node.height/2).addClass("boxlabelbg");background.radius(5);if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+25,node.y-node.height/2+2);// width is taken from the image, so wait a moment.
setTimeout(()=>{background.width(text.length()+50)},90)}}});nodes.forEach(v=>{let node=graph.node(v);if("attribute"===node.type){// add receiving circle
//if(node.attr._type === "method"){
//  let r = canvas.circle(12, 12).move((node.x - node.width / 2) -6, (node.y - node.height / 2)+6).addClass('line');
//}
let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass(node.type);box.addClass(node.attr._type);// add green bar to the left
if("method"===node.attr._type){let box=canvas.rect(10,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass("methodindicator")}// add blue bar to the right
if("event"===node.attr._type){let box=canvas.rect(10,node.height).move(node.x+node.width/2-10,node.y-node.height/2);box.radius(3);box.addClass("eventindicator")}// add classes for ^^bubbling, -^host, ^nonbubbling, ƒ-.property
// for bool like flex
if(!node.attr.value){box.addClass("flag");// add black bar to the left
let indicator=canvas.rect(10,node.height).move(node.x-node.width/2,node.y-node.height/2);indicator.radius(3);indicator.addClass("flagindicator")}else{let tootltip=box.element("title");tootltip.words(node.attr.value)}if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+15,node.y-node.height/2+5)}}if("notarget"===node.type){let circle=canvas.circle(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2).fill("red"),tootltip=circle.element("title");tootltip.words(node.wirename)}if("nosource"===node.type){let circle=canvas.circle(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2).fill("orange"),tootltip=circle.element("title");tootltip.words(node.wirename)}if("park"===node.type){let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass("park");if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+15,node.y-node.height/2+5)}}if("bubbling"===node.type){let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass("bubbling");if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+15,node.y-node.height/2+5)}}if("nonbubbling"===node.type){let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass("nonbubbling");if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+15,node.y-node.height/2+5)}}if("hostevent"===node.type){let box=canvas.rect(node.width,node.height).move(node.x-node.width/2,node.y-node.height/2);box.radius(3);box.addClass("hostevent");if(node.label){let text=canvas.text(node.label).move(node.x-node.width/2+15,node.y-node.height/2+5)}}})}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            width: 100%;
            overflow: hidden;

        }

        :host([hidden]) {
            display: none;
        }

        svg {
            width: 100%;
            height: 100%;
        }

        .component {
            fill: #f6f6f6;
            stroke: #67686a;
            stroke-width: 2;
        }

        .boxlabelbg {
            fill: white;
            stroke: #67686a;
            stroke-width: 2;
        }

        .component.withdescription {
            stroke-dasharray: 20 4;
        }

        .attribute {
            fill: white;
            stroke: #ffb65b;
            stroke-width: 2;
        }

        .attribute.method {
            stroke: #4caf50;
        }

        .methodindicator {
            stroke: #4caf50;
            fill: #4caf50;
        }

        .eventindicator {
            stroke: #02a8f4;
            fill: #02a8f4;
        }


        .attribute.event {
            stroke: #02a8f4;
        }

        .attribute.flag {
            stroke: #686868;
        }

        .flagindicator {
            stroke: #686868;
            fill: #686868;
        }

        .park {
            stroke: #686868;
            fill: none;
            stroke-width: 3;
        }

        .bubbling, .hostevent, .nonbubbling {
            stroke: #fa4600;
            fill: none;
            stroke-width: 3;
        }


        .line.event {
            stroke: #fa4600;
            fill: none;
            stroke-width: 4;
        }

        .line {
            stroke: #02a8f4;
            fill: none;
            stroke-width: 4;
        }

        .line.park {
            stroke: #070707;
            fill: none;
            stroke-width: 4;
        }


        .line:hover {
            stroke: #f4c633;
        }

    `}}window.customElements.define("furo-graph-renderer",FuroGraphRenderer);class FuroShowFlow extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}parseTemplate(template){this.graph=new dagre.graphlib.Graph({multigraph:!1,compound:!0});// graph settings
this.graph.setGraph({rankdir:"LR",align:"UL",ranksep:50,nodesep:20,edgesep:40,marginx:40,marginy:40});this._collectedWires={methods:[],events:[]};this._recursiveParse(template,"");this._setWireEdges();dagre.layout(this.graph);this._FBPTriggerWire("--graph",this.graph)}_setWireEdges(){// extract the wire parts from all attributes
let sendingWires={},receivingWires={};this._collectedWires.events.forEach(attr=>{let rawwires=attr.value.split(",");rawwires.forEach(w=>{let match=w.trim().match(/^([^\(\^][a-z\-_]+)/gi);if(null!==match){if(sendingWires[match[0]]===void 0){sendingWires[match[0]]=[]}sendingWires[match[0]].push(attr)}// park a value
if(w.trim().startsWith("((")){this.graph.setNode("park-"+w.trim(),{width:200,height:30,type:"park",label:w.trim()});this.graph.setEdge(attr._graphID,"park-"+w.trim(),{weight:1,type:"park"})}// bubbling nonbubbling a value
if(w.trim().startsWith("^")){let eventtype=w.trim().startsWith("^^")?"bubbling":"nonbubbling";this.graph.setNode(attr._graphID+"-"+w.trim(),{width:200,height:30,type:eventtype,label:w.trim()});this.graph.setEdge(attr._graphID,attr._graphID+"-"+w.trim(),{weight:1,type:"event"})}// bubbling nonbubbling a value
if(w.trim().startsWith("-^")){this.graph.setNode(attr._graphID+"-"+w.trim(),{width:200,height:30,type:"hostevent",label:w.trim()});this.graph.setEdge(attr._graphID,attr._graphID+"-"+w.trim(),{weight:1,type:"event"})}})});this._collectedWires.methods.forEach(attr=>{let rawwires=attr.value.split(",");rawwires.forEach(w=>{let match=w.trim().match(/^([^\(\(][a-z\-_]+)/gi);if(null!==match){if(receivingWires[match[0]]===void 0){receivingWires[match[0]]=[]}receivingWires[match[0]].push(attr)}})});// setEdges for every sendingWire element with receivingWire element
for(let wire in sendingWires){sendingWires[wire].forEach(source=>{if(receivingWires[wire]){receivingWires[wire].forEach(target=>{this.graph.setEdge(source._graphID,target._graphID,{weight:1,source:source,target:target,wirename:wire})})}else{// no target element
// add node and set edge
this.graph.setNode(source._graphID+"-notarget",{width:30,height:30,type:"notarget",source:source,wirename:wire});this.graph.setEdge(source._graphID,source._graphID+"-notarget",{weight:1,source:source,wirename:wire})}})}// find edges without source (for things like --pageActivated)
for(let wire in receivingWires){receivingWires[wire].forEach(source=>{if(!sendingWires[wire]){// no target element
// add node and set edge
this.graph.setNode(source._graphID+"-nosource",{width:30,height:30,type:"nosource",source:source,wirename:wire});this.graph.setParent(source._graphID+"-nosource",source.parentComponentID);this.graph.setEdge(source._graphID+"-nosource",source._graphID,{weight:1,source:source,wirename:wire})}})}}_recursiveParse(node,parentNode){// todo switch to childNodes ignore TEXT_NODE and store COMMENT_NODE (8) to the next ELEMENT_NODE (1)
// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType
if(node.childNodes&&0<node.childNodes.length){// start with empty
let description="";Array.from(node.childNodes).forEach((e,i)=>{if(8===e.nodeType){description=e.textContent}if(1===e.nodeType){let nodeID=parentNode+"."+e.tagName+"-"+i;e._graphID=nodeID;e.description=description;// clear description for next loop
description="";this.graph.setNode(nodeID,{label:e.tagName,width:440,height:100,type:"component",node:e});if(""!==parentNode){//set parent
this.graph.setParent(nodeID,parentNode)}// Attributes
Array.from(e.attributes).forEach(attr=>{let attrNodeID=nodeID+"-"+attr.name;attr._graphID=attrNodeID;attr.parentComponentID=nodeID;this.graph.setNode(attrNodeID,{label:attr.name,width:200,height:30,type:"attribute",attr:attr,value:attr.value});this.graph.setParent(attrNodeID,nodeID);// add center node
this.graph.setNode(nodeID+"-center",{type:"center"});this.graph.setParent(nodeID+"-center",nodeID);// collect the event wires
if(attr.name.startsWith("@-")){this._collectedWires.events.push(attr);attr._type="event";//einen edge setzen um @ immer rechts zu haben
this.graph.setEdge(nodeID+"-center",attrNodeID,{type:"center",weight:15})}else{//einen edge setzen um ƒ und alle anderen immer links zu haben
this.graph.setEdge(attrNodeID,nodeID+"-center",{type:"center",weight:15})}// collect the method wires
if(attr.name.startsWith("\u0192-")){this._collectedWires.methods.push(attr);attr._type="method"}});this._recursiveParse(e,nodeID)}})}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
        }

        :host([hidden]) {
            display: none;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-graph-renderer ƒ-draw="--graph"></furo-graph-renderer>
    `}}window.customElements.define("furo-show-flow",FuroShowFlow);class FuroDemoSnippet extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();let t=this.querySelector("template");this.template=t.content;this.markdown="```html\n"+t.innerHTML+"\n```";this.addEventListener("source",e=>{this.source=!0;this.demo=!1;this.flow=!1;this._FBPTriggerWire("--markdown",this.markdown);let md=this.shadowRoot.querySelector("furo-markdown");md.style.width=this.offsetWidth+"px"});this.addEventListener("demo",e=>{this.source=!1;this.demo=!0;this.flow=!1});this.addEventListener("flow",e=>{this.source=!1;this.demo=!1;this.flow=!0;this._FBPTriggerWire("--template",this.template)})}firstUpdated(v){super.firstUpdated(v);let md=this.shadowRoot.querySelector("furo-markdown");md.style.width=this.offsetWidth+"px"}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */source:{type:Boolean,reflect:!0},demo:{type:Boolean,reflect:!0},flow:{type:Boolean,reflect:!0},noDemo:{type:Boolean,reflect:!0,attribute:"no-demo"}}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();// check if demo is disabled
let demo=this.shadowRoot.querySelector("#demo");if(!this.noDemo){let elem=document.createElement("empty-fbp-node");elem.attachShadow({mode:"open"});elem.shadowRoot.appendChild(this.template.cloneNode(!0));elem._appendFBP(elem.shadowRoot);elem._FBPTraceWires();demo.appendChild(elem.shadowRoot)}else{demo.innerText="Demo is disabled"}if(!this.source&&!this.flow){this.demo=!0}if(this.source){this._FBPTriggerWire("--markdown",this.markdown)}if(this.flow){this._FBPTriggerWire("--template",this.template)}}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){let theme=_furoShell.Theme.getThemeForComponent(this.name);if(theme){return[theme,Styling.theme]}else{// language=CSS
return[_furoShell.css`
          :host {
              display: block;
              height: 300px;
              box-sizing: border-box;
              overflow: hidden;
          }

          :host([hidden]) {
              display: none;
          }

          furo-markdown {
              height: 100%;
              overflow: auto;
          }

          #demo, #flow {
              height: 100%;
          }

          :host(:not([demo])) #demo {
              display: none;
          }

          :host(:not([flow])) #flow {
              display: none;
          }

          :host(:not([source])) > furo-markdown {
              display: none;
          }

          div.flexbody {
              height: inherit;
              overflow: hidden;
          }

          span {
              cursor: pointer;
          }

          .nav {
              background-color: var(--demo-header);
              color: var(--on-primary);
              margin-bottom: 24px;
          }

          .nav span {
              display: inline-block;
              border-bottom: 1px solid var(--demo-header, white);
          }

          :host([flow]) .flow {
              font-weight: 800;
              border-bottom: 1px solid var(--on-primary);
          }

          :host([demo]) .demo {
              font-weight: 800;
              border-bottom: 1px solid var(--on-primary);
          }

          :host([no-demo]) .demo {
              display: none;
          }

          :host([source]) .source {
              font-weight: 800;
              border-bottom: 1px solid var(--on-primary);
          }

      `,Styling.theme]}}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`

      <furo-vertical-flex>
        <div class="nav"><span class="demo" @-click="-^demo">demo</span> | <span class="source" @-click="-^source">source</span>
          | <span class="flow" @-click="-^flow">flow</span></div>
        <div flex class="flexbody">
          <div id="demo" flex></div>
          <furo-show-flow id="flow" ƒ-parse-template="--template"></furo-show-flow>
          <furo-markdown id="source" ƒ-parse-markdown="--markdown"></furo-markdown>
        </div>
      </furo-vertical-flex>
    `}}window.customElements.define("furo-demo-snippet",FuroDemoSnippet);class FuroDocFetchAnalysis extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}fetchSrc(src){fetch(src).then(res=>res.json()).then(analysis=>{this._analysis=analysis;if(this.__location){this.checkSubroute(this.__location)}}).catch(err=>err)}checkSubroute(location){// enqueue when analysis is not
if(!this._analysis){this.__location=location;return}// Subelement deep linking
// on ../input/component-name we want to select component-name
if(location.pathSegments[0]){let subElement=location.pathSegments[0];if(this._analysis.elements){this._analysis.elements.forEach(e=>{// needed for linking to the demos
e.__package=this._path;if(e.tagname===subElement){this._analysis.__selectedElement=e;//disable class
this._analysis.__selectedClass=void 0;this._analysis.__selectedMixin=void 0;e.__selected=!0}else{e.__selected=!1}})}// check classes if available
if(this._analysis.classes){this._analysis.classes.forEach((e,i)=>{if(e.name===subElement){this._analysis.__selectedClass=e;//disable element
this._analysis.__selectedMixin=void 0;this._analysis.__selectedElement=void 0;e.__selected=!0}else{e.__selected=!1}})}// check mixins if available
if(this._analysis.mixins){this._analysis.mixins.forEach((e,i)=>{if(e.name===subElement){this._analysis.__selectedMixin=e;//disable element
this._analysis.__selectedClass=void 0;this._analysis.__selectedElement=void 0;e.__selected=!0}else{e.__selected=!1}})}}else{// select first element on default
if(this._analysis.elements){this._analysis.__selectedElement=this._analysis.elements[0]}else{// try with classes
if(this._analysis.classes){this._analysis.__selectedClass=this._analysis.classes[0]}}}/**
       * @event data
       * Fired when analysis loaded
       * detail payload: analysis
       */let customEvent=new Event("data",{composed:!0,bubbles:!0});customEvent.detail=this._analysis;this.dispatchEvent(customEvent)}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
    `}}window.customElements.define("furo-doc-fetch-analysis",FuroDocFetchAnalysis);class FetchAnalysis extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();fetch("FuroBaseComponents/node_modules/@furo/data/analysis.json").then(res=>res.json()).then(analysis=>{/**
       * @event data
       * Fired when analysis loaded
       * detail payload: analysis
       */let customEvent=new Event("data",{composed:!0,bubbles:!0});customEvent.detail=analysis;this.dispatchEvent(customEvent)}).catch(err=>err)}}window.customElements.define("fetch-analysis",FetchAnalysis);class DemoFuroDemoSnippet extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
        }

        :host([hidden]) {
            display: none;
        }

      
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <p>Demo is flickering, because it gets completly re rendered on each change</p>
        <furo-demo-snippet flex demo>
          <template>
            <a href="/api/demo/util/demo-furo-demo-snippet/util/" @-park="((park)),((other))" @-event="^event,((other))"
               @-bubble="^^bubble,((other))" @-hostevent="-^hostevent">Package util</a>
            <a href="/api/demo/util/demo-furo-demo-snippet/data/">Package data</a>

            <furo-location url-space-regex="^/api/demo/util/demo-furo-demo-snippet"
                           @-location-changed="--pathChanged"></furo-location>
            <!-- load analysis based on --pathChanged.pathSegments[0] -->
            <furo-doc-fetch-analysis ƒ-fetch-location="--pathChanged" ƒ-activate="--pageActivated"
                                     @-data="--analysis"></furo-doc-fetch-analysis>
            <furo-split-view>

              <!-- the doc menu 
              Multiline comment
              on furo-doc-menu
              -->
              <furo-doc-menu slot="master" scroll ƒ-analysis="--analysis" @-element="--element"
                             @-class="--class"></furo-doc-menu>

              <furo-doc-element scroll ƒ-print="--element" ƒ-hide="--class"></furo-doc-element>
              <furo-doc-class scroll ƒ-print="--class" ƒ-hide="--element"></furo-doc-class>

            </furo-split-view>

            <dummy-element ƒ-remove="--class(*.path), --element, --analysis(*.path)" ƒ-.prop="--analysis"
                           @-done="((hostattribute)),notarget"></dummy-element>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-demo-snippet",DemoFuroDemoSnippet);class DemoFuroHorizontalFlex extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-horizontal-flex</h2>
      <p>Arrange your components vertically. Add the flex attribute for the flexing part.</p>
      <furo-demo-snippet>
        <template>
          <furo-horizontal-flex>
            <div>small</div>
            <!-- A furo-empty-spacer will fill the available space. -->
            <furo-empty-spacer style="border: 1px dashed lightgray;"></furo-empty-spacer>
            <div>small</div>
          </furo-horizontal-flex>
        </template>
      </furo-demo-snippet>

      
    `}}window.customElements.define("demo-furo-horizontal-flex",DemoFuroHorizontalFlex);class DemoFuroVerticalFlex extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-vertical-flex</h2>
      <p>Arrange your components vertically. Add the flex attribute for the flexing part.</p>
      <furo-demo-snippet >
        <template>
          <furo-vertical-flex style="height: 180px">
            <div>small</div>
            <furo-empty-spacer style="border: 1px dashed lightgray"></furo-empty-spacer>
            <div>small</div>
          </furo-vertical-flex>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-vertical-flex",DemoFuroVerticalFlex);class DemoFuroVerticalScroller extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
        <h2>Demo furo-vertical-scroller</h2>
        <p>Vertical scroller takes the height of his parent node and allows you to scroll its content.</p>
      <furo-demo-snippet >
        <template>
          <furo-vertical-scroller >
            <div style="height: 620px;background-image: linear-gradient(red, yellow);"></div>
          </furo-vertical-scroller>
        </template>
      </furo-demo-snippet>
        
    `}}window.customElements.define("demo-furo-vertical-scroller",DemoFuroVerticalScroller);class DemoFuroSplitView extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-split-view</h2>
      <p>Splits your view in a master-detail view</p>
      <furo-demo-snippet>
        <template>
          <furo-split-view>
            <div slot="master" style="height: 100%; background-image: linear-gradient(blue, violet);">Master</div>
            <furo-vertical-scroller>
              <div style="height: 420px;background-image: linear-gradient(red, yellow);">
                Detail... <br> should be on flex side
              </div>
            </furo-vertical-scroller>
          </furo-split-view>
        </template>
      </furo-demo-snippet>

      <h2>Demo furo-split-view</h2>
      <p>Add the attribute reverse put the master on the other side</p>
      <furo-demo-snippet>
        <template>
          <furo-split-view reverse>
            <div slot="master" style="height: 100%; background-image: linear-gradient(blue, violet);">Master</div>
            <furo-vertical-scroller>
              <div style="height: 420px;background-image: linear-gradient(red, yellow);">
                Detail... <br> should be on flex side
              </div>
            </furo-vertical-scroller>
          </furo-split-view>
        </template>
      </furo-demo-snippet>


    `}}window.customElements.define("demo-furo-split-view",DemoFuroSplitView);// -- initialize application env, theme, api
_furoShell.Iconset.registerIconset("default",_furoShell.FuroBaseIcons);_furoShell.Iconset.registerIconset("av",_furoShell.AvIcons);_furoShell.Iconset.registerIconset("com",_furoShell.CommunicationIcons);_furoShell.Iconset.registerIconset("device",_furoShell.DeviceIcons);_furoShell.Iconset.registerIconset("editor",_furoShell.EditorIcons);_furoShell.Iconset.registerIconset("social",_furoShell.SocialIcons);_furoShell.Iconset.registerIconset("places",_furoShell.PlacesIcons);_furoShell.Iconset.registerIconset("notify",_furoShell.NotificationIcons);_furoShell.Iconset.registerIconset("map",_furoShell.MapsIcons);_furoShell.Iconset.registerIconset("hardware",_furoShell.HardwareIcons);_furoShell.Iconset.registerIconset("image",_furoShell.ImageIcons);class DemoFuroIcon extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo demo-furo-icon</h2>
      <p>Do not forgett to import the iconset</p>
      <furo-demo-snippet>
        <template>
          <furo-icon icon="mail"></furo-icon>
          <furo-icon icon="touch-app"></furo-icon>
          <furo-icon icon="av:airplay"></furo-icon>
          <furo-icon icon="com:contacts"></furo-icon>
          <furo-icon icon="device:bluetooth"></furo-icon>
          <furo-icon icon="editor:merge-type"></furo-icon>
          <furo-icon icon="hardware:phonelink"></furo-icon>
          <furo-icon icon="image:camera"></furo-icon>
          <furo-icon icon="maps:subway"></furo-icon>
          <furo-icon icon="notify:event-available"></furo-icon>
          <furo-icon icon="places:spa"></furo-icon>
          <furo-icon icon="social:public"></furo-icon>
        </template>
      </furo-demo-snippet>
      <h3>Import the needed icon sets somewhere in your init phase</h3>
      <pre>// -- initialize application env, theme, api

import {Init} from "@furo/framework/furo.js";
import {Iconset} from "@furo/framework/furo.js";
        
import {FuroBaseIcons} from "@furo/layout/iconsets/baseIcons";
Iconset.registerIconset("default", FuroBaseIcons);</pre>
    `}}window.customElements.define("demo-furo-icon",DemoFuroIcon);class DemoFuroIconList extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

        h2 {
            margin-top: 0;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Iconset baseIcons</h2>
      <p>
      <pre>
        import {FuroBaseIcons} from "@furo/layout/iconsets/baseIcons";
        Iconset.registerIconset("default", FuroBaseIcons);
      </pre></p>
      <div>
        <furo-icon-with-label icon="3d-rotation"></furo-icon-with-label>
        <furo-icon-with-label icon="accessibility"></furo-icon-with-label>
        <furo-icon-with-label icon="accessible"></furo-icon-with-label>
        <furo-icon-with-label icon="account-balance"></furo-icon-with-label>
        <furo-icon-with-label icon="account-balance-wallet"></furo-icon-with-label>
        <furo-icon-with-label icon="account-box"></furo-icon-with-label>
        <furo-icon-with-label icon="account-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="add"></furo-icon-with-label>
        <furo-icon-with-label icon="add-alert"></furo-icon-with-label>
        <furo-icon-with-label icon="add-box"></furo-icon-with-label>
        <furo-icon-with-label icon="add-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="add-circle-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="add-shopping-cart"></furo-icon-with-label>
        <furo-icon-with-label icon="alarm"></furo-icon-with-label>
        <furo-icon-with-label icon="alarm-add"></furo-icon-with-label>
        <furo-icon-with-label icon="alarm-off"></furo-icon-with-label>
        <furo-icon-with-label icon="alarm-on"></furo-icon-with-label>
        <furo-icon-with-label icon="all-out"></furo-icon-with-label>
        <furo-icon-with-label icon="android"></furo-icon-with-label>
        <furo-icon-with-label icon="announcement"></furo-icon-with-label>
        <furo-icon-with-label icon="apps"></furo-icon-with-label>
        <furo-icon-with-label icon="archive"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-back"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-downward"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-drop-down"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-drop-down-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-drop-up"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-forward"></furo-icon-with-label>
        <furo-icon-with-label icon="arrow-upward"></furo-icon-with-label>
        <furo-icon-with-label icon="aspect-ratio"></furo-icon-with-label>
        <furo-icon-with-label icon="assessment"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment-ind"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment-late"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment-return"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment-returned"></furo-icon-with-label>
        <furo-icon-with-label icon="assignment-turned-in"></furo-icon-with-label>
        <furo-icon-with-label icon="attachment"></furo-icon-with-label>
        <furo-icon-with-label icon="autorenew"></furo-icon-with-label>
        <furo-icon-with-label icon="backspace"></furo-icon-with-label>
        <furo-icon-with-label icon="backup"></furo-icon-with-label>
        <furo-icon-with-label icon="block"></furo-icon-with-label>
        <furo-icon-with-label icon="book"></furo-icon-with-label>
        <furo-icon-with-label icon="bookmark"></furo-icon-with-label>
        <furo-icon-with-label icon="bookmark-border"></furo-icon-with-label>
        <furo-icon-with-label icon="bug-report"></furo-icon-with-label>
        <furo-icon-with-label icon="build"></furo-icon-with-label>
        <furo-icon-with-label icon="cached"></furo-icon-with-label>
        <furo-icon-with-label icon="camera-enhance"></furo-icon-with-label>
        <furo-icon-with-label icon="cancel"></furo-icon-with-label>
        <furo-icon-with-label icon="card-giftcard"></furo-icon-with-label>
        <furo-icon-with-label icon="card-membership"></furo-icon-with-label>
        <furo-icon-with-label icon="card-travel"></furo-icon-with-label>
        <furo-icon-with-label icon="change-history"></furo-icon-with-label>
        <furo-icon-with-label icon="check"></furo-icon-with-label>
        <furo-icon-with-label icon="check-box"></furo-icon-with-label>
        <furo-icon-with-label icon="check-box-outline-blank"></furo-icon-with-label>
        <furo-icon-with-label icon="check-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="chevron-left"></furo-icon-with-label>
        <furo-icon-with-label icon="chevron-right"></furo-icon-with-label>
        <furo-icon-with-label icon="chrome-reader-mode"></furo-icon-with-label>
        <furo-icon-with-label icon="class"></furo-icon-with-label>
        <furo-icon-with-label icon="clear"></furo-icon-with-label>
        <furo-icon-with-label icon="close"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-done"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-download"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-off"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-queue"></furo-icon-with-label>
        <furo-icon-with-label icon="cloud-upload"></furo-icon-with-label>
        <furo-icon-with-label icon="code"></furo-icon-with-label>
        <furo-icon-with-label icon="compare-arrows"></furo-icon-with-label>
        <furo-icon-with-label icon="content-copy"></furo-icon-with-label>
        <furo-icon-with-label icon="content-cut"></furo-icon-with-label>
        <furo-icon-with-label icon="content-paste"></furo-icon-with-label>
        <furo-icon-with-label icon="copyright"></furo-icon-with-label>
        <furo-icon-with-label icon="create"></furo-icon-with-label>
        <furo-icon-with-label icon="create-new-folder"></furo-icon-with-label>
        <furo-icon-with-label icon="credit-card"></furo-icon-with-label>
        <furo-icon-with-label icon="dashboard"></furo-icon-with-label>
        <furo-icon-with-label icon="date-range"></furo-icon-with-label>
        <furo-icon-with-label icon="delete"></furo-icon-with-label>
        <furo-icon-with-label icon="delete-forever"></furo-icon-with-label>
        <furo-icon-with-label icon="delete-sweep"></furo-icon-with-label>
        <furo-icon-with-label icon="description"></furo-icon-with-label>
        <furo-icon-with-label icon="dns"></furo-icon-with-label>
        <furo-icon-with-label icon="done"></furo-icon-with-label>
        <furo-icon-with-label icon="done-all"></furo-icon-with-label>
        <furo-icon-with-label icon="donut-large"></furo-icon-with-label>
        <furo-icon-with-label icon="donut-small"></furo-icon-with-label>
        <furo-icon-with-label icon="drafts"></furo-icon-with-label>
        <furo-icon-with-label icon="eject"></furo-icon-with-label>
        <furo-icon-with-label icon="error"></furo-icon-with-label>
        <furo-icon-with-label icon="error-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="euro-symbol"></furo-icon-with-label>
        <furo-icon-with-label icon="event"></furo-icon-with-label>
        <furo-icon-with-label icon="event-seat"></furo-icon-with-label>
        <furo-icon-with-label icon="exit-to-app"></furo-icon-with-label>
        <furo-icon-with-label icon="expand-less"></furo-icon-with-label>
        <furo-icon-with-label icon="expand-more"></furo-icon-with-label>
        <furo-icon-with-label icon="explore"></furo-icon-with-label>
        <furo-icon-with-label icon="extension"></furo-icon-with-label>
        <furo-icon-with-label icon="face"></furo-icon-with-label>
        <furo-icon-with-label icon="favorite"></furo-icon-with-label>
        <furo-icon-with-label icon="favorite-border"></furo-icon-with-label>
        <furo-icon-with-label icon="feedback"></furo-icon-with-label>
        <furo-icon-with-label icon="file-download"></furo-icon-with-label>
        <furo-icon-with-label icon="file-upload"></furo-icon-with-label>
        <furo-icon-with-label icon="filter-list"></furo-icon-with-label>
        <furo-icon-with-label icon="find-in-page"></furo-icon-with-label>
        <furo-icon-with-label icon="find-replace"></furo-icon-with-label>
        <furo-icon-with-label icon="fingerprint"></furo-icon-with-label>
        <furo-icon-with-label icon="first-page"></furo-icon-with-label>
        <furo-icon-with-label icon="flag"></furo-icon-with-label>
        <furo-icon-with-label icon="flight-land"></furo-icon-with-label>
        <furo-icon-with-label icon="flight-takeoff"></furo-icon-with-label>
        <furo-icon-with-label icon="flip-to-back"></furo-icon-with-label>
        <furo-icon-with-label icon="flip-to-front"></furo-icon-with-label>
        <furo-icon-with-label icon="folder"></furo-icon-with-label>
        <furo-icon-with-label icon="folder-open"></furo-icon-with-label>
        <furo-icon-with-label icon="folder-shared"></furo-icon-with-label>
        <furo-icon-with-label icon="font-download"></furo-icon-with-label>
        <furo-icon-with-label icon="forward"></furo-icon-with-label>
        <furo-icon-with-label icon="fullscreen"></furo-icon-with-label>
        <furo-icon-with-label icon="fullscreen-exit"></furo-icon-with-label>
        <furo-icon-with-label icon="g-translate"></furo-icon-with-label>
        <furo-icon-with-label icon="gavel"></furo-icon-with-label>
        <furo-icon-with-label icon="gesture"></furo-icon-with-label>
        <furo-icon-with-label icon="get-app"></furo-icon-with-label>
        <furo-icon-with-label icon="gif"></furo-icon-with-label>
        <furo-icon-with-label icon="grade"></furo-icon-with-label>
        <furo-icon-with-label icon="group-work"></furo-icon-with-label>
        <furo-icon-with-label icon="help"></furo-icon-with-label>
        <furo-icon-with-label icon="help-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="highlight-off"></furo-icon-with-label>
        <furo-icon-with-label icon="history"></furo-icon-with-label>
        <furo-icon-with-label icon="home"></furo-icon-with-label>
        <furo-icon-with-label icon="hourglass-empty"></furo-icon-with-label>
        <furo-icon-with-label icon="hourglass-full"></furo-icon-with-label>
        <furo-icon-with-label icon="http"></furo-icon-with-label>
        <furo-icon-with-label icon="https"></furo-icon-with-label>
        <furo-icon-with-label icon="important-devices"></furo-icon-with-label>
        <furo-icon-with-label icon="inbox"></furo-icon-with-label>
        <furo-icon-with-label icon="indeterminate-check-box"></furo-icon-with-label>
        <furo-icon-with-label icon="info"></furo-icon-with-label>
        <furo-icon-with-label icon="info-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="input"></furo-icon-with-label>
        <furo-icon-with-label icon="invert-colors"></furo-icon-with-label>
        <furo-icon-with-label icon="label"></furo-icon-with-label>
        <furo-icon-with-label icon="label-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="language"></furo-icon-with-label>
        <furo-icon-with-label icon="last-page"></furo-icon-with-label>
        <furo-icon-with-label icon="launch"></furo-icon-with-label>
        <furo-icon-with-label icon="lightbulb-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="line-style"></furo-icon-with-label>
        <furo-icon-with-label icon="line-weight"></furo-icon-with-label>
        <furo-icon-with-label icon="link"></furo-icon-with-label>
        <furo-icon-with-label icon="list"></furo-icon-with-label>
        <furo-icon-with-label icon="lock"></furo-icon-with-label>
        <furo-icon-with-label icon="lock-open"></furo-icon-with-label>
        <furo-icon-with-label icon="lock-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="low-priority"></furo-icon-with-label>
        <furo-icon-with-label icon="loyalty"></furo-icon-with-label>
        <furo-icon-with-label icon="mail"></furo-icon-with-label>
        <furo-icon-with-label icon="markunread"></furo-icon-with-label>
        <furo-icon-with-label icon="markunread-mailbox"></furo-icon-with-label>
        <furo-icon-with-label icon="menu"></furo-icon-with-label>
        <furo-icon-with-label icon="more-horiz"></furo-icon-with-label>
        <furo-icon-with-label icon="more-vert"></furo-icon-with-label>
        <furo-icon-with-label icon="motorcycle"></furo-icon-with-label>
        <furo-icon-with-label icon="move-to-inbox"></furo-icon-with-label>
        <furo-icon-with-label icon="next-week"></furo-icon-with-label>
        <furo-icon-with-label icon="note-add"></furo-icon-with-label>
        <furo-icon-with-label icon="offline-pin"></furo-icon-with-label>
        <furo-icon-with-label icon="opacity"></furo-icon-with-label>
        <furo-icon-with-label icon="open-in-browser"></furo-icon-with-label>
        <furo-icon-with-label icon="open-in-new"></furo-icon-with-label>
        <furo-icon-with-label icon="open-with"></furo-icon-with-label>
        <furo-icon-with-label icon="pageview"></furo-icon-with-label>
        <furo-icon-with-label icon="pan-tool"></furo-icon-with-label>
        <furo-icon-with-label icon="payment"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-camera-mic"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-contact-calendar"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-data-setting"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-device-information"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-identity"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-media"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-phone-msg"></furo-icon-with-label>
        <furo-icon-with-label icon="perm-scan-wifi"></furo-icon-with-label>
        <furo-icon-with-label icon="pets"></furo-icon-with-label>
        <furo-icon-with-label icon="picture-in-picture"></furo-icon-with-label>
        <furo-icon-with-label icon="picture-in-picture-alt"></furo-icon-with-label>
        <furo-icon-with-label icon="play-for-work"></furo-icon-with-label>
        <furo-icon-with-label icon="polymer"></furo-icon-with-label>
        <furo-icon-with-label icon="power-settings-new"></furo-icon-with-label>
        <furo-icon-with-label icon="pregnant-woman"></furo-icon-with-label>
        <furo-icon-with-label icon="print"></furo-icon-with-label>
        <furo-icon-with-label icon="query-builder"></furo-icon-with-label>
        <furo-icon-with-label icon="question-answer"></furo-icon-with-label>
        <furo-icon-with-label icon="radio-button-checked"></furo-icon-with-label>
        <furo-icon-with-label icon="radio-button-unchecked"></furo-icon-with-label>
        <furo-icon-with-label icon="receipt"></furo-icon-with-label>
        <furo-icon-with-label icon="record-voice-over"></furo-icon-with-label>
        <furo-icon-with-label icon="redeem"></furo-icon-with-label>
        <furo-icon-with-label icon="redo"></furo-icon-with-label>
        <furo-icon-with-label icon="refresh"></furo-icon-with-label>
        <furo-icon-with-label icon="remove"></furo-icon-with-label>
        <furo-icon-with-label icon="remove-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="remove-circle-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="remove-shopping-cart"></furo-icon-with-label>
        <furo-icon-with-label icon="reorder"></furo-icon-with-label>
        <furo-icon-with-label icon="reply"></furo-icon-with-label>
        <furo-icon-with-label icon="reply-all"></furo-icon-with-label>
        <furo-icon-with-label icon="report"></furo-icon-with-label>
        <furo-icon-with-label icon="report-problem"></furo-icon-with-label>
        <furo-icon-with-label icon="restore"></furo-icon-with-label>
        <furo-icon-with-label icon="restore-page"></furo-icon-with-label>
        <furo-icon-with-label icon="room"></furo-icon-with-label>
        <furo-icon-with-label icon="rounded-corner"></furo-icon-with-label>
        <furo-icon-with-label icon="rowing"></furo-icon-with-label>
        <furo-icon-with-label icon="save"></furo-icon-with-label>
        <furo-icon-with-label icon="schedule"></furo-icon-with-label>
        <furo-icon-with-label icon="search"></furo-icon-with-label>
        <furo-icon-with-label icon="select-all"></furo-icon-with-label>
        <furo-icon-with-label icon="send"></furo-icon-with-label>
        <furo-icon-with-label icon="settings"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-applications"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-backup-restore"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-bluetooth"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-brightness"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-cell"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-ethernet"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-input-antenna"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-input-component"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-input-composite"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-input-hdmi"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-input-svideo"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-overscan"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-phone"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-power"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-remote"></furo-icon-with-label>
        <furo-icon-with-label icon="settings-voice"></furo-icon-with-label>
        <furo-icon-with-label icon="shop"></furo-icon-with-label>
        <furo-icon-with-label icon="shop-two"></furo-icon-with-label>
        <furo-icon-with-label icon="shopping-basket"></furo-icon-with-label>
        <furo-icon-with-label icon="shopping-cart"></furo-icon-with-label>
        <furo-icon-with-label icon="sort"></furo-icon-with-label>
        <furo-icon-with-label icon="speaker-notes"></furo-icon-with-label>
        <furo-icon-with-label icon="speaker-notes-off"></furo-icon-with-label>
        <furo-icon-with-label icon="spellcheck"></furo-icon-with-label>
        <furo-icon-with-label icon="star"></furo-icon-with-label>
        <furo-icon-with-label icon="star-border"></furo-icon-with-label>
        <furo-icon-with-label icon="star-half"></furo-icon-with-label>
        <furo-icon-with-label icon="stars"></furo-icon-with-label>
        <furo-icon-with-label icon="store"></furo-icon-with-label>
        <furo-icon-with-label icon="subdirectory-arrow-left"></furo-icon-with-label>
        <furo-icon-with-label icon="subdirectory-arrow-right"></furo-icon-with-label>
        <furo-icon-with-label icon="subject"></furo-icon-with-label>
        <furo-icon-with-label icon="supervisor-account"></furo-icon-with-label>
        <furo-icon-with-label icon="swap-horiz"></furo-icon-with-label>
        <furo-icon-with-label icon="swap-vert"></furo-icon-with-label>
        <furo-icon-with-label icon="swap-vertical-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="system-update-alt"></furo-icon-with-label>
        <furo-icon-with-label icon="tab"></furo-icon-with-label>
        <furo-icon-with-label icon="tab-unselected"></furo-icon-with-label>
        <furo-icon-with-label icon="text-format"></furo-icon-with-label>
        <furo-icon-with-label icon="theaters"></furo-icon-with-label>
        <furo-icon-with-label icon="thumb-down"></furo-icon-with-label>
        <furo-icon-with-label icon="thumb-up"></furo-icon-with-label>
        <furo-icon-with-label icon="thumbs-up-down"></furo-icon-with-label>
        <furo-icon-with-label icon="timeline"></furo-icon-with-label>
        <furo-icon-with-label icon="toc"></furo-icon-with-label>
        <furo-icon-with-label icon="today"></furo-icon-with-label>
        <furo-icon-with-label icon="toll"></furo-icon-with-label>
        <furo-icon-with-label icon="touch-app"></furo-icon-with-label>
        <furo-icon-with-label icon="track-changes"></furo-icon-with-label>
        <furo-icon-with-label icon="translate"></furo-icon-with-label>
        <furo-icon-with-label icon="trending-down"></furo-icon-with-label>
        <furo-icon-with-label icon="trending-flat"></furo-icon-with-label>
        <furo-icon-with-label icon="trending-up"></furo-icon-with-label>
        <furo-icon-with-label icon="turned-in"></furo-icon-with-label>
        <furo-icon-with-label icon="turned-in-not"></furo-icon-with-label>
        <furo-icon-with-label icon="unarchive"></furo-icon-with-label>
        <furo-icon-with-label icon="undo"></furo-icon-with-label>
        <furo-icon-with-label icon="unfold-less"></furo-icon-with-label>
        <furo-icon-with-label icon="unfold-more"></furo-icon-with-label>
        <furo-icon-with-label icon="update"></furo-icon-with-label>
        <furo-icon-with-label icon="verified-user"></furo-icon-with-label>
        <furo-icon-with-label icon="view-agenda"></furo-icon-with-label>
        <furo-icon-with-label icon="view-array"></furo-icon-with-label>
        <furo-icon-with-label icon="view-carousel"></furo-icon-with-label>
        <furo-icon-with-label icon="view-column"></furo-icon-with-label>
        <furo-icon-with-label icon="view-day"></furo-icon-with-label>
        <furo-icon-with-label icon="view-headline"></furo-icon-with-label>
        <furo-icon-with-label icon="view-list"></furo-icon-with-label>
        <furo-icon-with-label icon="view-module"></furo-icon-with-label>
        <furo-icon-with-label icon="view-quilt"></furo-icon-with-label>
        <furo-icon-with-label icon="view-stream"></furo-icon-with-label>
        <furo-icon-with-label icon="view-week"></furo-icon-with-label>
        <furo-icon-with-label icon="visibility"></furo-icon-with-label>
        <furo-icon-with-label icon="visibility-off"></furo-icon-with-label>
        <furo-icon-with-label icon="warning"></furo-icon-with-label>
        <furo-icon-with-label icon="watch-later"></furo-icon-with-label>
        <furo-icon-with-label icon="weekend"></furo-icon-with-label>
        <furo-icon-with-label icon="work"></furo-icon-with-label>
        <furo-icon-with-label icon="youtube-searched-for"></furo-icon-with-label>
        <furo-icon-with-label icon="zoom-in"></furo-icon-with-label>
        <furo-icon-with-label icon="zoom-out"></furo-icon-with-label>
      </div>


      <h2>Iconset avIcons</h2>
      <p>
      <pre>
        import {AvIcons} from "@furo/layout/iconsets/avIcons";
        Iconset.registerIconset("av", AvIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="av:add-to-queue"></furo-icon-with-label>
        <furo-icon-with-label icon="av:airplay"></furo-icon-with-label>
        <furo-icon-with-label icon="av:album"></furo-icon-with-label>
        <furo-icon-with-label icon="av:art-track"></furo-icon-with-label>
        <furo-icon-with-label icon="av:av-timer"></furo-icon-with-label>
        <furo-icon-with-label icon="av:branding-watermark"></furo-icon-with-label>
        <furo-icon-with-label icon="av:call-to-action"></furo-icon-with-label>
        <furo-icon-with-label icon="av:closed-caption"></furo-icon-with-label>
        <furo-icon-with-label icon="av:equalizer"></furo-icon-with-label>
        <furo-icon-with-label icon="av:explicit"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fast-forward"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fast-rewind"></furo-icon-with-label>
        <furo-icon-with-label icon="av:featured-play-list"></furo-icon-with-label>
        <furo-icon-with-label icon="av:featured-video"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fiber-dvr"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fiber-manual-record"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fiber-new"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fiber-pin"></furo-icon-with-label>
        <furo-icon-with-label icon="av:fiber-smart-record"></furo-icon-with-label>
        <furo-icon-with-label icon="av:forward-10"></furo-icon-with-label>
        <furo-icon-with-label icon="av:forward-30"></furo-icon-with-label>
        <furo-icon-with-label icon="av:forward-5"></furo-icon-with-label>
        <furo-icon-with-label icon="av:games"></furo-icon-with-label>
        <furo-icon-with-label icon="av:hd"></furo-icon-with-label>
        <furo-icon-with-label icon="av:hearing"></furo-icon-with-label>
        <furo-icon-with-label icon="av:high-quality"></furo-icon-with-label>
        <furo-icon-with-label icon="av:library-add"></furo-icon-with-label>
        <furo-icon-with-label icon="av:library-books"></furo-icon-with-label>
        <furo-icon-with-label icon="av:library-music"></furo-icon-with-label>
        <furo-icon-with-label icon="av:loop"></furo-icon-with-label>
        <furo-icon-with-label icon="av:mic"></furo-icon-with-label>
        <furo-icon-with-label icon="av:mic-none"></furo-icon-with-label>
        <furo-icon-with-label icon="av:mic-off"></furo-icon-with-label>
        <furo-icon-with-label icon="av:movie"></furo-icon-with-label>
        <furo-icon-with-label icon="av:music-video"></furo-icon-with-label>
        <furo-icon-with-label icon="av:new-releases"></furo-icon-with-label>
        <furo-icon-with-label icon="av:not-interested"></furo-icon-with-label>
        <furo-icon-with-label icon="av:note"></furo-icon-with-label>
        <furo-icon-with-label icon="av:pause"></furo-icon-with-label>
        <furo-icon-with-label icon="av:pause-circle-filled"></furo-icon-with-label>
        <furo-icon-with-label icon="av:pause-circle-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="av:play-arrow"></furo-icon-with-label>
        <furo-icon-with-label icon="av:play-circle-filled"></furo-icon-with-label>
        <furo-icon-with-label icon="av:play-circle-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="av:playlist-add"></furo-icon-with-label>
        <furo-icon-with-label icon="av:playlist-add-check"></furo-icon-with-label>
        <furo-icon-with-label icon="av:playlist-play"></furo-icon-with-label>
        <furo-icon-with-label icon="av:queue"></furo-icon-with-label>
        <furo-icon-with-label icon="av:queue-music"></furo-icon-with-label>
        <furo-icon-with-label icon="av:queue-play-next"></furo-icon-with-label>
        <furo-icon-with-label icon="av:radio"></furo-icon-with-label>
        <furo-icon-with-label icon="av:recent-actors"></furo-icon-with-label>
        <furo-icon-with-label icon="av:remove-from-queue"></furo-icon-with-label>
        <furo-icon-with-label icon="av:repeat"></furo-icon-with-label>
        <furo-icon-with-label icon="av:repeat-one"></furo-icon-with-label>
        <furo-icon-with-label icon="av:replay"></furo-icon-with-label>
        <furo-icon-with-label icon="av:replay-10"></furo-icon-with-label>
        <furo-icon-with-label icon="av:replay-30"></furo-icon-with-label>
        <furo-icon-with-label icon="av:replay-5"></furo-icon-with-label>
        <furo-icon-with-label icon="av:shuffle"></furo-icon-with-label>
        <furo-icon-with-label icon="av:skip-next"></furo-icon-with-label>
        <furo-icon-with-label icon="av:skip-previous"></furo-icon-with-label>
        <furo-icon-with-label icon="av:slow-motion-video"></furo-icon-with-label>
        <furo-icon-with-label icon="av:snooze"></furo-icon-with-label>
        <furo-icon-with-label icon="av:sort-by-alpha"></furo-icon-with-label>
        <furo-icon-with-label icon="av:stop"></furo-icon-with-label>
        <furo-icon-with-label icon="av:subscriptions"></furo-icon-with-label>
        <furo-icon-with-label icon="av:subtitles"></furo-icon-with-label>
        <furo-icon-with-label icon="av:surround-sound"></furo-icon-with-label>
        <furo-icon-with-label icon="av:video-call"></furo-icon-with-label>
        <furo-icon-with-label icon="av:video-label"></furo-icon-with-label>
        <furo-icon-with-label icon="av:video-library"></furo-icon-with-label>
        <furo-icon-with-label icon="av:videocam"></furo-icon-with-label>
        <furo-icon-with-label icon="av:videocam-off"></furo-icon-with-label>
        <furo-icon-with-label icon="av:volume-down"></furo-icon-with-label>
        <furo-icon-with-label icon="av:volume-mute"></furo-icon-with-label>
        <furo-icon-with-label icon="av:volume-off"></furo-icon-with-label>
        <furo-icon-with-label icon="av:volume-up"></furo-icon-with-label>
        <furo-icon-with-label icon="av:web"></furo-icon-with-label>
        <furo-icon-with-label icon="av:web-asset"></furo-icon-with-label>
      </div>
      
      
      
      <h2>Iconset communicationIcons</h2>
      <p>
      <pre>
        import {CommunicationIcons} from "@furo/layout/iconsets/communicationIcons";
        Iconset.registerIconset("communication", CommunicationIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="communication:business"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-end"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-made"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-merge"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-missed"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-missed-outgoing"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-received"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:call-split"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:chat"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:chat-bubble"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:chat-bubble-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:clear-all"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:comment"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:contact-mail"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:contact-phone"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:contacts"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:dialer-sip"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:dialpad"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:email"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:forum"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:import-contacts"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:import-export"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:invert-colors-off"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:live-help"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:location-off"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:location-on"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:mail-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:message"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:no-sim"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:phone"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:phonelink-erase"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:phonelink-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:phonelink-ring"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:phonelink-setup"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:portable-wifi-off"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:present-to-all"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:ring-volume"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:rss-feed"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:screen-share"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:speaker-phone"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:stay-current-landscape"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:stay-current-portrait"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:stay-primary-landscape"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:stay-primary-portrait"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:stop-screen-share"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:swap-calls"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:textsms"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:voicemail"></furo-icon-with-label>
        <furo-icon-with-label icon="communication:vpn-key"></furo-icon-with-label>
      </div>
     
      <h2>Iconset deviceIcons</h2>
      <p>
      <pre>
        import {DeviceIcons} from "@furo/layout/iconsets/deviceIcons";
        Iconset.registerIconset("device", DeviceIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="device:access-alarm"></furo-icon-with-label>
        <furo-icon-with-label icon="device:access-alarms"></furo-icon-with-label>
        <furo-icon-with-label icon="device:access-time"></furo-icon-with-label>
        <furo-icon-with-label icon="device:add-alarm"></furo-icon-with-label>
        <furo-icon-with-label icon="device:airplanemode-active"></furo-icon-with-label>
        <furo-icon-with-label icon="device:airplanemode-inactive"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-20"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-30"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-50"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-60"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-80"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-90"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-alert"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-20"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-30"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-50"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-60"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-80"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-90"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-charging-full"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-full"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-std"></furo-icon-with-label>
        <furo-icon-with-label icon="device:battery-unknown"></furo-icon-with-label>
        <furo-icon-with-label icon="device:bluetooth"></furo-icon-with-label>
        <furo-icon-with-label icon="device:bluetooth-connected"></furo-icon-with-label>
        <furo-icon-with-label icon="device:bluetooth-disabled"></furo-icon-with-label>
        <furo-icon-with-label icon="device:bluetooth-searching"></furo-icon-with-label>
        <furo-icon-with-label icon="device:brightness-auto"></furo-icon-with-label>
        <furo-icon-with-label icon="device:brightness-high"></furo-icon-with-label>
        <furo-icon-with-label icon="device:brightness-low"></furo-icon-with-label>
        <furo-icon-with-label icon="device:brightness-medium"></furo-icon-with-label>
        <furo-icon-with-label icon="device:data-usage"></furo-icon-with-label>
        <furo-icon-with-label icon="device:developer-mode"></furo-icon-with-label>
        <furo-icon-with-label icon="device:devices"></furo-icon-with-label>
        <furo-icon-with-label icon="device:dvr"></furo-icon-with-label>
        <furo-icon-with-label icon="device:gps-fixed"></furo-icon-with-label>
        <furo-icon-with-label icon="device:gps-not-fixed"></furo-icon-with-label>
        <furo-icon-with-label icon="device:gps-off"></furo-icon-with-label>
        <furo-icon-with-label icon="device:graphic-eq"></furo-icon-with-label>
        <furo-icon-with-label icon="device:location-disabled"></furo-icon-with-label>
        <furo-icon-with-label icon="device:location-searching"></furo-icon-with-label>
        <furo-icon-with-label icon="device:network-cell"></furo-icon-with-label>
        <furo-icon-with-label icon="device:network-wifi"></furo-icon-with-label>
        <furo-icon-with-label icon="device:nfc"></furo-icon-with-label>
        <furo-icon-with-label icon="device:screen-lock-landscape"></furo-icon-with-label>
        <furo-icon-with-label icon="device:screen-lock-portrait"></furo-icon-with-label>
        <furo-icon-with-label icon="device:screen-lock-rotation"></furo-icon-with-label>
        <furo-icon-with-label icon="device:screen-rotation"></furo-icon-with-label>
        <furo-icon-with-label icon="device:sd-storage"></furo-icon-with-label>
        <furo-icon-with-label icon="device:settings-system-daydream"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-0-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-1-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-2-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-3-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-4-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-connected-no-internet-0-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-connected-no-internet-1-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-connected-no-internet-2-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-connected-no-internet-3-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-connected-no-internet-4-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-no-sim"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-null"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-cellular-off"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-0-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-1-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-1-bar-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-2-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-2-bar-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-3-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-3-bar-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-4-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-4-bar-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="device:signal-wifi-off"></furo-icon-with-label>
        <furo-icon-with-label icon="device:storage"></furo-icon-with-label>
        <furo-icon-with-label icon="device:usb"></furo-icon-with-label>
        <furo-icon-with-label icon="device:wallpaper"></furo-icon-with-label>
        <furo-icon-with-label icon="device:widgets"></furo-icon-with-label>
        <furo-icon-with-label icon="device:wifi-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="device:wifi-tethering"></furo-icon-with-label>
      </div>
     
      <h2>Iconset editorIcons</h2>
      <p>
      <pre>
        import {EditorIcons} from "@furo/layout/iconsets/editorIcons";
        Iconset.registerIconset("editor", EditorIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="editor:attach-file"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:attach-money"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-all"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-bottom"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-clear"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-color"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-horizontal"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-inner"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-left"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-outer"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-right"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-style"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-top"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:border-vertical"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:bubble-chart"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:drag-handle"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-align-center"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-align-justify"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-align-left"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-align-right"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-bold"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-clear"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-color-fill"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-color-reset"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-color-text"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-indent-decrease"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-indent-increase"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-italic"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-line-spacing"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-list-bulleted"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-list-numbered"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-paint"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-quote"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-shapes"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-size"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-strikethrough"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-textdirection-l-to-r"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-textdirection-r-to-l"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:format-underlined"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:functions"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:highlight"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-chart"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-comment"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-drive-file"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-emoticon"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-invitation"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-link"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:insert-photo"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:linear-scale"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:merge-type"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:mode-comment"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:mode-edit"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:monetization-on"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:money-off"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:multiline-chart"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:pie-chart"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:pie-chart-outlined"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:publish"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:short-text"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:show-chart"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:space-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:strikethrough-s"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:text-fields"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:title"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:vertical-align-bottom"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:vertical-align-center"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:vertical-align-top"></furo-icon-with-label>
        <furo-icon-with-label icon="editor:wrap-text"></furo-icon-with-label>
      </div>
     
      <h2>Iconset hardwareIcons</h2>
      <p>
      <pre>
        import {HardwareIcons} from "@furo/layout/iconsets/hardwareIcons";
        Iconset.registerIconset("hardware", HardwareIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="hardware:cast"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:cast-connected"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:computer"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:desktop-mac"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:desktop-windows"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:developer-board"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:device-hub"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:devices-other"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:dock"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:gamepad"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:headset"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:headset-mic"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-arrow-down"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-arrow-left"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-arrow-right"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-arrow-up"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-backspace"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-capslock"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-hide"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-return"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-tab"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:keyboard-voice"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:laptop"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:laptop-chromebook"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:laptop-mac"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:laptop-windows"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:memory"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:mouse"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:phone-android"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:phone-iphone"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:phonelink"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:phonelink-off"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:power-input"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:router"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:scanner"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:security"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:sim-card"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:smartphone"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:speaker"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:speaker-group"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:tablet"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:tablet-android"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:tablet-mac"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:toys"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:tv"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:videogame-asset"></furo-icon-with-label>
        <furo-icon-with-label icon="hardware:watch"></furo-icon-with-label>
      </div>
          
      <h2>Iconset imageIcons</h2>
      <p>
      <pre>
        import {ImageIcons} from "@furo/layout/iconsets/imageIcons";
        Iconset.registerIconset("image", ImageIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="image:add-a-photo"></furo-icon-with-label>
        <furo-icon-with-label icon="image:add-to-photos"></furo-icon-with-label>
        <furo-icon-with-label icon="image:adjust"></furo-icon-with-label>
        <furo-icon-with-label icon="image:assistant"></furo-icon-with-label>
        <furo-icon-with-label icon="image:assistant-photo"></furo-icon-with-label>
        <furo-icon-with-label icon="image:audiotrack"></furo-icon-with-label>
        <furo-icon-with-label icon="image:blur-circular"></furo-icon-with-label>
        <furo-icon-with-label icon="image:blur-linear"></furo-icon-with-label>
        <furo-icon-with-label icon="image:blur-off"></furo-icon-with-label>
        <furo-icon-with-label icon="image:blur-on"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-1"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-2"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-3"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-4"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-5"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-6"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brightness-7"></furo-icon-with-label>
        <furo-icon-with-label icon="image:broken-image"></furo-icon-with-label>
        <furo-icon-with-label icon="image:brush"></furo-icon-with-label>
        <furo-icon-with-label icon="image:burst-mode"></furo-icon-with-label>
        <furo-icon-with-label icon="image:camera"></furo-icon-with-label>
        <furo-icon-with-label icon="image:camera-alt"></furo-icon-with-label>
        <furo-icon-with-label icon="image:camera-front"></furo-icon-with-label>
        <furo-icon-with-label icon="image:camera-rear"></furo-icon-with-label>
        <furo-icon-with-label icon="image:camera-roll"></furo-icon-with-label>
        <furo-icon-with-label icon="image:center-focus-strong"></furo-icon-with-label>
        <furo-icon-with-label icon="image:center-focus-weak"></furo-icon-with-label>
        <furo-icon-with-label icon="image:collections"></furo-icon-with-label>
        <furo-icon-with-label icon="image:collections-bookmark"></furo-icon-with-label>
        <furo-icon-with-label icon="image:color-lens"></furo-icon-with-label>
        <furo-icon-with-label icon="image:colorize"></furo-icon-with-label>
        <furo-icon-with-label icon="image:compare"></furo-icon-with-label>
        <furo-icon-with-label icon="image:control-point"></furo-icon-with-label>
        <furo-icon-with-label icon="image:control-point-duplicate"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-16-9"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-3-2"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-5-4"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-7-5"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-din"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-free"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-landscape"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-original"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-portrait"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-rotate"></furo-icon-with-label>
        <furo-icon-with-label icon="image:crop-square"></furo-icon-with-label>
        <furo-icon-with-label icon="image:dehaze"></furo-icon-with-label>
        <furo-icon-with-label icon="image:details"></furo-icon-with-label>
        <furo-icon-with-label icon="image:edit"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure-neg-1"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure-neg-2"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure-plus-1"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure-plus-2"></furo-icon-with-label>
        <furo-icon-with-label icon="image:exposure-zero"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-1"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-2"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-3"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-4"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-5"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-6"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-7"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-8"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-9"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-9-plus"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-b-and-w"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-center-focus"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-drama"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-frames"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-hdr"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-none"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-tilt-shift"></furo-icon-with-label>
        <furo-icon-with-label icon="image:filter-vintage"></furo-icon-with-label>
        <furo-icon-with-label icon="image:flare"></furo-icon-with-label>
        <furo-icon-with-label icon="image:flash-auto"></furo-icon-with-label>
        <furo-icon-with-label icon="image:flash-off"></furo-icon-with-label>
        <furo-icon-with-label icon="image:flash-on"></furo-icon-with-label>
        <furo-icon-with-label icon="image:flip"></furo-icon-with-label>
        <furo-icon-with-label icon="image:gradient"></furo-icon-with-label>
        <furo-icon-with-label icon="image:grain"></furo-icon-with-label>
        <furo-icon-with-label icon="image:grid-off"></furo-icon-with-label>
        <furo-icon-with-label icon="image:grid-on"></furo-icon-with-label>
        <furo-icon-with-label icon="image:hdr-off"></furo-icon-with-label>
        <furo-icon-with-label icon="image:hdr-on"></furo-icon-with-label>
        <furo-icon-with-label icon="image:hdr-strong"></furo-icon-with-label>
        <furo-icon-with-label icon="image:hdr-weak"></furo-icon-with-label>
        <furo-icon-with-label icon="image:healing"></furo-icon-with-label>
        <furo-icon-with-label icon="image:image"></furo-icon-with-label>
        <furo-icon-with-label icon="image:image-aspect-ratio"></furo-icon-with-label>
        <furo-icon-with-label icon="image:iso"></furo-icon-with-label>
        <furo-icon-with-label icon="image:landscape"></furo-icon-with-label>
        <furo-icon-with-label icon="image:leak-add"></furo-icon-with-label>
        <furo-icon-with-label icon="image:leak-remove"></furo-icon-with-label>
        <furo-icon-with-label icon="image:lens"></furo-icon-with-label>
        <furo-icon-with-label icon="image:linked-camera"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-3"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-4"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-5"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-6"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-one"></furo-icon-with-label>
        <furo-icon-with-label icon="image:looks-two"></furo-icon-with-label>
        <furo-icon-with-label icon="image:loupe"></furo-icon-with-label>
        <furo-icon-with-label icon="image:monochrome-photos"></furo-icon-with-label>
        <furo-icon-with-label icon="image:movie-creation"></furo-icon-with-label>
        <furo-icon-with-label icon="image:movie-filter"></furo-icon-with-label>
        <furo-icon-with-label icon="image:music-note"></furo-icon-with-label>
        <furo-icon-with-label icon="image:nature"></furo-icon-with-label>
        <furo-icon-with-label icon="image:nature-people"></furo-icon-with-label>
        <furo-icon-with-label icon="image:navigate-before"></furo-icon-with-label>
        <furo-icon-with-label icon="image:navigate-next"></furo-icon-with-label>
        <furo-icon-with-label icon="image:palette"></furo-icon-with-label>
        <furo-icon-with-label icon="image:panorama"></furo-icon-with-label>
        <furo-icon-with-label icon="image:panorama-fish-eye"></furo-icon-with-label>
        <furo-icon-with-label icon="image:panorama-horizontal"></furo-icon-with-label>
        <furo-icon-with-label icon="image:panorama-vertical"></furo-icon-with-label>
        <furo-icon-with-label icon="image:panorama-wide-angle"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-album"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-camera"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-filter"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-library"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-size-select-actual"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-size-select-large"></furo-icon-with-label>
        <furo-icon-with-label icon="image:photo-size-select-small"></furo-icon-with-label>
        <furo-icon-with-label icon="image:picture-as-pdf"></furo-icon-with-label>
        <furo-icon-with-label icon="image:portrait"></furo-icon-with-label>
        <furo-icon-with-label icon="image:remove-red-eye"></furo-icon-with-label>
        <furo-icon-with-label icon="image:rotate-90-degrees-ccw"></furo-icon-with-label>
        <furo-icon-with-label icon="image:rotate-left"></furo-icon-with-label>
        <furo-icon-with-label icon="image:rotate-right"></furo-icon-with-label>
        <furo-icon-with-label icon="image:slideshow"></furo-icon-with-label>
        <furo-icon-with-label icon="image:straighten"></furo-icon-with-label>
        <furo-icon-with-label icon="image:style"></furo-icon-with-label>
        <furo-icon-with-label icon="image:switch-camera"></furo-icon-with-label>
        <furo-icon-with-label icon="image:switch-video"></furo-icon-with-label>
        <furo-icon-with-label icon="image:tag-faces"></furo-icon-with-label>
        <furo-icon-with-label icon="image:texture"></furo-icon-with-label>
        <furo-icon-with-label icon="image:timelapse"></furo-icon-with-label>
        <furo-icon-with-label icon="image:timer"></furo-icon-with-label>
        <furo-icon-with-label icon="image:timer-10"></furo-icon-with-label>
        <furo-icon-with-label icon="image:timer-3"></furo-icon-with-label>
        <furo-icon-with-label icon="image:timer-off"></furo-icon-with-label>
        <furo-icon-with-label icon="image:tonality"></furo-icon-with-label>
        <furo-icon-with-label icon="image:transform"></furo-icon-with-label>
        <furo-icon-with-label icon="image:tune"></furo-icon-with-label>
        <furo-icon-with-label icon="image:view-comfy"></furo-icon-with-label>
        <furo-icon-with-label icon="image:view-compact"></furo-icon-with-label>
        <furo-icon-with-label icon="image:vignette"></furo-icon-with-label>
        <furo-icon-with-label icon="image:wb-auto"></furo-icon-with-label>
        <furo-icon-with-label icon="image:wb-cloudy"></furo-icon-with-label>
        <furo-icon-with-label icon="image:wb-incandescent"></furo-icon-with-label>
        <furo-icon-with-label icon="image:wb-iridescent"></furo-icon-with-label>
        <furo-icon-with-label icon="image:wb-sunny"></furo-icon-with-label>
      </div>
           
      <h2>Iconset mapsIcons</h2>
      <p>
      <pre>
        import {MapsIcons} from "@furo/layout/iconsets/mapsIcons";
        Iconset.registerIconset("maps", MapsIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="map:add-location"></furo-icon-with-label>
        <furo-icon-with-label icon="map:beenhere"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-bike"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-boat"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-bus"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-car"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-railway"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-run"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-subway"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-transit"></furo-icon-with-label>
        <furo-icon-with-label icon="map:directions-walk"></furo-icon-with-label>
        <furo-icon-with-label icon="map:edit-location"></furo-icon-with-label>
        <furo-icon-with-label icon="map:ev-station"></furo-icon-with-label>
        <furo-icon-with-label icon="map:flight"></furo-icon-with-label>
        <furo-icon-with-label icon="map:hotel"></furo-icon-with-label>
        <furo-icon-with-label icon="map:layers"></furo-icon-with-label>
        <furo-icon-with-label icon="map:layers-clear"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-activity"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-airport"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-atm"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-bar"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-cafe"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-car-wash"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-convenience-store"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-dining"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-drink"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-florist"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-gas-station"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-grocery-store"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-hospital"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-hotel"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-laundry-service"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-library"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-mall"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-movies"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-offer"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-parking"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-pharmacy"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-phone"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-pizza"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-play"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-post-office"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-printshop"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-see"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-shipping"></furo-icon-with-label>
        <furo-icon-with-label icon="map:local-taxi"></furo-icon-with-label>
        <furo-icon-with-label icon="map:map"></furo-icon-with-label>
        <furo-icon-with-label icon="map:my-location"></furo-icon-with-label>
        <furo-icon-with-label icon="map:navigation"></furo-icon-with-label>
        <furo-icon-with-label icon="map:near-me"></furo-icon-with-label>
        <furo-icon-with-label icon="map:person-pin"></furo-icon-with-label>
        <furo-icon-with-label icon="map:person-pin-circle"></furo-icon-with-label>
        <furo-icon-with-label icon="map:pin-drop"></furo-icon-with-label>
        <furo-icon-with-label icon="map:place"></furo-icon-with-label>
        <furo-icon-with-label icon="map:rate-review"></furo-icon-with-label>
        <furo-icon-with-label icon="map:restaurant"></furo-icon-with-label>
        <furo-icon-with-label icon="map:restaurant-menu"></furo-icon-with-label>
        <furo-icon-with-label icon="map:satellite"></furo-icon-with-label>
        <furo-icon-with-label icon="map:store-mall-directory"></furo-icon-with-label>
        <furo-icon-with-label icon="map:streetview"></furo-icon-with-label>
        <furo-icon-with-label icon="map:subway"></furo-icon-with-label>
        <furo-icon-with-label icon="map:terrain"></furo-icon-with-label>
        <furo-icon-with-label icon="map:traffic"></furo-icon-with-label>
        <furo-icon-with-label icon="map:train"></furo-icon-with-label>
        <furo-icon-with-label icon="map:tram"></furo-icon-with-label>
        <furo-icon-with-label icon="map:transfer-within-a-station"></furo-icon-with-label>
        <furo-icon-with-label icon="map:zoom-out-map"></furo-icon-with-label>
      </div>
            
      <h2>Iconset notificationIcons</h2>
      <p>
      <pre>
        import {NotificationIcons} from "@furo/layout/iconsets/notificationIcons";
        Iconset.registerIconset("notification", NotificationIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="notification:adb"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-flat"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-flat-angled"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-individual-suite"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-legroom-extra"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-legroom-normal"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-legroom-reduced"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-recline-extra"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:airline-seat-recline-normal"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:bluetooth-audio"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:confirmation-number"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:disc-full"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:do-not-disturb"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:do-not-disturb-alt"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:do-not-disturb-off"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:do-not-disturb-on"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:drive-eta"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:enhanced-encryption"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:event-available"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:event-busy"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:event-note"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:folder-special"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:live-tv"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:mms"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:more"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:network-check"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:network-locked"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:no-encryption"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:ondemand-video"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:personal-video"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-bluetooth-speaker"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-forwarded"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-in-talk"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-locked"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-missed"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:phone-paused"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:power"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:priority-high"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:rv-hookup"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sd-card"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sim-card-alert"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sms"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sms-failed"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sync"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sync-disabled"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:sync-problem"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:system-update"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:tap-and-play"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:time-to-leave"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:vibration"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:voice-chat"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:vpn-lock"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:wc"></furo-icon-with-label>
        <furo-icon-with-label icon="notification:wifi"></furo-icon-with-label>
      </div>
      
      
      <h2>Iconset placesIcons</h2>
      <p>
      <pre>
        import {PlacesIcons} from "@furo/layout/iconsets/placesIcons";
        Iconset.registerIconset("places", PlacesIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="places:ac-unit"></furo-icon-with-label>
        <furo-icon-with-label icon="places:airport-shuttle"></furo-icon-with-label>
        <furo-icon-with-label icon="places:all-inclusive"></furo-icon-with-label>
        <furo-icon-with-label icon="places:beach-access"></furo-icon-with-label>
        <furo-icon-with-label icon="places:business-center"></furo-icon-with-label>
        <furo-icon-with-label icon="places:casino"></furo-icon-with-label>
        <furo-icon-with-label icon="places:child-care"></furo-icon-with-label>
        <furo-icon-with-label icon="places:child-friendly"></furo-icon-with-label>
        <furo-icon-with-label icon="places:fitness-center"></furo-icon-with-label>
        <furo-icon-with-label icon="places:free-breakfast"></furo-icon-with-label>
        <furo-icon-with-label icon="places:golf-course"></furo-icon-with-label>
        <furo-icon-with-label icon="places:hot-tub"></furo-icon-with-label>
        <furo-icon-with-label icon="places:kitchen"></furo-icon-with-label>
        <furo-icon-with-label icon="places:pool"></furo-icon-with-label>
        <furo-icon-with-label icon="places:room-service"></furo-icon-with-label>
        <furo-icon-with-label icon="places:rv-hookup"></furo-icon-with-label>
        <furo-icon-with-label icon="places:smoke-free"></furo-icon-with-label>
        <furo-icon-with-label icon="places:smoking-rooms"></furo-icon-with-label>
        <furo-icon-with-label icon="places:spa"></furo-icon-with-label>
      </div>
      
      
      <h2>Iconset socialIcons</h2>
      <p>
      <pre>
        import {SocialIcons} from "@furo/layout/iconsets/socialIcons";
        Iconset.registerIconset("social", SocialIcons);
      </pre></p>

      <div>
        <furo-icon-with-label icon="social:cake"></furo-icon-with-label>
        <furo-icon-with-label icon="social:domain"></furo-icon-with-label>
        <furo-icon-with-label icon="social:group"></furo-icon-with-label>
        <furo-icon-with-label icon="social:group-add"></furo-icon-with-label>
        <furo-icon-with-label icon="social:location-city"></furo-icon-with-label>
        <furo-icon-with-label icon="social:mood"></furo-icon-with-label>
        <furo-icon-with-label icon="social:mood-bad"></furo-icon-with-label>
        <furo-icon-with-label icon="social:notifications"></furo-icon-with-label>
        <furo-icon-with-label icon="social:notifications-active"></furo-icon-with-label>
        <furo-icon-with-label icon="social:notifications-none"></furo-icon-with-label>
        <furo-icon-with-label icon="social:notifications-off"></furo-icon-with-label>
        <furo-icon-with-label icon="social:notifications-paused"></furo-icon-with-label>
        <furo-icon-with-label icon="social:pages"></furo-icon-with-label>
        <furo-icon-with-label icon="social:party-mode"></furo-icon-with-label>
        <furo-icon-with-label icon="social:people"></furo-icon-with-label>
        <furo-icon-with-label icon="social:people-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="social:person"></furo-icon-with-label>
        <furo-icon-with-label icon="social:person-add"></furo-icon-with-label>
        <furo-icon-with-label icon="social:person-outline"></furo-icon-with-label>
        <furo-icon-with-label icon="social:plus-one"></furo-icon-with-label>
        <furo-icon-with-label icon="social:poll"></furo-icon-with-label>
        <furo-icon-with-label icon="social:public"></furo-icon-with-label>
        <furo-icon-with-label icon="social:school"></furo-icon-with-label>
        <furo-icon-with-label icon="social:sentiment-dissatisfied"></furo-icon-with-label>
        <furo-icon-with-label icon="social:sentiment-neutral"></furo-icon-with-label>
        <furo-icon-with-label icon="social:sentiment-satisfied"></furo-icon-with-label>
        <furo-icon-with-label icon="social:sentiment-very-dissatisfied"></furo-icon-with-label>
        <furo-icon-with-label icon="social:sentiment-very-satisfied"></furo-icon-with-label>
        <furo-icon-with-label icon="social:share"></furo-icon-with-label>
        <furo-icon-with-label icon="social:whatshot"></furo-icon-with-label>
      </div>
     
    `}}window.customElements.define("demo-furo-icon-list",DemoFuroIconList);class DemoFuroCard extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo demo-furo-card</h2>
      <p>description</p>
      <furo-demo-snippet>
        <template>
          <style>furo-card {
            margin: 20px
          }</style>
          
          <furo-card>
            <div><furo-icon icon="mail"></furo-icon>
              <hr>
              Content</div>
            <div slot="action"><button>df</button></div>
          </furo-card>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-card",DemoFuroCard);class FuroCollapsibleBox extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();/**
              * @type {boolean}
              */this._open=!1;/**
                         * @type {string}
                         */this.iconOpen="expand-more";/**
                                    *
                                    * @type {string}
                                    */this.iconClosed="expand-less";/**
                                      *
                                      * @type {number}
                                      */this.tabindex=0;this.icon=this._open?this.iconOpen:this.iconClosed;// toggle method
this._FBPAddWireHook("--toggleClicked",()=>{this.toggle()});/**
         * minimal keyboard navigation
         */this._FBPAddWireHook("--keystrokes",e=>{switch(e.code){case"ArrowRight":this.open();break;case"ArrowLeft":this.close();break;case"Enter":this.toggle();break;}});this._FBPAddWireHook("--blured",()=>{if(this.closeOnBlur){this.close()}})}/**
     * Opens the Box
     */open(){this._open=!0;this.icon=this._open?this.iconOpen:this.iconClosed;this.requestUpdate()}/**
     * closes the box
     */close(){this._open=!1;this.icon=this._open?this.iconOpen:this.iconClosed;this.requestUpdate()}/**
     * Toggles the box open/close
     */toggle(){this._open=!this._open;this.icon=this._open?this.iconOpen:this.iconClosed;this.requestUpdate();if(!0==this._open){/**
       * @event opened
       *
       * Fired when collapsible box was opened
       *
       * detail payload: void
       */let customEvent=new Event("opened",{composed:!0,bubbles:!1});this.dispatchEvent(customEvent)}else{/**
       * @event closed
       * Fired when collapsible box was closed
       *
       * detail payload: void
       */let customEvent=new Event("closed",{composed:!0,bubbles:!1});this.dispatchEvent(customEvent)}/**
       * @event toggled
       * Fired when collapsible-box was toggled
       * detail payload: Boolean true for open, false for closed
       * @param Boolean true for open, false for closed
       */let customEvent=new Event("toggled",{composed:!0,bubbles:!1});customEvent.detail=this._open;this.dispatchEvent(customEvent)}firstUpdated(changedProperties){super.firstUpdated(changedProperties);this.icon=this._open?this.iconOpen:this.iconClosed;this.requestUpdate()}/**
     * focus the box (focuses the icon)
     */focus(){this._FBPTriggerWire("--focus");if(this.openOnFocus){this.open()}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Label der Collapsible
       */label:{type:String},/**
       * Opens the box on focus
       */openOnFocus:{type:Boolean,attribute:"open-on-focus"},/**
       * Closes the box on blur (icon)
       */closeOnBlur:{type:Boolean,attribute:"close-on-blur"},/**
       * https://developer.mozilla.org/de/docs/Web/HTML/Globale_Attribute/tabindex
       */tabindex:{type:Number},/**
       * Indicates the collapse state, set the collapse state
       */_open:{type:Boolean,reflect:!0,attribute:"open"},/**
       * The icon for the open state.
       *
       */iconOpen:{type:String,attribute:"icon-open"},/**
       * The icon for the closed state.
       *
       */iconClosed:{type:String,attribute:"icon-closed"},/**
       * reserved flag
       * todo implement remember component
       */rememberState:{type:Boolean}}}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`

        :host {
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
            0 1px 5px 0 rgba(0, 0, 0, 0.12),
            0 3px 1px -2px rgba(0, 0, 0, 0.2);
            padding: var(--furo-collapsible-box-padding, 16px);
            background: var(--furo-collapsible-box-background, white);
            display: block;
            margin: var(--furo-collapsible-box-margin, 16px);
            box-sizing: border-box;

        }

        :host([hidden]) {
            display: none;
        }

        label {
            display: block;
            font-weight: 700;
            line-height: 24px;
            padding-left: 8px;
            cursor: pointer;
        }

        .content {
            display: none;
        }

        :host([open]) .content {
            display: block;
        }

        .head {
            border-bottom: 1px solid var(--separator-color, gainsboro);;

        }

        furo-icon {
            width: 24px;
            height: 24px;
            cursor: pointer;
            outline: none;
        }

        furo-icon:focus {
            color: var(--primary, #CDCDCD)
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
<furo-horizontal-flex class="head">
  <furo-icon tabindex="${this.tabindex}" ƒ-focus="--focus" icon="${this.icon}" @-keydown="--keystrokes(*)" @-click="--toggleClicked" @-blur="--blured"></furo-icon>     
  <label flex  @-click="--toggleClicked">${this.label}</label>
  <slot name="context"></slot>
</furo-horizontal-flex>
<div class="content"><slot></slot></div>
    `}}window.customElements.define("furo-collapsible-box",FuroCollapsibleBox);class FuroInputRow extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();/**
              *
              * @type {string}
              */this.label="set the label!"}static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            margin-bottom: 16px;
            margin-top: 8px;
        }

        div {
            line-height: var(--input-row-width,40px);
            width: 120px;
        }

        ::slotted(*) {
            resize: horizontal;
        }
    `}render(){// language=HTML
return _furoShell.html`
            <furo-horizontal-flex>
                <div>${this.label}</div>
                <slot></slot>
            </furo-horizontal-flex>
        `}static get properties(){return{/**
       * The label for the input row
       */label:{type:String}}}}window.customElements.define("furo-input-row",FuroInputRow);class FuroButtonBar extends _furoShell.LitElement{/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        ::slotted(*) {
            margin: 0 8px;
        }

        ::slotted(*:first-child) {
            margin-left: 0;
        }

        ::slotted(*:last-child) {
            margin-right: 0;
        }

    `}render(){// language=HTML
return _furoShell.html`        
        <furo-horizontal-flex>
          <slot></slot>
        </furo-horizontal-flex>
    `}}window.customElements.define("furo-button-bar",FuroButtonBar);class DemoFuroCollapsibleBox extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo demo-furo-collapsible-box</h2>
      <p>description</p>
      <furo-demo-snippet >
        <template>
          <furo-collapsible-box label="label" open>
            <div>flex content in default slot</div>
            <div slot="context">CTX on right side</div>
          </furo-collapsible-box>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-collapsible-box",DemoFuroCollapsibleBox);/**
                                                                                    *
                                                                                    * @mixinFunction FuroInputBase
                                                                                    */const FuroInputBase=superClass=>{return class extends superClass{constructor(props){super(props);this._displayOnly=!1}static get properties(){return{noTypecheck:{type:Boolean,attribute:"no-typecheck"},error:{type:Boolean,reflect:!0},/**
         * Der eingegebene String
         */value:{type:String},/**
         * Label für das Feld
         */label:{type:String,attribute:!0},/**
         * Setze den Fokus automatisch auf dieses Feld
         */autofocus:{type:Boolean},/**
         * Setze disabled
         */disabled:{type:Boolean,reflect:!0},/**
         * helper für das label
         */_float:{type:Boolean},/**
         * hint
         * Hinweistext für das Feld
         */hint:{type:String},_displayOnly:{type:Boolean,attribute:"display-only"}}}attributeChangedCallback(name,oldval,newval){switch(name){case"label":this.label=newval;this._label=newval;break;case"autofocus":this.autofocus=null!==newval;break;case"disabled":this.disabled=null!==newval;break;case"display-only":this._displayOnly=null!==newval;break;default:break;}this.requestUpdate()}_init(){this._float=!!this._value;this.noTypecheck=!1;this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];if(this.field&&!this._displayOnly){this.field.value=input.value}this.value=input.value});// input changes for checkboxes
this._FBPAddWireHook("--inputCheckbox",e=>{let checkbox=e.composedPath()[0];if(this.field&&!this._displayOnly){this.field.value=checkbox.checked}this.value=checkbox.checked});if(this.value!=void 0){this._FBPTriggerWire("--value",this._value)}}set value(v){this._float=!!v;this._value=v;/**
                        * @event value-changed
                        * Fired when field value changed
                        * detail payload: value
                        */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=v;this.dispatchEvent(customEvent)}get value(){return this._value}firstUpdated(){super.firstUpdated();this._init()}bindData(d){if(d===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=d;this.error=!1;// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}this.disabled=this.field._meta.readonly;this.hint=this.field._meta.hint;this.value=this.field.value;this._FBPTriggerWire("--value",this.field.value);this._FBPTriggerWire("--field",this.field);//mark incomming error
if(!this.field._isValid){this.error=!0;this.hint=this.field._validity.message}this.field.addEventListener("field-value-changed",e=>{// updates wieder einspielen
this._FBPTriggerWire("--value",e.detail.value);// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}this.disabled=this.field._meta.readonly;this.hint=this.field._meta.hint;this.value=this.field.value;this.requestUpdate()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this._oldhint=this.hint;this.hint=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1;this.hint=this._oldhint});/**
           if (!this.noTypecheck && this.field._spec.type == "date") {
          console.warn("du solltest kein type input feld für datum verwenden, setze no-typecheck", this);
          }
           */}/**
       * Setze den Fokus auf dieses Element
       */focus(){this._FBPTriggerWire("--focusReceived")}}};_exports.FuroInputBase=FuroInputBase;var FuroInputBase$1={FuroInputBase:FuroInputBase};_exports.$FuroInputBase=FuroInputBase$1;class FuroPasswordInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];this.valid=input.validity.valid;this._float=!!input.value;if(input.validity.valid){this.value=input.value;/**
                                   * @event value-changed
                                   * Fired when value has changed from inside the component
                                   * detail payload: {String} the password value
                                   */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent);this.dispatchEvent(customEvent)}});// set pattern, min, max
let inputField=this.shadowRoot.querySelector("#input");if(this.pattern){inputField.setAttribute("pattern",this.pattern)}if(this.min){inputField.setAttribute("minlength",this.min)}if(this.max){inputField.setAttribute("maxlength",this.max)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.
       *
       * If the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.
       */pattern:{type:String},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * The maximum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the password input has no maximum length. This value must also be greater than or equal to the value of minlength.
       */max:{type:Number},/**
       * The minimum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the password input has no minimum length.
       */min:{type:Number},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Sets the value for the input field.
     * @param {String} string
     */setValue(string){this._value=string;this.value=string}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Makes the password visible.
     */makeVisible(){let f=this.shadowRoot.querySelector("input");f.setAttribute("type","text")}/**
     * Makes the password invisible again (this is the default).
     */makeInvisible(){let f=this.shadowRoot.querySelector("input");f.setAttribute("type","password")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
        }

        .iwrap {
            position: relative;
        }



        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }

        :host(:not([filled])) label span {
            top: 0;
            position: relative;
        }

        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            line-height: 56px;
        }

        :host(:not([filled])) label[float], :host(:not([filled]):focus-within) label {
            border-top: none;
        }

        :host(:not([filled])) label[float] span, :host(:not([filled]):focus-within) label span {
            font-size: 12px;
            top: -30px;
            left:0;
            position: relative;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }

        :host([filled]) label {
            border: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
        }

        :host([filled]) label span {
            position: relative;
            top: 0;
        }

        :host([filled]) label[float] span, :host(:focus-within) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top:16px;
        }
        furo-icon.lead{
            position: absolute;
            
            left:8px;
        }
        furo-icon.trail{
            position: absolute;
            right:8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) label span {
            left: 24px;
        }

        :host([leading-icon]) .wrapper{
            padding-left: 36px;
        }
        :host([trailing-icon]) .wrapper{
            padding-right: 36px;
        }
        :host(:focus-within:not([valid])) label{
            color: var(--input-error-text-color, var(--error, red));
        }


        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input{
            font-size: 14px;
        }
        :host([condensed][filled]) input{
            font-size: 13px;
        }
        :host([condensed]) .borderlabel, :host([condensed]) .wrapper{
            height: 36px;
        }  
        
        :host([condensed])  furo-icon {
            top:6px;
        }
        
        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top:-15px;
            font-size: 10px;
        } 
        :host([condensed]) label[float] span, :host([condensed]:focus-within) label span {
            top:-20px;
            font-size: 10px;
        } 
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }
        :host([condensed]){
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
       <div class="iwrap">
       <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
       type="password" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-password-input",FuroPasswordInput);class FuroDataPasswordInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {String} the text value
   *
   * Comes from underlying component furo-password-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**
       */hint:{type:String},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Bind a entity field to the password-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}this.disabled=this.field._meta.readonly?!0:!1;//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        furo-password-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html` 
       <furo-password-input 
          ?autofocus=${this.autofocus} 
          ?disabled=${this.disabled} 
          label="${this._label}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-password-input>      
    `}}customElements.define("furo-data-password-input",FuroDataPasswordInput);class FuroDataDateInput extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 14px 0;
            padding: 8px 0 2px 0;
            height: 28px;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }

        :host([hidden]) {
            display: none;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }


        input {
            border: none;
            background: 0 0;
            font-size: 12px;
            margin: 0;
            padding: 0;
            width: 100%;
            text-align: left;
            color: inherit;
            outline: none;
        }

        .border {
            position: absolute;
            width: 100%;
            height: 1px;
            top:29px;
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
         }

        label {
            position: absolute;
            pointer-events: none;
            display: block;
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-align: left;
            color: var(--primary, #3f51b5);
            font-size: 10px;
            top: -4px;
            visibility: visible;
         }

       

        * {
            transition: all 150ms ease-out;
        }

        .hint {
            position: absolute;
            top: 30px;
            font-size: 10px;
            color: transparent;
            white-space: nowrap;
            pointer-events: none;
         }

        :host(:focus-within) .hint {
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }

        :host(:focus-within) .border {
            border-color: var(--primary, #3f51b5);
            border-width: 1px;
        }
    `}render(){// language=HTML
return _furoShell.html`     
      <input id="input" ?autofocus=${this.autofocus} ?disabled=${this.disabled} type="date" list="datalist" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focusReceived">
      <div class="border"></div>
      <label for="input">${this._label}</label>  
      <div class="hint">${this.hint}</div>
 
    `}constructor(){super()}_init(){super._init();this._float=!0}bindData(d){// capture defaults
// todo eow, eom, bow, bow, ...
if("today"===d._meta.default){let today=new Date,dd=(today.getDate()+"").padStart(2,"0"),mm=(today.getMonth()+1+"").padStart(2,"0"),yyyy=today.getFullYear();today=yyyy+"-"+mm+"-"+dd;d.value=today}super.bindData(d)}}customElements.define("furo-data-date-input",FuroDataDateInput);class FuroTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];this.valid=input.validity.valid;this._float=!!input.value;if(input.validity.valid){this.value=input.value;/**
                                   * @event value-changed
                                   * Fired when value has changed from inside the component
                                   * detail payload: {String} the text value
                                   */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max
let inputField=this.shadowRoot.querySelector("#input");if(this.pattern){inputField.setAttribute("pattern",this.pattern)}if(this.min){inputField.setAttribute("minlength",this.min)}if(this.max){inputField.setAttribute("maxlength",this.max)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.
       *
       * If the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.
       */pattern:{type:String},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * The maximum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the text input has no maximum length. This value must also be greater than or equal to the value of minlength.
       */max:{type:Number},/**
       * The minimum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the text input has no minimum length.
       */min:{type:Number},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Sets the value for the input field.
     * @param {String} string
     */setValue(string){this._value=string;this.value=string}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            padding: 0 12px;
            box-sizing: border-box;
        }

        .iwrap {
            position: relative;
        }

       

        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }

        :host(:not([filled])) label span {
            top: 0;
            position: relative;
        }

        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            line-height: 56px;
        }

        :host(:not([filled])) label[float], :host(:not([filled]):focus-within) label {
            border-top: none;
        }

        :host(:not([filled])) label[float] span, :host(:not([filled]):focus-within) label span {
            font-size: 12px;
            top: -30px;
            left:0;
            position: relative;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }

        :host([filled]) label {
            border: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
        }

        :host([filled]) label span {
            position: relative;
            top: 0;
        }

        :host([filled]) label[float] span, :host(:focus-within) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }

        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top:16px;
        }
        furo-icon.lead{
            position: absolute;
            
            left:8px;
        }
        furo-icon.trail{
            position: absolute;
            right:8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) label span {
            left: 24px;
        }

        :host([leading-icon]) .wrapper{
            padding-left: 36px;
        }
        :host([trailing-icon]) .wrapper{
            padding-right: 36px;
        }
        :host(:focus-within:not([valid])) label{
            color: var(--input-error-text-color, var(--error, red));
        }


        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input{
            font-size: 14px;
        }
        :host([condensed][filled]) input{
            font-size: 13px;
        }
        :host([condensed]) .borderlabel, :host([condensed]) .wrapper{
            height: 36px;
        }  
        
        :host([condensed])  furo-icon {
            top:6px;
        }
        
        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top:-15px;
            font-size: 10px;
        } 
        :host([condensed]) label[float] span, :host([condensed]:focus-within) label span {
            top:-20px;
            font-size: 10px;
        } 
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }
        :host([condensed]){
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
       <div class="iwrap">
      <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
        type="text" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-text-input",FuroTextInput);class FuroDataTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {String} the text value
   *
   * Comes from underlying component furo-text-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**
       */hint:{type:String},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Bind a entity field to the text-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}this.disabled=this.field._meta.readonly?!0:!1;//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        furo-text-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html`
       <furo-text-input 
          ?autofocus=${this.autofocus} 
          ?disabled=${this.disabled} 
          label="${this._label}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-text-input>      
    `}}customElements.define("furo-data-text-input",FuroDataTextInput);class FuroTextareaInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];this.valid=!input.validity.valid;this._float=!!input.value;if(input.validity.valid){this.value=input.value;/**
                                   * @event value-changed
                                   * Fired when value has changed from inside the component
                                   * detail payload: {String} the text value
                                   */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max
let inputField=this.shadowRoot.querySelector("#input");if(this.pattern){inputField.setAttribute("pattern",this.pattern)}if(this.min){inputField.setAttribute("minlength",this.min)}if(this.max){inputField.setAttribute("maxlength",this.max)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.
       *
       * If the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.
       */pattern:{type:String},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * The maximum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the textarea input has no maximum length. This value must also be greater than or equal to the value of minlength.
       */max:{type:Number},/**
       * The minimum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the textarea input has no minimum length.
       */min:{type:Number},/**
       * The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.
       *
       * If it is not specified, the default value is 20.
       */cols:{type:Number},/**
       * The number of visible text lines for the control.
       */rows:{type:Number},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Sets the value for the input field.
     * @param {String} string
     */setValue(string){this._value=string;this.value=string}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 10px 0;
            padding: 9px 0 0 0;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }
       

        :host([hidden]) {
            display: none;
        }


        textarea {
            border: none;
            background: none;
            font-size: 12px;
            margin: 0;
            line-height: normal;
            padding: 0;
            width: 100%;
            text-align: left;
            color: inherit;
            outline: none;
        }


        .border {
            position: absolute;
            width: 100%;
            height: 1px;
            bottom: -2px;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
        }

        label {
            position: absolute;
            top: 8px;
            color: rgba(0, 0, 0, .26);
            font-size: 12px;
            pointer-events: none;
            display: block;
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-align: left;
        }

     
        
        label[float="true"] {
            color: var(--on-background, #333333);
            font-size: 10px;
            top: -4px;
            visibility: visible;
        }

        * {
            transition: all 150ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: -17px;
            font-size: 10px;
            color: transparent;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }

        
        :host([error]) .border {
            border-color: var(--error, red);
            border-width: 1px;
        }

        :host([error]) .errortext {
            display: block;
        }
        .errortext {
            color: var(--error, red);
            display: none;
        }


        :host(:focus-within)  .errortext{
            display: none;
        }
        
        :host(:focus-within) label[float="true"] {
            color: var(--accent, #333333);
        }
        
        :host(:focus-within) .border {
            border-color: var(--accent, #3f51b5);
            border-width: 1px;
        }
        :host([error]:focus-within) .border {
            border-color: var(--error, red);
            border-width: 1px;
        }
    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <textarea id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
        ƒ-.value="--value" rows="${this.rows}" cols="${this.cols}" @-input="--inputInput(*)"   ƒ-focus="--focus"></textarea>
      <div class="border"></div>
      <label float="${this._float}" for="input">${this.label}</label>  
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
    `}}window.customElements.define("furo-textarea-input",FuroTextareaInput);class FuroDataTextareaInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {String} the text value
   *
   * Comes from underlying component furo-textarea-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**
       */hint:{type:String},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Bind a entity field to the textarea-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}this.disabled=this.field._meta.readonly?!0:!1;//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
        }

        :host([hidden]) {
            display: none;
        }

        furo-textarea-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html` 
       <furo-textarea-input 
          ?autofocus=${this.autofocus} 
          ?disabled=${this.disabled} 
          label="${this._label}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-textarea-input>      
    `}}customElements.define("furo-data-textarea-input",FuroDataTextareaInput);class FuroSearchInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];this.error=input.validity.rangeOverflow||input.validity.rangeUnderflow||input.validity.patternMismatch;this._float=!!input.value;if(input.validity.valid){this.value=input.value;/**
                                   * @event value-changed
                                   * Fired when value has changed from inside the component
                                   * detail payload: {String} the text value
                                   */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max
let inputField=this.shadowRoot.querySelector("#input");if(this.pattern){inputField.setAttribute("pattern",this.pattern)}if(this.min){inputField.setAttribute("minlength",this.min)}if(this.max){inputField.setAttribute("maxlength",this.max)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.
       *
       * If the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.
       */pattern:{type:String},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * The maximum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the search input has no maximum length. This value must also be greater than or equal to the value of minlength.
       */max:{type:Number},/**
       * The minimum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the search input has no minimum length.
       */min:{type:Number},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Sets the value for the input field.
     * @param {String} string
     */setValue(string){this._value=string;this.value=string}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
        }



        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            left:12px;
            right: 12px;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }

        :host(:not([filled])) label span {
            top: 0;
            position: relative;
        }

        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            line-height: 56px;
        }

        :host(:not([filled])) label[float], :host(:not([filled]):focus-within) label {
            border-top: none;
        }

        :host(:not([filled])) label[float] span, :host(:not([filled]):focus-within) label span {
            font-size: 12px;
            top: -30px;
            left:0;
            position: relative;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }

        :host([filled]) label {
            border: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
        }

        :host([filled]) label span {
            position: relative;
            top: 0;
        }

        :host([filled]) label[float] span, :host(:focus-within) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top:16px;
        }
        furo-icon.lead{
            position: absolute;

            left:8px;
        }
        furo-icon.trail{
            position: absolute;
            right:8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) label span {
            left: 24px;
        }

        :host([leading-icon]) .wrapper{
            padding-left: 36px;
        }
        :host([trailing-icon]) .wrapper{
            padding-right: 36px;
        }
        :host(:focus-within:not([valid])) label{
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input{
            font-size: 14px;
        }
        :host([condensed][filled]) input{
            font-size: 13px;
        }
        :host([condensed]) .borderlabel, :host([condensed]) .wrapper{
            height: 36px;
        }

        :host([condensed])  furo-icon {
            top:6px;
        }

        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top:-15px;
            font-size: 10px;
        }
        :host([condensed]) label[float] span, :host([condensed]:focus-within) label span {
            top:-20px;
            font-size: 10px;
        }
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }
        :host([condensed]){
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
      <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly}       
       type="search" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focus">
       
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-search-input",FuroSearchInput);class FuroDataSearchInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {String} the text value
   *
   * Comes from underlying component furo-search-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**
       */hint:{type:String},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Bind a entity field to the search-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}this.disabled=this.field._meta.readonly?!0:!1;//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width:190px;
        }

        :host([hidden]) {
            display: none;
        }

        furo-search-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html` 
       <furo-search-input 
          ?autofocus=${this.autofocus} 
          ?disabled=${this.disabled} 
          label="${this._label}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-search-input>      
    `}}customElements.define("furo-data-search-input",FuroDataSearchInput);class FuroDataColorInput extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 14px 0;
            padding: 8px 0 2px 0;
            height: 28px;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }

        :host([hidden]) {
            display: none;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }


        input {
            border: none;
            background: 0 0;
            font-size: 12px;
            margin: 0;
            padding: 0;
            width: 100%;
            text-align: left;
            color: inherit;
            outline: none;
            width:30px;
            height: 19px;
         }

        .border {
            position: absolute;
            width: 100%;
            height: 1px;
            top: 28px;
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
         }

        label {
            position: unset;
            top: unset;
            color: unset;
            pointer-events: unset;
            display: unset;
            width: unset;
            overflow: unset;
            padding-left: 12px;
        }
        

        * {
            transition: all 150ms ease-out;
        }

        .hint {
            position: absolute;
            top: 30px;
            font-size: 10px;
            color: transparent;
            white-space: nowrap;
            pointer-events: none;
         }

        :host(:focus-within) .hint {
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }
        
        :host(:focus-within) .border {
            border-color: var(--primary, #3f51b5);
            border-width: 1px;
        }
    `}render(){// language=HTML
return _furoShell.html`      
      <input id="input" ?autofocus=${this.autofocus} ?disabled=${this.disabled}  type="color" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focusReceived">
      <div class="border"></div>
      <label float="${this._float}" for="input">${this._label}</label>  
      <div class="hint">${this.hint}</div>
 
    `}constructor(){super()}_init(){super._init();this._float=!0}}customElements.define("furo-data-color-input",FuroDataColorInput);class FuroNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.step="any";this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];// mark min max error
this.valid=!(input.validity.rangeOverflow||input.validity.rangeUnderflow);if(!input.validity.badInput){this.value=input.value;this._float=!!input.value;/**
                                      * @event value-changed
                                      * Fired when value has changed from inside the component
                                      * detail payload: {Number} the number value
                                      */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max, step
let inputField=this.shadowRoot.querySelector("#input");if(this.min){inputField.setAttribute("min",this.min)}if(this.max){inputField.setAttribute("max",this.max)}if(this.step){inputField.setAttribute("step",this.step)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:Number},/**
       * The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.
       *
       * A string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).
       */step:{type:String},/**
       * The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.
       *
       * This value must be greater than or equal to the value of the min attribute.
       */max:{type:Number},/**
       * The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.
       *
       * This value must be less than or equal to the value of the max attribute.
       */min:{type:Number},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Set the value for the field
     * @param {Number} num a valid number value
     */setValue(num){this._value=num;this.value=num}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
        }

        .iwrap {
            position: relative;
        }



        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }

        :host(:not([filled])) label span {
            top: 0;
            position: relative;
        }

        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            line-height: 56px;
        }

        :host(:not([filled])) label[float], :host(:not([filled]):focus-within) label {
            border-top: none;
        }

        :host(:not([filled])) label[float] span, :host(:not([filled]):focus-within) label span {
            font-size: 12px;
            top: -30px;
            left:0;
            position: relative;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }

        :host([filled]) label {
            border: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
        }

        :host([filled]) label span {
            position: relative;
            top: 0;
        }

        :host([filled]) label[float] span, :host(:focus-within) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top:16px;
        }
        furo-icon.lead{
            position: absolute;
            
            left:8px;
        }
        furo-icon.trail{
            position: absolute;
            right:8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) label span {
            left: 24px;
        }

        :host([leading-icon]) .wrapper{
            padding-left: 36px;
        }
        :host([trailing-icon]) .wrapper{
            padding-right: 36px;
        }
        :host(:focus-within:not([valid])) label{
            color: var(--input-error-text-color, var(--error, red));
        }
        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input{
            font-size: 14px;
        }
        :host([condensed][filled]) input{
            font-size: 13px;
        }
        :host([condensed]) .borderlabel, :host([condensed]) .wrapper{
            height: 36px;
        }  
        
        :host([condensed])  furo-icon {
            top:6px;
        }
        
        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top:-15px;
            font-size: 10px;
        } 
        :host([condensed]) label[float] span, :host([condensed]:focus-within) label span {
            top:-20px;
            font-size: 10px;
        } 
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }
        :host([condensed]){
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
      
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>
       <div class="iwrap">    
           <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
       type="number"       
       ƒ-.value="--value" 
       @-input="--inputInput(*)"   
       ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-number-input",FuroNumberInput);class FuroDataNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {Number} the number value
   *
   * Comes from underlying component furo-number-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */hint:{type:String},/**
       * Overrides the min value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */min:{type:Number},/**
       * Overrides the max value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */max:{type:Number},/**
       * Overrides the step value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */step:{type:String// string, because "any" is also a valid step
},/**
       * Overrides the readonly value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */readonly:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Sets the field to readonly
     */disable(){this._readonly=!0}/**
     * Makes the field writable.
     */enable(){this._readonly=!1}/**
     * Bind a entity field to the number-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}// min auf attr ist höher gewichtet
if(!this.min){this._min=this.field._meta.min}else{this._min=this.min}// max auf attr ist höher gewichtet
if(!this.max){this._max=this.field._meta.max}else{this._max=this.max}// step auf attr ist höher gewichtet
if(!this.step){this._step=this.field._meta.step}else{this._step=this.step}// readonly auf attr ist höher gewichtet
if(!this.readonly){this._readonly=this.field._meta.readonly}else{this._readonly=this.readonly}//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }
        furo-number-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html` 
       <furo-number-input 
          ?autofocus=${this.autofocus} 
          ?readonly=${this._readonly||this.disabled} 
          label="${this._label}" 
          min="${this._min}" 
          max="${this._max}" 
          step="${this._step}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-number-input>      
    `}}customElements.define("furo-data-number-input",FuroDataNumberInput);class FuroDataRangeInput extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 14px 0;
            padding: 8px 0 2px 0;
            height: 28px;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }

        :host([hidden]) {
            display: none;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }


        input {
            border: none;
            background: 0 0;
            font-size: 12px;
            margin: 0;
            padding: 0;
            width: 100%;
            text-align: left;
            color: inherit;
            outline: none;
        }

        .border {
            position: absolute;
            width: 100%;
            height: 1px;
            top:29px;
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
         }

        label {
            position: absolute;
            top: 8px;
            color: rgba(0, 0, 0, .26);
            font-size: 12px;
            pointer-events: none;
            display: block;
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-align: left;
         }

        label[float="true"] {
            color: var(--primary, #3f51b5);
            font-size: 10px;
            top: -4px;
            visibility: visible;
         }

        * {
            transition: all 150ms ease-out;
        }

        .hint {
            position: absolute;
            top: 30px;
            font-size: 10px;
            color: transparent;
            white-space: nowrap;
            pointer-events: none;
         }

        :host(:focus-within) .hint {
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }

        :host(:focus-within) .border {
            border-color: var(--primary, #3f51b5);
            border-width: 1px;
        }
    `}render(){// language=HTML
return _furoShell.html`     
      <input id="input" ?autofocus=${this.autofocus} ?disabled=${this.disabled}  type="range" list="datalist" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focusReceived">
      <div class="border"></div>     
      <label float="${this._float}" for="input">${this._label}</label>  
      <div class="hint">${this.hint}</div>
 
    `}constructor(){super()}_init(){super._init();this._float=!0}}customElements.define("furo-data-range-input",FuroDataRangeInput);class FuroTimeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.step="any";this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];// mark min max step error
this.valid=!(input.validity.rangeOverflow||input.validity.rangeUnderflow||input.validity.stepMismatch);if(!input.validity.badInput){this.value=input.value;this._float=!!input.value;/**
                                      * @event value-changed
                                      * Fired when value has changed from inside the component
                                      * detail payload: {String} the time value like "12:15" or "11:59:59"
                                      */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max, step
let inputField=this.shadowRoot.querySelector("#input");if(this.min){inputField.setAttribute("min",this.min)}if(this.max){inputField.setAttribute("max",this.max)}if(this.step){inputField.setAttribute("step",this.step)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.
       *
       * A string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).
       */step:{type:String},/**
       * The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.
       *
       * This value must be greater than or equal to the value of the min attribute.
       */max:{type:String},/**
       * The earliest time to accept as a valid input.
       *
       * A string specifying the earliest time to accept, given in the [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the value specified isn't a valid time string, no minimum value is set.
       */min:{type:String},/**
       * The latest time to accept, in the syntax described under Time value format
       *
       * A string indicating the latest time to accept, specified in the same [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the specified string isn't a valid time, no maximum value is set.
       */label:{type:String,attribute:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Set the value for the field
     * @param {Number} num a valid time number value
     */setValue(num){this._value=num;this.value=num}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 104px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
            height: 56px;
        }

        .iwrap {
            position: relative;
        }
       

        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }


        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            border-top: none;
            line-height: 56px;
        }


        :host(:not([filled])) label span {
            position: relative;
            font-size: 12px;
            top: -30px;
            left:0;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
            border: none;
        }

        :host([filled]) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top:16px;
        }
        furo-icon.lead{
            position: absolute;
            
            left:8px;
        }
        furo-icon.trail{
            position: absolute;
            right:8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) .wrapper{
            padding-left: 36px;
        }
        :host([trailing-icon]) .wrapper{
            padding-right: 36px;
        }
        :host(:focus-within:not([valid])) label{
            color: var(--input-error-text-color, var(--error, red));
        }


        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input{
            font-size: 14px;
        }
        :host([condensed][filled]) input{
            font-size: 13px;
        }
        :host([condensed]) .borderlabel, :host([condensed]) .wrapper{
            height: 36px;
        }  
        
        :host([condensed])  furo-icon {
            top:6px;
        }
        
        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top:-15px;
            font-size: 10px;
        }
        :host([condensed]) label span {
            top:-20px;
            font-size: 10px;
        }
        
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }
        :host([condensed]){
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>   
       <div class="iwrap"> 
      <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
       type="time"       
       ƒ-.value="--value" 
       @-input="--inputInput(*)"   
       ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-time-input",FuroTimeInput);class FuroDataTimeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * @event value-changed
   * Fired when value has changed from inside the input field.
   *
   * detail payload: {String} the time value
   *
   * Comes from underlying component furo-time-input. **bubbles**
   */constructor(){super();this.error=!1;this.disabled=!1;this.errortext="";this.hint="";this._FBPAddWireHook("--valueChanged",val=>{if(this.field){this.field.value=val}})}static get properties(){return{/**
       * Overrides the label text from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */label:{type:String,attribute:!0},/**
       * Overrides the hint text from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */hint:{type:String},/**
       * Overrides the min value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */min:{type:Number},/**
       * Overrides the max value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */max:{type:Number},/**
       * Overrides the step value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */step:{type:String// string, because "any" is also a valid step
},/**
       * Overrides the readonly value from the **specs**.
       *
       * Use with caution, normally the specs defines this value.
       */readonly:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean}}}/**
     * Sets the field to readonly
     */disable(){this._readonly=!0}/**
     * Makes the field writable.
     */enable(){this._readonly=!1}/**
     * Bind a entity field to the time-input. You can use the entity even when no data was received.
     * When you use `@-object-ready` from a `entity-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`
     * @param {Object|FieldNode} fieldNode a Field object
     */bindData(fieldNode){if(fieldNode===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=fieldNode;this._updateField();this.field.addEventListener("field-value-changed",e=>{this._updateField()});this.field.addEventListener("field-became-invalid",e=>{// updates wieder einspielen
this.error=!0;this.errortext=this.field._validity.message});this.field.addEventListener("field-became-valid",e=>{// updates wieder einspielen
this.error=!1})}_updateField(){// label auf attr ist höher gewichtet
if(!this.label){this._label=this.field._meta.label}else{this._label=this.label}// hint auf attr ist höher gewichtet
if(!this.hint){this._hint=this.field._meta.hint}else{this._hint=this.hint}// min auf attr ist höher gewichtet
if(!this.min){this._min=this.field._meta.min}else{this._min=this.min}// max auf attr ist höher gewichtet
if(!this.max){this._max=this.field._meta.max}else{this._max=this.max}// step auf attr ist höher gewichtet
if(!this.step){this._step=this.field._meta.step}else{this._step=this.step}// readonly auf attr ist höher gewichtet
if(!this.readonly){this._readonly=this.field._meta.readonly}else{this._readonly=this.readonly}//mark incomming error
if(!this.field._isValid){this.error=!0;this.errortext=this.field._validity.message}this._FBPTriggerWire("--value",this.field.value);this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width:104px;
        }

        :host([hidden]) {
            display: none;
        }
        furo-time-input{
            width: 100%;
        }
    `}render(){// language=HTML
return _furoShell.html` 
       <furo-time-input 
          ?autofocus=${this.autofocus} 
          ?readonly=${this._readonly||this.disabled} 
          label="${this._label}" 
          min="${this._min}" 
          max="${this._max}" 
          step="${this._step}" 
          ?error="${this.error}" 
          errortext="${this.errortext}" 
          hint="${this.hint}" 
          @-value-changed="--valueChanged"
          ƒ-set-value="--value"></furo-time-input>      
    `}}customElements.define("furo-data-time-input",FuroDataTimeInput);class FuroDataCheckboxInput extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 14px 0;
            padding: 8px 0 2px 0;
            height: 28px;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }

        :host([hidden]) {
            display: none;
        }

        input {
            border: none;
            background: 0 0;
            font-size: 12px;
            margin: 0;
            padding: 0;
            width: unset;
            text-align: left;
            color: inherit;
            outline: none;
        }
        
        .border{
            position: absolute;
            width: 100%;
            height: 1px;
            top:28px;
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
        }

        :host(:focus-within) .border{
            border-color: var(--primary,#3f51b5);
            border-width: 1px;
        }
        
        label {
            position: unset;
            top: unset;
            color: unset;
            pointer-events: unset;
            display: unset;
            width: unset;
            overflow: unset;
            padding-left: 12px;
        }
        * {
            transition: all 150ms ease-out;
        }

        .hint{
            position: absolute;
            top: 30px;
            font-size: 10px;
            color:transparent;
            white-space: nowrap;
            pointer-events: none;
        }
        :host(:focus-within) .hint{
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }
    `}render(){return _furoShell.html` 
      <input id="input"  aria-label="${this._label}" ?autofocus=${this.autofocus} ?disabled=${this.disabled}  type="checkbox" list="datalist" ƒ-.checked="--value" @-input="--inputCheckbox(*)"   ƒ-focus="--focusReceived">     
      <label for="input" class="text">${this._label}</label>
      
      <div class="border"></div>  
      <div class="hint">${this.hint}</div>
 
    `;// language=HTML
}constructor(){super();this._text=this.getAttribute("text")}static get properties(){return{text:{type:String,attribute:!0}}}}customElements.define("furo-data-checkbox-input",FuroDataCheckboxInput);class FuroDataCollectionDropdown extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){/**
   *
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 12px;
            box-sizing: border-box;
            margin: 0 0 14px 0;
            padding: 8px 0 2px 0;
            height: 28px;
            font-family: "Roboto", "Noto", sans-serif;
            line-height: 1.5;
        }

        :host([hidden]) {
            display: none;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }


        select{
            width: 100%;
            outline: none;
        }

        .border {
            position: absolute;
            width: 100%;
            height: 1px;
            top: 28px;
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, .12);
         }

        label {
            position: absolute;
            top: 8px;
            color: rgba(0, 0, 0, .26);
            font-size: 12px;
            pointer-events: none;
            display: block;
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            text-align: left;
         }

        label[float="true"] {
            color: var(--primary, #3f51b5);
            font-size: 10px;
            top: -4px;
            visibility: visible;
         }

        * {
            transition: all 150ms ease-out;
        }

        .hint {
            position: absolute;
            top: 30px;
            font-size: 10px;
            color: transparent;
            white-space: nowrap;
            pointer-events: none;
         }

        :host(:focus-within) .hint {
            color: var(--app-hint-color);
            transition: all 550ms ease-in;
        }

        :host([error]) .border {
            border-color: red;
            border-width: 1px;
        }

        :host(:focus-within) .border {
            border-color: var(--primary, #3f51b5);
            border-width: 1px;
        }
    `}render(){// language=HTML
return _furoShell.html`
      <select ?autofocus=${this.autofocus} ?disabled=${this.disabled} @-change="--inputInput(*)" ƒ-.value="--value">
            <template is="flow-repeat" ƒ-inject-items="--selection">
                <option ƒ-.value="--item(*.id)" ƒ-.selected="--item(*.selected)" ƒ-.inner-text="--item(*.label)"></option>
            </template>
      </select>
               
      <div class="border"></div>
      <label float="true" for="input">${this._label}</label>  
      <div class="hint">${this.hint}</div>
      
    `}constructor(){super()}/**
     * Exposes --injectCollection
     * @param {collection} det
     */injectCollection(collection){let label=this.getAttribute("display-field"),val=this.getAttribute("value-field"),arr=collection.data.map(e=>{return{id:e.data[val],label:e.data[label],selected:this.value==e.data[val]}});if(!this.value){this.field.value=arr[0].id}this._FBPTriggerWire("--selection",arr)}}customElements.define("furo-data-collection-dropdown",FuroDataCollectionDropdown);class ReferenceSearchItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this._item={}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}injectItem(item){this._item=item;this.requestUpdate()}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.css`
        :host {
            display: block;

        }

        :host([hover]) div {
            background-color: lightgray;
        }

        :host(:hover) div {
            background-color: #f0f0f0;
        }

        div {
            border-bottom: 1px solid var(--primary);
            padding: 8px;
            cursor: pointer;
            box-sizing: border-box;
        }
    `}deselect(){this.removeAttribute("hover")}preselect(){this.setAttribute("hover","");this.scrollIntoView({block:"start",behavior:"smooth"})}select(){/**
     * @event item-selected
     * Fired when item is selected
     * detail payload: item
     */let customEvent=new Event("item-selected",{composed:!0,bubbles:!0});customEvent.detail=this._item;this.dispatchEvent(customEvent)}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
<div @-click="^^item-selected(_item)">
${this._item.data.display_name}
</div>           
`}}window.customElements.define("reference-search-item",ReferenceSearchItem);class FuroDataReferenceSearch extends(0,_furoShell.FBP)(FuroInputBase(_furoShell.LitElement)){constructor(){super();this.minTermLength=0;this.idField="id";this.displayField="display_name"}attributeChangedCallback(name,oldval,newval){switch(name){case"min-term-length":this.minTermLength=+newval;break;case"id-field":this.idField=newval;break;}}_init(){super._init();this.addEventListener("searchInput",e=>{this._searchTerm=e.composedPath()[0].value;if(this._searchTerm.length>this.minTermLength){/**
         * @event search
         * Fired when term is entered and bigger then min-term-length
         * detail payload: {String} term
         */let customEvent=new Event("search",{composed:!0,bubbles:!0});customEvent.detail=this._searchTerm;this.dispatchEvent(customEvent)}});this._FBPAddWireHook("--itemSelected",item=>{this.field.id.value=item.data[this.idField];this.field.display_name.value=item.data.display_name;this._closeList()});/**
         * listen to keyboard events
         */this.addEventListener("keydown",event=>{let key=event.key||event.keyCode;if("Escape"===key||"Esc"===key||27===key){if(this._listIsOpen){// close list if open and  then clear search
event.preventDefault()}this._closeList();if(""===this._searchTerm){event.preventDefault();// re set display_name
}}// keyboard navigation
if(this._listIsOpen){if("Enter"===key){event.preventDefault();this._FBPTriggerWire("--enterPressed")}if("ArrowDown"===key){event.preventDefault();this._FBPTriggerWire("--arrowDownPressed")}if("ArrowUp"===key){event.preventDefault();this._FBPTriggerWire("--arrowUpPressed")}}else{if("ArrowDown"===key){this._showList()}}});// lock blur for slow clickers
this.addEventListener("mousedown",event=>{this._lockBlur=!0});// unlock after long click
this.addEventListener("mouseup",event=>{this._lockBlur=!1});// close list on blur
this._FBPAddWireHook("--blured",item=>{this._focused=!1;if(!this._lockBlur){this._closeList()}});// opens the list on focus
this._FBPAddWireHook("--focused",item=>{this._focused=!0;if(this._hasCollection){this._showList()}});this.requestUpdate()}_showList(){this._listIsOpen=!0;this.setAttribute("show-list","");this._FBPTriggerWire("--listOpened",0)}_closeList(){this._listIsOpen=!1;this.removeAttribute("show-list")}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * min-term-length before fire the search event
       */minTermLength:{type:Number,attribute:"min-term-length"},idField:{type:String,attribute:"id-field"}}}collectionIn(collection){this._FBPTriggerWire("--listItemsIjnected",collection.data);this._hasCollection=!0;if(this._focused){this._showList()}}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
        }

        .list {
            position: absolute;
            top: 32px;
            left: 0;
            right: 0;
            overflow: auto;
            max-height: 300px;
            background-color: white;
            z-index: 1;
            opacity: 0.9;
            display: none;
        }

        :host([show-list]) .list {
            display: block;
        }

        furo-data-search-input {
            width: 100%;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
    <furo-data-search-input ?autofocus=${this.autofocus} ?disabled=${this.disabled} display-only 
    label="${this._label}" 
    ƒ-bind-data="--field(*.display_name)" @-input="^^searchInput" @-blur="--blured" @-focus="--focused" ƒ-focus="--focusReceived"></furo-data-search-input>
    <div class="list" @-item-selected="--itemSelected"   >
       
        <template is="flow-repeat" ƒ-inject-items="--listItemsIjnected" ƒ-select="--listOpened" ƒ-select-next-index="--arrowDownPressed" ƒ-select-previous-index="--arrowUpPressed" ƒ-trigger-selected="--enterPressed">
          <reference-search-item ƒ-.index="--index" ƒ-deselect="--itemDeSelected" ƒ-select="--trigger" ƒ-preselect="--itemSelected" ƒ-inject-item="--item"></reference-search-item>
        </template>
             
    </div>                                
`}}window.customElements.define("furo-data-reference-search",FuroDataReferenceSearch);/**
                                                                                      * Custom event type for the AST
                                                                                      */class NodeEvent{constructor(type,detail,bubbles=!0){/**
     * Event type / name
     * @type {string}
     */this.type=type;this.path=[];/**
                     *
                     * @type {undefined}
                     */this.target=void 0;/**
                              * should the Event bubble
                              * @type {boolean}
                              */this.bubbles=bubbles;/**
                             * Event details
                             * @type {*}
                             */this.detail=detail;/**
                           * If you are in a parent element and set this to true it will not bubble
                           * @type {boolean}
                           */this.cancelBubble=!1;/**
                                * if you are in a child element and set this to true, the event will not broadcast downwards
                                * @type {boolean}
                                */this.cancelBroadcast=!1}stopPropagation(){this.cancelBubble=!0}stopBroadcast(){//todo: implement
this.cancelBroadcast=!0}}/**
   * Simulates a tree which can handle events and broadcast events to all nodes
   *
   */_exports.NodeEvent=NodeEvent;class EventTreeNode{constructor(parentNode){this.__parentNode=parentNode;this.__eventListener={};this.__childNodes=[];if(parentNode){parentNode.__childNodes.push(this)}}/**
     * shorthand function to add a property as child node
     * @param name
     * @returns {*}
     */addChildProperty(name,treeNode){this[name]=treeNode||new EventTreeNode(this);return this[name]}/**
     * Add a listener to a node
     * @param type
     * @param handler
     * @param options  for once,...
     */addEventListener(type,handler,options={}){if(!this.__eventListener[type]){this.__eventListener[type]=[]}this.__eventListener[type].push({cb:handler,options:options})}/**
     * Removes the listener from a node
     * @param type
     * @param handler
     */removeEventListener(type,handler){this.__eventListener[type]=this.__eventListener[type].filter((e,i)=>{if(e.cb===handler){return!1}})}/**
     * Dispatch an event
     * @param {NodeEvent} event
     * @returns {*}
     */dispatchNodeEvent(event){// simulate target and path
if(!event.target){event.target=this}event.path.push(this);// trigger the events on current node
this.__triggerNodeEvents(event);//trigger parent node
if(event.bubbles&&!event.cancelBubble&&this.__parentNode){this.__parentNode.dispatchNodeEvent(event)}return event}/**
     * Broadcast the event to node and all childNodes and their childNodes
     * Bubbling is ignored, but propagation can be stopped
     * @param event
     * @returns {*}
     */broadcastEvent(event){// trigger the events on current node
this.__triggerNodeEvents(event);//children
if(!event.cancelBroadcast){this.__childNodes.map(c=>{c.broadcastEvent(event)})}return event}__triggerNodeEvents(event){if(this.__eventListener[event.type]&&0<this.__eventListener[event.type].length){this.__eventListener[event.type].map((t,i,listenerArray)=>{t.cb(event);if(t.options.once){delete listenerArray[i]}})}}}_exports.EventTreeNode=EventTreeNode;var EventTreeNode$1={NodeEvent:NodeEvent,EventTreeNode:EventTreeNode};_exports.$EventTreeNode=EventTreeNode$1;class RepeaterNode extends EventTreeNode{constructor(parentNode,spec,fieldName){super(parentNode);this.__specdefinitions=parentNode.__specdefinitions;this._isRepeater=!0;this.repeats=[];this._spec=spec;this._name=fieldName;this._meta=spec.meta||{};this._pristine=!0;this._isValid=!0;if(Array.isArray(this._meta.initialValue)){this.value=this._meta.initialValue}/**
       * Schaltet ein Feld auf valid, müssen wir alle Felder auf validity prüfen...
       */this.addEventListener("field-became-valid",e=>{if(0===this.repeats.filter(f=>!f._isValid).length){this._isValid=!0;this.dispatchNodeEvent(new NodeEvent("repeat-became-valid",this))}});/**
         * Schaltet ein Feld auf invalid ist die Entity ebenfalls invalid
         */this.addEventListener("field-became-invalid",e=>{this._isValid=!1;this.dispatchNodeEvent(new NodeEvent("repeat-became-invalid",this))});/**
         * Wird ein Wert geändert gilt das form ebenfalls nicht mehr als jungfräulich
         */this.addEventListener("field-value-changed",e=>{this._pristine=!1})}removeAllChildren(){this.__childNodes=[];this.repeats=[];this.dispatchNodeEvent(new NodeEvent("repeated-fields-all-removed",this.repeats,!1))}set value(val){val.forEach((repdata,i)=>{if(!this.repeats[i]){this._addSilent()}// Werte aktualisieren
this.repeats[i].value=repdata;this.repeats[i]._pristine=!0});this.dispatchNodeEvent(new NodeEvent("repeated-fields-changed",this.repeats,!0))}get value(){return this.repeats.map(f=>{return f.value})}deleteChild(index){this.repeats.splice(index,1);this.dispatchNodeEvent(new NodeEvent("repeated-fields-changed",this.repeats,!0));this.dispatchNodeEvent(new NodeEvent("this-repeated-field-removed",this.repeats,!1));this.dispatchNodeEvent(new NodeEvent("repeated-fields-removed",this.repeats,!0))}_addSilent(){let fieldNode=new FieldNode(this,this._spec,this._name),index=this.repeats.push(fieldNode)-1;fieldNode.__index=index;// add function to remove field from list
fieldNode.deleteFromList=()=>{this.deleteChild(this.repeats.indexOf(fieldNode))};return index}_setInvalid(error){this._isValid=!1;let path=error.field.split(".");if(0<path.length){// rest wieder in error reinwerfen
error.field=path.slice(1).join(".")}this.repeats[path[0]]._setInvalid(error)}add(data){let index=this._addSilent();this._pristine=!1;// set data if given
if(data){let child=this.repeats[index];child.value=data}this.dispatchNodeEvent(new NodeEvent("repeated-fields-added",this.repeats[index],!0));this.__parentNode.dispatchNodeEvent(new NodeEvent("this-repeated-field-added",this.repeats[index],!1));this.dispatchNodeEvent(new NodeEvent("repeated-fields-changed",this.repeats,!0));// return field for chainabilty
return this.repeats[index]}}_exports.RepeaterNode=RepeaterNode;var RepeaterNode$1={RepeaterNode:RepeaterNode};_exports.$RepeaterNode=RepeaterNode$1;class FieldNode extends EventTreeNode{constructor(parentNode,fieldSpec,fieldName){super(parentNode);this.__specdefinitions=parentNode.__specdefinitions;this._spec=fieldSpec;this._meta=fieldSpec.meta||{};this._constraints=fieldSpec.constraints;this._options=fieldSpec.options;this._name=fieldName;this._value=null;this._pristine=!0;this._isValid=!0;// custom type fields aufbauen
if(this._spec.type.startsWith("vnd.")){this._createVendorType(this._spec.type)}// set default value from meta
if(this._meta&&this._meta.default){this.defaultvalue=this._meta.default;this._pristine=!1}/**
       * Schaltet ein Feld auf valid, müssen wir alle Kinder oder verästelungend des Felds auf validity prüfen...
       */this.addEventListener("field-became-valid",e=>{let v=this.__childNodes.filter(f=>!f._isValid);if(0===v.length){this._isValid=!0}});/**
         * Schaltet ein Feld auf invalid ist die Entity ebenfalls invalid
         */this.addEventListener("field-became-invalid",e=>{this._isValid=!1})}_createVendorType(type){if(this.__specdefinitions[type]){for(let fieldName in this.__specdefinitions[type].fields){if(this.__specdefinitions[type].fields[fieldName].meta&&this.__specdefinitions[type].fields[fieldName].meta.repeated){this[fieldName]=new RepeaterNode(this,this.__specdefinitions[type].fields[fieldName],fieldName)}else{this[fieldName]=new FieldNode(this,this.__specdefinitions[type].fields[fieldName],fieldName)}}}else{console.warn(type+" does not exist")}}set value(val){// type any
this._createAnyType(val);// map<string, something> typ
if(this._spec.type.startsWith("map<")){this._updateKeyValueMap(val,this._spec.type)}else{if(0<this.__childNodes.length){for(let index in this.__childNodes){let field=this.__childNodes[index];if(val.hasOwnProperty(field._name)){field.value=val[field._name]}}this.dispatchNodeEvent(new NodeEvent("branch-value-changed",this,!1))}else{// update the primitive type
this.oldvalue=this.value;this._value=val;this._pristine=!1;if(JSON.stringify(this.oldvalue)!==JSON.stringify(this._value)){this.dispatchNodeEvent(new NodeEvent("field-value-changed",this,!0))}}}}_createAnyType(val){// remove if type changes
if(this.__anyCreated&&this["@type"]!==val["@type"]){for(let i=this.__childNodes.length-1,field;0<=i;i--){field=this.__childNodes[i];if(!val[field._name]){field.deleteNode()}}this.__anyCreated=!1}if("any"===this._spec.type&&val["@type"]&&!this.__anyCreated){// create custom type if not exist
// any can only be a complex type
this._createVendorType(val["@type"]);this.__anyCreated=!0;this["@type"]=val["@type"]}}_updateKeyValueMap(val,spec){let vType=spec.match(/,\s*(.*)>/)[1],fieldSpec={type:vType};// create if not exist
for(let fieldName in val){if(this[fieldName]==void 0){this[fieldName]=new FieldNode(this,fieldSpec,fieldName)}//update data
this[fieldName].value=val[fieldName]}//remove unseted
for(let i=this.__childNodes.length-1,field;0<=i;i--){field=this.__childNodes[i];if(!val[field._name]){field.deleteNode()}}}/**
     * deletes the fieldnode
     */deleteNode(){let index=this.__parentNode.__childNodes.indexOf(this);this.__parentNode.__childNodes.splice(index,1);delete this.__parentNode[this._name];//notify
this.dispatchNodeEvent(new NodeEvent("this-node-field-deleted",this._name,!1));this.dispatchNodeEvent(new NodeEvent("node-field-deleted",this._name,!0))}set defaultvalue(val){// type any
this._createAnyType(val);if(0<this.__childNodes.length){for(let index in this.__childNodes){let field=this.__childNodes[index];field.defaultvalue=val[field._name]}}else{if(this._spec.type.startsWith("map<")){this._updateKeyValueMap(val,this._spec.type)}else{this.oldvalue=this.value;this._value=val;this._pristine=!0}}}get value(){if(0<this.__childNodes.length){this._value={};// nur reine Daten zurück geben
for(let index in this.__childNodes){let field=this.__childNodes[index];this._value[field._name]=field.value}}return this._value}_clearInvalidity(){if(!this._isValid){this._isValid=!0;this._validity={};this.dispatchNodeEvent(new NodeEvent("field-became-valid",this))}}_setInvalid(error){// set field empty, if not defined
error.field=error.field||"";let path=error.field.split(".");if(0<path.length&&""!==path[0]){// rest wieder in error reinwerfen
error.field=path.slice(1).join(".");if(this[path[0]]){this[path[0]]._setInvalid(error)}else{console.warn("Unknown field",path,this._name)}}else{this._isValid=!1;this._validity=error;this.dispatchNodeEvent(new NodeEvent("field-became-invalid",this))}}toString(){//todo parse format rules from _meta...
return this._value}}_exports.FieldNode=FieldNode;var FieldNode$1={FieldNode:FieldNode};_exports.$FieldNode=FieldNode$1;class FuroDataBoolIcon extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.addEventListener("click",()=>{this.toggle()});this.symboltrue="\u25BC";this.symbolfalse="\u25B6";this.field={};this._updateSymbol()}toggle(){this.field.value=!this.field.value}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean},symboltrue:{type:String},symbolfalse:{type:String}}}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            width: 16px;
        }

        :host([hidden]) {
            display: none;
        }
    `}bindData(d){if(d===void 0){return}if("bool"!==d._spec.type){console.warn("wrong type binded",this);return}this.field=d;// render on changed data
this.field.addEventListener("field-value-changed",e=>{this._updateSymbol()});this._updateSymbol()}_updateSymbol(){this._ocSymbol=this.field.value?this.symboltrue:this.symbolfalse;this.requestUpdate()}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      ${this._ocSymbol}
    `}}window.customElements.define("furo-data-bool-icon",FuroDataBoolIcon);class DemoFuroDataBoolIcon extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo demo-furo-data-bool-icon</h2>
      <p>description</p>
      <furo-demo-snippet >
        <template>
          <furo-data-bool-icon ></furo-data-bool-icon>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-data-bool-icon",DemoFuroDataBoolIcon);/**
                                                                                 * `api-fetch`
                                                                                 *
                                                                                 * api-fetch can be used for network requests via FETCH API with implemented fallback to XMLHttpRequest
                                                                                 *
                                                                                 * ```html
                                                                                 * <api-fetch ƒ-invoke-request="" ƒ-abort-request=""></api-fetch>
                                                                                 * ```
                                                                                 *
                                                                                 * @customElement
                                                                                 * @demo demo/api-fetch_demo.html
                                                                                 */class ApiFetch extends HTMLElement{/**
   * Fired when a request is sent.
   * Payload: request
   * @event request-started
   */ /**
       * Fired when a request was canceled.
       * Payload: request
       * @event request-aborted
       */ /**
           * Fired when a response is received.
           * Here you will get the raw response object
           * Payload: Raw response
           * @event response-raw
           */ /**
               * Fired when a response is received.
               * Here you will get the parsed response
               * Format depends on request header `content-type`
               * supported types:
               * - text/plain
               * - application/json
               * - image/jpeg (Blob)
               * - application/octet-stream (ArrayBuffer)
               * - application/pdf (Blob)
               *
               * Payload: parsed response
               * @event response
               */ /**
                   * Fired when an error has occoured.
                   * This is a general error event. The specific error events are fired additionally.
                   * @event response-error
                   */ /**
                       * Fired when an error has occoured.
                       * This is a specific error event.
                       * @event response-error-[status-code]
                       */constructor(){super();/**
              * LastRequest's response.
              *
              * Note that lastResponse is set when ongoing request finishes, so if loading is true,
              * then lastResponse will correspond to the result of the previous request.
              * @type {Object}
              */this.lastRequest={};/**
                            * True while request is in flight.
                            * @type boolean
                            */this.isLoading=!1;/**
                             * True if fetch API is not available
                             * @type {boolean}
                             */this.xhrFallback=!window.hasOwnProperty("fetch")}/**
     * Sends a HTTP request to the server
     * @param {Request} request (The Request interface of the Fetch API represents a resource request.) https://developer.mozilla.org/en-US/docs/Web/API/Request
     * @public
     */invokeRequest(request){this.lastRequest=request;this._executeRequest(request)}/**
     * Aborts a pending request
     * You have to submit an AbortController
     * @param {AbortController} controller (The AbortController interface represents a controller object that allows you to abort one or more DOM requests as and when desired.)
     * https://developer.mozilla.org/en-US/docs/Web/API/AbortController
     */abortRequest(controller){console.info("The request is about to be aborted",this);controller.abort()}/**
     * Requests are made via the Fetch API if possible.
     * Fallback XMLHttpRequest
     *
     * @event fatal-error(payload request object)
     * @param request
     */_executeRequest(request){/**
     * dispatches fatal-error
     * @param detail
     */let fatal=detail=>{this.dispatchEvent(new CustomEvent("fatal-error",{detail:detail,bubbles:!0,composed:!0}))};/**
        * Fallback, if Fetch API ist not available
        */if(this.xhrFallback){this._invokeXHR(request).then(response=>{this._reworkRequest(response)},function(error){fatal(error)})}else{/**
       * Default API fetch
       * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
       */this.isLoading=!0;this.dispatchEvent(new CustomEvent("request-started",{detail:request,bubbles:!0,composed:!0}));fetch(request).then(response=>{this._reworkRequest(response)}).catch(err=>{if("AbortError"===err.name){this.dispatchEvent(new CustomEvent("request-aborted",{detail:request,bubbles:!0,composed:!0}));console.error("RequestService fetch aborted: ",err)}else{console.error("RequestService fatal error",err)}fatal(request)})}}/**
     * Requests are made via fallback XMLHttpRequest
     * @param request
     * @private
     */_invokeXHR(request){console.info("Fetch API not available, fallback to XMLHttpRequest");this.isLoading=!0;return new Promise(function(resolve,reject){/**
       * map Request to XHR
       */let req=new XMLHttpRequest;req.open(request.method,request.url,!0);if(request.headers.get("content-type").includes("json")){req.responseType="json"}else{req.responseType="arraybuffer"}/**
         * Append headers from request object to XHR
         */for(var pair of request.headers.entries()){if(/[A-Z]/.test(pair[0])){console.error("Headers must be lower case, got",pair[0])}else{req.setRequestHeader(pair[0],pair[1])}}/**
         * XHR event handlers
         */req.onloadstart=()=>{this.dispatchEvent(new CustomEvent("request-started",{detail:req,bubbles:!0,composed:!0}))};req.onload=()=>{resolve(req)};req.onerror=err=>{console.error("XMLHttpRequest network error",err);reject(req)};req.ontimeout=err=>{console.warn("XMLHttpRequest timeout",err);reject(req)};// Do request
req.send()}.bind(this))}/**
     * Rework of Request
     * @param response
     */ /**
         * Succeeded is true if the request succeeded. The request succeeded if it
         * loaded without error, wasn't aborted, and the status code is ≥ 200, and
         * < 300, or if the status code is 0.
         */ /**
             * Errorhandling according to Google rest-api-v3 Status Codes
             * (https://developers.google.com/maps-booking/reference/rest-api-v3/status_codes)
             *
             * Dispatches event `response-error` and a specific error event with status code
             */_reworkRequest(response){/**
     * The status code 0 is accepted as a success because some schemes - e.g.
     * file:// - don't provide status codes.
     */this.isLoading=!1;let status=0|response.status;if(0===status||200<=status&&300>status){/**
       * Loaded without error, fires event `response` with full response object
       */this.lastResponse=response;this.dispatchEvent(new CustomEvent("response-raw",{detail:response,bubbles:!0,composed:!0}));/**
            * parses response object according to response heaader informationen `content-type`
            * you will find the supported content-types in the declaration area
            */this._parseResponse(response)}else{/**
       * Error detected
       */this.lastResponse=void 0;this.dispatchEvent(new CustomEvent("response-error-raw",{detail:response,bubbles:!0,composed:!0}));response.json().then(error=>{if(error){response.error=error.error;this.dispatchEvent(new CustomEvent("response-error-"+response.status,{detail:error,bubbles:!0,composed:!0}));this.dispatchEvent(new CustomEvent("response-error",{detail:error,bubbles:!0,composed:!0}));//console.error('Looks like there was a problem. Status Code: ', response.status);
}}).catch(()=>{this.dispatchEvent(new CustomEvent("parse-error",{detail:response,bubbles:!0,composed:!0}))})}}/**
     * parses response object according to lastRequest heaader informationen `content-type`
     * you will find the supported content-types in the declaration area
     * respone Fetch API response object [https://developer.mozilla.org/en-US/docs/Web/API/Response]
     * Default response handler is json!
     * @param response
     */_parseResponse(response){var _self=this;if(response){let contentType=this.lastRequest.headers.get("content-type"),responseHandler={"text/plain":r=>{r.text().then(function(text){_self.dispatchEvent(new CustomEvent("response",{detail:text,bubbles:!0,composed:!0}))})},"application/json":r=>{if(this.xhrFallback){this.dispatchEvent(new CustomEvent("response",{detail:r.response,bubbles:!0,composed:!0}))}else{r.json().then(function(json){_self.dispatchEvent(new CustomEvent("response",{detail:json,bubbles:!0,composed:!0}))})}},"application/octet-stream":r=>{if(this.xhrFallback){this.dispatchEvent(new CustomEvent("response",{detail:r.response,bubbles:!0,composed:!0}))}else{r.arrayBuffer().then(function(buffer){_self.dispatchEvent(new CustomEvent("response",{detail:buffer,bubbles:!0,composed:!0}))})}},"application/pdf":r=>{if(this.xhrFallback){let blob=new Blob([r.response],{type:"image/jpeg"}),fileReader=new FileReader;fileReader.onload=function(evt){var result=evt.target.result;_self.dispatchEvent(new CustomEvent("response",{detail:result,bubbles:!0,composed:!0}))};fileReader.readAsDataURL(blob)}else{r.blob().then(function(blob){_self.dispatchEvent(new CustomEvent("response",{detail:URL.createObjectURL(blob),bubbles:!0,composed:!0}))})}},"image/jpeg":r=>{if(this.xhrFallback){let blob=new Blob([r.response],{type:"image/jpeg"}),fileReader=new FileReader;fileReader.onload=function(evt){var result=evt.target.result;_self.dispatchEvent(new CustomEvent("response",{detail:result,bubbles:!0,composed:!0}))};fileReader.readAsDataURL(blob)}else{r.blob().then(function(blob){_self.dispatchEvent(new CustomEvent("response",{detail:URL.createObjectURL(blob),bubbles:!0,composed:!0}))})}},default:r=>{if(this.xhrFallback){this.dispatchEvent(new CustomEvent("response",{detail:JSON.parse(r.response),bubbles:!0,composed:!0}))}else{r.json().then(function(json){_self.dispatchEvent(new CustomEvent("response",{detail:json,bubbles:!0,composed:!0}))})}}},typeHandler=responseHandler[contentType]||responseHandler["default"];typeHandler(response)}}}customElements.define("api-fetch",ApiFetch);class CollectionControls extends EventTreeNode{constructor(collectionAgent,type,specs){super();this.collectionAgent=collectionAgent;this.paginaton={first:!1,next:!0,prev:!0,last:!1,currentPage:1,pageSize:this.pageSize,numOfRecords:23};this.filter={};this.order={};this.info={fields:this.collectionAgent.fields}}}_exports.CollectionControls=CollectionControls;var CollectionControls$1={CollectionControls:CollectionControls};_exports.$CollectionControls=CollectionControls$1;class collectionAgent extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this._servicedefinitions=_furoShell.Env.api.services;this._ApiEnvironment=_furoShell.Env.api;// HTS aus response anwenden
this._FBPAddWireHook("--responseParsed",r=>{if(this._updateInternalHTS(r.links)){/**
         * @event response-hts-updated
         * Fired when
         * detail payload: hts
         */let customEvent=new Event("response-hts-updated",{composed:!0,bubbles:!0});customEvent.detail=r.links;this.dispatchEvent(customEvent)}});this._singleElementQueue=[];//queue for calls, before hts is set
this._queryParams={}}static get properties(){return{/**
       * Name des Services
       */service:{type:String,attribute:!0},pageSize:{type:Number,attribute:"page-size"},fields:{type:String,attribute:!0},orderBy:{type:String,attribute:"order-by"},filter:{type:Array,attribute:!0},view:{type:String,attribute:!0},listOnHtsIn:{type:Boolean,attribute:"list-on-hts-in"}}}firstUpdated(){super.firstUpdated();/**
                           * @event collection-controls
                           * Fired when
                           * detail payload:
                           */let customEvent=new Event("collection-controls",{composed:!0,bubbles:!0});customEvent.detail=new CollectionControls(this,this.service,this._servicedefinitions);setTimeout(()=>{this.dispatchEvent(customEvent)},0)}/**
     * https://cloud.google.com/apis/design/design_patterns
     */ /**
         * Partielle Repräsentation
         * https://cloud.google.com/apis/design/design_patterns#partial_response
         *
         * etwas seltsam, aber google sieht hier $fields vor. Wird aber nicht so verwendet
         *
         */setFields(fields){this.fields=fields}/**
     * Sortierreihenfolge
     * https://cloud.google.com/apis/design/design_patterns#sorting_order
     *
     * To avoid sql injection errors we do not send sql like syntax!
     *
     * order-by="foo,-bar"  means foo asc and bar desc
     */setOrderBy(order){this.orderBy=order}/**
     * clear filter
     */clearFilter(){this._filter=void 0}// Filtern  [["user","eq","12345"], ["abgeschlossen","eq", true]]
setFilter(filterstring){if(Array.isArray(filterstring)){this.filter=filterstring}}set filter(f){this._filter=f;/**
                       * @event filter-updated
                       * Fired when filter was updated with ƒ-set-filter
                       * detail payload:
                       */let customEvent=new Event("filter-changed",{composed:!0,bubbles:!0});customEvent.detail=this;this.dispatchEvent(customEvent)}// Gewünschte Seite. Tipp: Folge dem HATEOAS
// Seitengrösse  page_size
// Meta für die Anzahl der Elemente der Resource
/**
   * contextbezogene Darstellung
   *
   * https://cloud.google.com/apis/design/design_patterns#resource_view
   *
   * view=smallcards
   *
   */ /**
       * Setze den Service
       * @param service
       */set service(service){if(!this._servicedefinitions[service]){console.error("service "+service+" does not exist",this,"Available Services:",this._servicedefinitions);return}this._service=this._servicedefinitions[service];if(this._service.general.lifecycle.deprecated){console.warn("You are using a deprecated service ("+service+") "+this._service.general.lifecycle.info)}// set pagination defaults
}bindRequestObject(entityTree){this._entityTree=entityTree}/**
     * Update query params
     * a qp like {"active":true} will just update the qp *active*
     *
     * If the current value of the qp is not the same like the injected value, a qp-changed event will be fired
     * @param {Object} key value pairs
     */updateQp(qp){let qpChanged=!1;for(let key in qp){if(qp.hasOwnProperty(key)){if(this._queryParams[key]!=qp[key]){qpChanged=!0}this._queryParams[key]=qp[key]}}if(qpChanged){/**
      * @event qp-changed
      * Fired when query params changed
      * detail payload: qp
      */let customEvent=new Event("qp-changed",{composed:!0,bubbles:!0});customEvent.detail=this._queryParams;this.dispatchEvent(customEvent)}}_makeRequest(link,body){let data;if(body){data=JSON.stringify(body)}// Daten
let headers=new Headers(this._ApiEnvironment.headers);headers.append("Content-Type","application/"+link.type+"+json");headers.append("Content-Type","application/json");let params={},r=link.href.split("?"),req=r[0];// add existing params from href
if(r[1]){r[1].split("&").forEach(p=>{let s=p.split("=");params[s[0]]=s[1]})}// append query params
// query params
for(let key in this._queryParams){if(this._queryParams.hasOwnProperty(key)){params[key]=this._queryParams[key]}}// Fields
if(this.fields){params.fields=this.fields.split(" ").join("")}// Sort
if(this.orderBy){params.order_by=this.orderBy.split(" ").join("")}// Filter
if(this._filter){params.filter=JSON.stringify(this._filter)}// rebuild req
let qp=[];for(let key in params){if(params.hasOwnProperty(key)){qp.push(key+"="+params[key])}}if(0<qp.length){req=req+"?"+qp.join("&")}return new Request(req,{method:link.method,headers:headers,body:data})}_checkServiceAndHateoasLinkError(rel,serviceName){// check Service Get
if(!this._service.services[serviceName]){// todo fehler werfen ???
console.warn("Restlet "+serviceName+" is not specified",this._service,this);return!0}//queue if no hts is set, queue it
if(!this._hts){this._singleElementQueue=[[rel,serviceName]];return!0}// check Hateoas
if(!this._hts[rel]){console.warn("No HATEOAS for rel self",this._hts,this);return!0}return!1}_followRelService(rel,serviceName){if(this._checkServiceAndHateoasLinkError(rel,serviceName)){return}this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts[rel]))}/**
     * loads the entity if hts is available
     */list(){this._followRelService("list","List")}search(term){if(""!==term){this._queryParams.q=term;this.list()}else{delete this._queryParams.q}}/**
     * loads the entity if hts is available
     */first(){this._followRelService("first","List")}/**
     * loads the entity if hts is available
     */prev(){this._followRelService("prev","List")}/**
     * loads the entity if hts is available
     */next(){this._followRelService("next","List")}/**
     * loads the entity if hts is available
     */last(){this._followRelService("last","List")}_updateInternalHTS(hts){// convert link object to hts array
if(hts&&hts.rel&&hts.method&&hts.type&&hts.href){hts=[hts]}if(hts&&hts[0]&&hts[0].rel){this._hts={};hts.forEach(link=>{this._hts[link.rel]=link});/**
           * @event hts-updated
           * Fired when hateoas is updated from response
           * detail payload: {Array|HATEOAS}
           */let customEvent=new Event("hts-updated",{composed:!0,bubbles:!1});customEvent.detail=hts;this.dispatchEvent(customEvent);return!0}return!1}htsIn(hts){if(this._updateInternalHTS(hts)){/**
       * @event hts-updated
       * Fired when hateoas is updated
       * detail payload: Hateoas links
       */let customEvent=new Event("hts-injected",{composed:!0,bubbles:!1});customEvent.detail=hts;this.dispatchEvent(customEvent);if(this.listOnHtsIn){this.list()}// there was a list,last,next call before the hts was set
if(0<this._singleElementQueue.length){let q=this._singleElementQueue.pop();this._followRelService(q[0],q[1])}}}render(){// language=HTML
return _furoShell.html`
      <!-- Add a style block here -->
      <style>
        :host {
          display: none;
        }
      </style>
      <api-fetch
              ƒ-invoke-request="--triggerLoad"
              ƒ-abort-request="--abort-demanded"
              @-response="--responseParsed">
      </api-fetch>
    `}}customElements.define("collection-agent",collectionAgent);class CollectionNode extends EventTreeNode{constructor(parentNode,type,specs){super(parentNode);this.__specdefinitions=specs;this._spec=this.__specdefinitions[type];this.data=[]}injectRaw(rawResponse){//daten aktualisieren
this.data=rawResponse.data;this.dispatchNodeEvent(new NodeEvent("data-changed",this.data))}_templateMe(template,data){const pattern=/\{(.*?)\}/g;return template.replace(pattern,(match,token)=>data[token])}}_exports.CollectionNode=CollectionNode;var CollectionNode$1={CollectionNode:CollectionNode};_exports.$CollectionNode=CollectionNode$1;class CollectionObject extends _furoShell.LitElement{constructor(){super();this._specs=_furoShell.Env.api.specs}injectRaw(jsonObj){this.collection.injectRaw(jsonObj)}// make the collection Object empty
clear(){this.collection.injectRaw({data:[]})}set type(type){if(this._type){this._checkType(type)}this._type=type}_checkType(type){if(this._specs[type]===void 0){/**
       * @event spec-error
       * Fired when spec could not be loaded
       * detail payload: {string} spec name
       */let customEvent=new Event("spec-error",{composed:!0,bubbles:!0});customEvent.detail=type;setTimeout(()=>{this.dispatchEvent(customEvent)},0);return}this.collection=new CollectionNode(null,type,this._specs);this.collection.addEventListener("data-changed",e=>{/**
      * @event data-changed
      * Fired when data in collection has changed
      * detail payload: {Object|CollectionNode}
      */let customEvent=new Event("data-changed",{composed:!0,bubbles:!0});customEvent.detail=this.collection;this.dispatchEvent(customEvent)});/**
         * @event object-ready
         * Fired when
         * detail payload:
         */let customEvent=new Event("object-ready",{composed:!0,bubbles:!0});customEvent.detail=this.collection;setTimeout(()=>{this.dispatchEvent(customEvent)},0)}static get properties(){return{/**
       * Ein Entitätenbaum mit allen Feldern
       */collection:{type:Object},/**
       * Name der Spec
       */type:{type:String}}}firstUpdated(){super.firstUpdated();// queueing
if(this._type){this._checkType(this._type)}}}window.customElements.define("collection-object",CollectionObject);class CustomMethod extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this._servicedefinitions=_furoShell.Env.api.services;this._ApiEnvironment=_furoShell.Env.api}static get properties(){return{/**
       * Name des Services
       */service:{type:String,attribute:!0},/**
       * Name der Methode
       */method:{type:String,attribute:!0}}}/**
     * Setze den Service
     * @param service
     */set service(service){if(!this._servicedefinitions[service]){console.error("service "+service+" does not exist",this,"Available Services:",this._servicedefinitions);return}this._service=this._servicedefinitions[service];if(this._service.general.lifecycle.deprecated){console.warn("You are using a deprecated service ("+service+") "+this._service.general.lifecycle.info)}}bindRequestObject(entityTree){this._entityTree=entityTree}bindData(entityTree){this._entityTree=entityTree}_makeRequest(link,body){let data;if(body){data=JSON.stringify(body)}// Daten
let headers=new Headers(this._ApiEnvironment.headers);headers.append("Content-Type","application/"+link.type+"+json");headers.append("Content-Type","application/json");return new Request(link.href,{method:link.method,headers:headers,body:data})}_checkServiceAndHateoasLinkError(rel,serviceName){// check Service Get
let s=Object.keys(this._service.services).map(key=>{return key.toLowerCase()});if(-1===s.indexOf(serviceName.toLowerCase())){// todo fehler werfen ???
console.warn("Restlet "+serviceName+" is not specified",this._service,this);return!0}// check Hateoas
if(!this._hts[rel]){console.warn("No HATEOAS for rel self",this._hts,this);return!0}return!1}/**
     * trigger the method with respect for binded-requset-object
     */trigger(){if(this._entityTree){this.triggerWithBody(this._entityTree.rawData)}else{this.triggerEmpty()}}triggerEmpty(){if(this._checkServiceAndHateoasLinkError(this.method,this.method)){return}this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts[this.method]))}/**
     * trigger the method with data
     */triggerWithBody(body){if(this._checkServiceAndHateoasLinkError(this.method,this.method)){return}this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts[this.method],body))}htsIn(hts){if(hts&&hts[0]&&hts[0].rel){this._hts={};hts.forEach(link=>{this._hts[link.rel]=link});/**
          * @event hts-updated
          * Fired when
          * detail payload:
          */let customEvent=new Event("hts-updated",{composed:!0,bubbles:!0});customEvent.detail=hts;this.dispatchEvent(customEvent)}}render(){// language=HTML
return _furoShell.html`
      <!-- Add a style block here -->
      <style>
        :host {
          display: none;
        }
      </style>
      <api-fetch
              ƒ-invoke-request="--triggerLoad"
              ƒ-abort-request="--abort-demanded"
              @-response="--responseParsed">
      </api-fetch>
    `}}window.customElements.define("custom-method",CustomMethod);class DeepLink extends _furoShell.LitElement{constructor(){super();this._servicedefinitions=_furoShell.Env.api.services;this._qp={}}static get properties(){return{/**
       * @type {object|QueryParams} Query Params
       */qp:{type:Object},/**
       * Name des Services
       */service:{type:String,attribute:!0}}}/**
     * Evaluates hts. Use qpIn(qp) if you have a qp object in your event.detail
     */trigger(){if(this._qp&&this._service){this._buildHTS(this._qp,this._service)}}_buildHTS(qp,service){this._hts=[];// loop services
for(let serviceName in service.services){let candidate={rel:service.services[serviceName].deeplink.rel,href:service.services[serviceName].deeplink.href,method:service.services[serviceName].deeplink.method,type:service.services[serviceName].request};for(let param in this._qp){candidate.href=candidate.href.replace("{"+param+"}",this._qp[param])}//wenn es keine {xx} mehr hat, ist es ein treffer
if(-1===candidate.href.indexOf("{")){//candidate.type = "application/" + candidate.type + "+json"
this._hts.push(candidate)}}if(this._hts.length){/**
       * @event hts-out
       * Fired when hateoas is available
       * detail payload: {[]Links} Array of hateoas links
       */let customEvent=new Event("hts-out",{composed:!0,bubbles:!0});customEvent.detail=this._hts;this.dispatchEvent(customEvent)}}/**
     * set queryParams and evaluate for hateoas
     * @param queryParams
     */qpIn(queryParams){this._qp=queryParams;this.trigger()}/**
     * Deprecated
     *
     * Set QP via attribute (for polymer 3 compatibility), use ƒ-qp-in (qpIn) instead
     * @param qp
     */set qp(qp){// zwischenspeichern für einen ev. ƒ-trigger
console.warn("setting the qp via attribute is deprecated, use \u0192-qp-in instead");console.warn("This feature will be removed in Q3-2019",this);this._qp=qp;this.trigger()}/**
     * Deprecated
     *
     * use ƒ-qp-in instead
     *
     * Inject a QueryParams (key value) Object
     * @param {object|QueryParams} qp
     */injectQueryParams(qp){console.warn("injectQueryParams is deprecated, use \u0192-qp-in instead");console.warn("This feature will be removed in Q3-2019",this);// zwischenspeichern für einen ev. ƒ-trigger
this._qp=qp;this.trigger()}/**
     * Sets the service
     *
     * Services must be registered like:
     *
     * ```html
     * import {Services,Types} from "./apiConfig.js"
     * Init.registerApiServices(Services);
     * Init.registerApiTypes(Types);
     * ```
     * Usually this is done in your main-app.js
     *
     * @param serviceName
     */setService(serviceName){this.service=serviceName}/**
     * Setze den Service
     * @param service
     */set service(service){if(this._servicedefinitions[service]){this._service=this._servicedefinitions[service];if(this._service.general.lifecycle.deprecated){console.warn("You are using a deprecated service ("+service+") "+this._service.general.lifecycle.info)}}else{console.error("service "+service+" does not exist",this,"Available Services:",this._servicedefinitions)}}}window.customElements.define("deep-link",DeepLink);class ReverseDeepLink extends _furoShell.LitElement{constructor(){super();this.service="";this._services=_furoShell.Env.api.services}/**
     * converts the href of a LinkObject
     *
     * @param {object|linkObject} {object|rawEntity} {object|rawCollection} data
     * @return {object|QueryParams} Object with query params key value
     */convert(data){let qp={};if(this._services[this.service]===void 0){console.warn(this.service," service is not defined",this);return}this._serviceDef=this._services[this.service].services;let linkObject=data;// Entity or Collection
if(Array.isArray(data.links)){if(data&&Array.isArray(data.data)){// is collection
// default rel if not set
if(!this.rel){this.rel="list"}}else{// is entity
if(!this.rel){this.rel="self"}}linkObject=data.links.filter(e=>{return e.rel.toLowerCase()===this.rel.toLowerCase()})[0]}// Links Array
if(Array.isArray(data)){linkObject=data.filter(e=>{return e.rel===this.rel})[0]}if(linkObject){qp=this._convert(linkObject)}/**
       * @event converted
       * Fired when input was converted
       * detail payload: {object|QueryParams}
       */let customEvent=new Event("converted",{composed:!0,bubbles:!0});customEvent.detail=qp;this.dispatchEvent(customEvent);return qp}_convert(link){let linkObject={rel:link.rel,href:link.href,method:link.method,type:link.type};if("self"===linkObject.rel){linkObject.rel="Get"}linkObject.rel=linkObject.rel.charAt(0).toUpperCase()+linkObject.rel.slice(1);let pattern=this._serviceDef[linkObject.rel].deeplink.href,rgx=/{([^}]*)}/gi,keys=[],m;while(null!==(m=rgx.exec(pattern))){pattern=pattern.replace(m[0],"(.*)");keys.push(m[1])}let srgx=new RegExp(pattern+"$"),qp={},matches=srgx.exec(linkObject.href);if(matches){keys.forEach((e,i)=>{qp[e]=matches[i+1]})}return qp}static get properties(){return{/**
       * Name of service
       */service:{type:String},/**
       * Optional rel to convert.
       *
       * Not needed if you inject a link object.
       *
       * If you insert an entity rel self is taken. If you insert a collection, rel list is used.
       */rel:{type:String}}}}window.customElements.define("reverse-deep-link",ReverseDeepLink);class EntityNode extends EventTreeNode{constructor(parentNode,type,specs){super(parentNode);this.__specdefinitions=specs;this._spec=this.__specdefinitions[type];this.addChildProperty("fields");this.fields.__specdefinitions=this.__specdefinitions;this._initFieldsFromSpec(this.fields,this._spec.fields);this._pristine=!0;this._isValid=!0;/**
                           * Schaltet ein Feld auf valid, müssen wir alle Felder auf validity prüfen...
                           */this.addEventListener("field-became-valid",e=>{if(0===this.fields.__childNodes.filter(f=>!f._isValid).length){this._isValid=!0;this.dispatchNodeEvent(new NodeEvent("entity-became-valid",this))}});/**
         * Schaltet ein Feld auf invalid ist die Entity ebenfalls invalid
         */this.addEventListener("field-became-invalid",e=>{this._isValid=!1;this.dispatchNodeEvent(new NodeEvent("entity-became-invalid",this))});/**
         * Wird ein Wert geändert gilt das form ebenfalls nicht mehr als jungfräulich
         */this.addEventListener("field-value-changed",e=>{this._pristine=!1})}/**
     * Injecten eines raw models wie bspw body oder entity einer collection
     * @param rawEntity
     */injectRaw(rawEntity){this._rawEntity=rawEntity;let meta={};if(rawEntity.meta){meta=rawEntity.meta.fields}this._updateFieldValuesAndMetaFromRawEntity(this.fields,rawEntity.data,meta);this._pristine=!0;this._isValid=!0;if(rawEntity.error&&rawEntity.details){rawEntity.details.forEach(errorSet=>{if(errorSet.field_violations){this._handleErrorsFromRawEntity(this.fields,errorSet.field_violations)}})}this.dispatchNodeEvent(new NodeEvent("data-injected",this,!0))}/**
     * Resete zum letzten injectet state zurück
     */reset(){if(this._rawEntity){this.injectRaw(this._rawEntity)}}/**
     * Inits the EntityNode without breaking the reference
     */init(){this._initFieldsFromSpec(this.fields,this._spec.fields);this._pristine=!0;this._isValid=!0}get rawEntity(){return this._rawEntity}get rawData(){return this.getRawData()}getRawData(){let data={};// nur reine Daten zurück geben
for(let index in this.fields.__childNodes){let field=this.fields.__childNodes[index];data[field._name]=field.value}return data}_updateFieldValuesAndMetaFromRawEntity(node,data,dynamicFieldMeta){for(let fieldName in data){let fieldNode=node[fieldName];if(!fieldNode){console.warn("unspecified field",fieldName)}else{if(fieldNode._isRepeater){let initialSize=fieldNode.repeats.length;//fieldNode.removeAllChildren();
// update records
data[fieldName].forEach((repdata,i)=>{// create if record index do not exist
if(!fieldNode.repeats[i]){fieldNode._addSilent()}let repMeta={};if(dynamicFieldMeta[fieldName]){if(dynamicFieldMeta[fieldName].fields){repMeta=dynamicFieldMeta[fieldName].fields}}// Werte aktualisieren
fieldNode.repeats[i].value=repdata;fieldNode.repeats[i]._pristine=!0;fieldNode.repeats[i].__index=i});// entferne überzählige nodes
let newSize=data[fieldName].length;if(newSize<fieldNode.repeats.length){fieldNode.repeats.splice(newSize)}fieldNode._pristine=!0;fieldNode.dispatchNodeEvent(new NodeEvent("repeated-fields-changed",fieldNode.repeats,!0))}else{if(fieldNode){fieldNode._clearInvalidity();let meta={},submeta={};// Kommen neue metas von draussen rein
if(dynamicFieldMeta[fieldName]){meta=dynamicFieldMeta[fieldName];// setze node Meta wenn neue metas gekommen sind
// TODO @veith Metas mischen und nicht überklatschen, ev immer von spec meta aus und nicht von runtime meta
if(meta.constraints){for(let key in meta.constraints){fieldNode._constraints[key]=meta.constraints[key]}}if(meta.meta){for(let key in meta.meta){fieldNode._meta[key]=meta.meta[key]}}if(meta.options){for(let key in meta.options){fieldNode._options[key]=meta.options[key]}}// hat es meta für subfelder
if(meta.fields){submeta=meta.fields}}// Werte aktualisieren
fieldNode.value=data[fieldName];fieldNode._pristine=!0}}}}}_handleErrorsFromRawEntity(fields,fieldErrors){fieldErrors&&fieldErrors.map(error=>{if(error.description){error.message=error.description}let path=error.field.split(".");if(0<path.length){// rest wieder in error reinwerfen
error.field=path.slice(1).join(".");if(fields[path[0]]){fields[path[0]]._setInvalid(error)}else{console.warn("Unknown field",path)}}})}/**
     * Baut die Felder aufgrund der spec auf
     * @param node
     * @param fieldSpec
     * @private
     */_initFieldsFromSpec(node,fieldSpec){for(let fieldName in fieldSpec){if(fieldSpec[fieldName].meta&&fieldSpec[fieldName].meta.repeated){node[fieldName]=new RepeaterNode(node,fieldSpec[fieldName],fieldName)}else{node[fieldName]=new FieldNode(node,fieldSpec[fieldName],fieldName)}}}toString(){return this.spec.mimetype}}_exports.EntityNode=EntityNode;var EntityNode$1={EntityNode:EntityNode};_exports.$EntityNode=EntityNode$1;class EntityObject extends _furoShell.LitElement{constructor(){super();this._specs=_furoShell.Env.api.specs}static get properties(){return{/**
       * Name der Spec
       */type:{type:String}}}injectPlainData(data){this.injectRaw({data:data})}/**
     * inject a raw entity json {data:..,links:...,meta,..-}
     * @param jsonObj
     */injectRaw(jsonObj){// queue inject bis entity bereit ist
if(!this.entity){setTimeout(()=>{this.injectRaw(jsonObj)},0)}else{this.entity.injectRaw(jsonObj)}}set type(type){if(this._type){this._checkType(type)}this._type=type}_checkType(type){if(this._specs[type]===void 0){console.warn("Type does not exist.",type,this,this._specs);return}/**
       * create the entity node
       * @type {EntityNode}
       */this.entity=new EntityNode(null,type,this._specs);/**
                                                            * @event object-ready
                                                            * Fired when
                                                            * detail payload:
                                                            */let customEvent=new Event("object-ready",{composed:!0,bubbles:!0});customEvent.detail=this.entity;setTimeout(()=>{this.dispatchEvent(customEvent)},0);this.entity.addEventListener("data-injected",e=>{/**
      * @event data-injected
      * Fired when injected data was processed.
      * detail payload: {Object|EntityNode} reference to entity
      */let customEvent=new Event("data-injected",{composed:!0,bubbles:!0});customEvent.detail=e.detail;this.dispatchEvent(customEvent)});this.entity.addEventListener("field-value-changed",e=>{/**
       * @event data-changed
       * Fired when data in collection has changed
       * detail payload: {Object|CollectionNode}
       */let customEvent=new Event("data-changed",{composed:!0,bubbles:!0});customEvent.detail=this.entity.rawData;this.dispatchEvent(customEvent);/**
                                        * @event (field-value-changed)
                                        *
                                        * ✋ Internal Event!
                                        *
                                        * Fired when a value on a field node changes. This event **bubbles** by default. Can be used on any node.
                                        *
                                        * detail payload: **{NodeEvent}** with reference to the FieldNode
                                        */ /**
                                            * @event (this-field-value-changed)
                                            *
                                            * ✋ Internal Event!
                                            *
                                            * Fired when a value on a particular field node changes. This event **does not bubble**. Can be used on any node.
                                            *
                                            * detail payload: **{NodeEvent}** with reference to the FieldNode
                                            */ /**
                                                * @event (data-injected)
                                                *
                                                * ✋ Internal Event!
                                                *
                                                * Fired when `ƒ-inject-raw` is completed and fresh data was injected. Only fired from EntityNode which is the root.
                                                *
                                                * This event **bubbles**.
                                                *
                                                * detail payload: **{NodeEvent}**
                                                */})}/**
     * Inits internal entity
     * References will still be valid
     */init(){this.entity.init();let customEvent=new Event("object-ready",{composed:!0,bubbles:!0});customEvent.detail=this.entity;setTimeout(()=>{this.dispatchEvent(customEvent)},0)}firstUpdated(){super.firstUpdated();// queueing
if(this._type){this._checkType(this._type)}// data objects
this._entityFields=this.querySelectorAll("entity-field");// console.log("todo",this._entityFields);
}}window.customElements.define("entity-object",EntityObject);class EntityAgent extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this._servicedefinitions=_furoShell.Env.api.services;this._ApiEnvironment=_furoShell.Env.api;// HTS aus response anwenden
this._FBPAddWireHook("--responseParsed",r=>{if(this._updateInternalHTS(r.links)){/**
         * @event response-hts-updated
         * Fired when
         * detail payload: hts
         */let customEvent=new Event("response-hts-updated",{composed:!0,bubbles:!0});customEvent.detail=r.links;this.dispatchEvent(customEvent)}});this._singleElementQueue=[];//queue for calls, before hts is set
}static get properties(){return{/**
       * Name des Services
       */service:{type:String,attribute:!0}}}/**
     * Setze den Service
     * @param service
     */set service(service){if(!this._servicedefinitions[service]){console.error("service "+service+" does not exist",this,"Available Services:",this._servicedefinitions);return}this._service=this._servicedefinitions[service];if(this._service.general.lifecycle.deprecated){console.warn("You are using a deprecated service ("+service+") "+this._service.general.lifecycle.info)}}bindRequestObject(entityTree){this._entityTree=entityTree}_makeRequest(link,body){let data;if(body){data=JSON.stringify(body)}// Daten
let headers=new Headers(this._ApiEnvironment.headers);headers.append("Content-Type","application/"+link.type+"+json");if("put"!==link.method.toLowerCase()){headers.append("Content-Type","application/json")}return new Request(link.href,{method:link.method,headers:headers,body:data})}_checkServiceAndHateoasLinkError(rel,serviceName){// check Service Get
if(!this._service.services[serviceName]){console.warn("Restlet "+serviceName+" is not specified",this._service,this);return!0}//queue if no hts is set, queue it
if(!this._hts){this._singleElementQueue=[[rel,serviceName]];return!0}// check Hateoas
if(!this._hts[rel]){console.warn("No HATEOAS for rel self",this._hts,this);return!0}return!1}/**
     * @event load-success
     * Fired when load was successful
     * detail payload: response
     */ /**
         * @event load-failed
         * Fired when load was not successful
         * detail payload: response
         */ /**
             * loads the entity if hts is available
             */load(){if(this._checkServiceAndHateoasLinkError("self","Get")){return}this._attachListeners("load");this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts.self))}/**
     * @event delete-success
     * Fired when load was successful
     * detail payload: response
     */ /**
         * @event delete-failed
         * Fired when load was not successful
         * detail payload: response
         */ /**
             * delete the entity if hts is available
             */delete(){if(this._checkServiceAndHateoasLinkError("delete","Delete")){return}this._attachListeners("delete");this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts.delete))}/**
     * @event save-success
     * Fired when load was successful
     * detail payload: response
     */ /**
         * @event save-failed
         * Fired when load was not successful
         * detail payload: response
         */ /**
             * loads the entity if hts is available
             */save(){// wen kein rel self vorhanden ist, aber ein rel create existiert, verwendenn wir create
// rel self ist bewusst gewählt
if(!this._hts.self){this.create();return}if(this._checkServiceAndHateoasLinkError("update","Update")){return}this._attachListeners("save");// TODO nur delta senden
this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts.update,this._entityTree.rawData))}/**
     * @event create-success
     * Fired when load was successful
     * detail payload: response
     */ /**
         * @event create-failed
         * Fired when load was not successful
         * detail payload: response
         */ /**
             * loads the entity if hts is available
             */create(){if(this._checkServiceAndHateoasLinkError("create","Create")){return}this._attachListeners("create");this._FBPTriggerWire("--triggerLoad",this._makeRequest(this._hts.create,this._entityTree.rawData))}/**
     * Attaches temporary listeners to fire load-success, load-fail, delete-success,...
     * @param eventPrefix
     * @private
     */_attachListeners(eventPrefix){let success=e=>{// we do not want req-success and req-failed outside of this component
e.stopPropagation();let customEvent=new Event(eventPrefix+"-success",{composed:!0,bubbles:!0});customEvent.detail=e.detail;this.dispatchEvent(customEvent);// remove listeners
this.removeEventListener("req-success",success,!0);this.removeEventListener("req-failed",failed,!0)},failed=e=>{// we do not want req-success and req-failed outside of this component
e.stopPropagation();let customEvent=new Event(eventPrefix+"-failed",{composed:!0,bubbles:!0});customEvent.detail=e.detail;this.dispatchEvent(customEvent);// remove listeners
this.removeEventListener("req-success",success,!0);this.removeEventListener("req-failed",failed,!0)};/**
        * do not add the listener directly to response, otherwise it kicks in before hts is updated
        * This extra "loop" is to guarante the order of handling the events
        */this.addEventListener("req-success",success,!0);this.addEventListener("req-failed",failed,!0)}_updateInternalHTS(hts){// convert link object to hts array
if(hts&&hts.rel&&hts.method&&hts.type&&hts.href){hts=[hts]}if(hts&&hts[0]&&hts[0].rel){this._hts={};hts.forEach(link=>{this._hts[link.rel]=link});/**
           * @event hts-updated
           * Fired when hateoas is updated from response
           * detail payload: {Array|HATEOAS}
           */let customEvent=new Event("hts-updated",{composed:!0,bubbles:!1});customEvent.detail=hts;this.dispatchEvent(customEvent);return!0}return!1}htsIn(hts){if(this._updateInternalHTS(hts)){/**
       * @event hts-injected
       * Fired when hateoas is updated
       * detail payload: Hateoas links
       */let customEvent=new Event("hts-injected",{composed:!0,bubbles:!1});customEvent.detail=hts;this.dispatchEvent(customEvent);// there was a list,last,next call before the hts was set
if(0<this._singleElementQueue.length){let q=this._singleElementQueue.pop();this._followRelService(q[0],q[1])}}}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.css`
              :host {
                  display: none;
              }
          `}/**
     * @private
     * @return {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`        
      <api-fetch
              ƒ-invoke-request="--triggerLoad"
              ƒ-abort-request="--abort-demanded"
              @-response="--responseParsed,^^req-success"
              @-response-error="^^req-failed">
      </api-fetch>
    `}}window.customElements.define("entity-agent",EntityAgent);class EntityValidator extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.checks={};this._initChecks()}_initChecks(){this.checks.string={min:field=>{let constraint=field._constraints.min;if(field.value.length<constraint.value){if(constraint.message){return{message:constraint.message,constraint:"min"}}return{message:"Mindestens "+constraint.value+" Zeichen",constraint:"min"}}return null},max:field=>{let constraint=field._constraints.max;if(field.value.length>constraint.value){if(constraint.message){return{message:constraint.message,constraint:"max"}}return{message:"Maximal "+constraint.value+" Zeichen",constraint:"max"}}return null},mandatory:field=>{let constraint=field._constraints.required;if(0===field.value.length){return{message:"Eingabe erforderlich",constraint:"mandatory"}}return null}};this.checks.int={min:field=>{let constraint=field._constraints.min;if(field.value<constraint.value){return{message:"Mindestens "+constraint.value+" Zeichen",constraint:"min"}}return null},max:field=>{let constraint=field._constraints.max;if(field.value>constraint.value){if(constraint.message){return{message:constraint.message,constraint:"max"}}return{message:"Maximal "+constraint.value+" Zeichen",constraint:"max"}}return null}}}bindData(fields){let self=this;// this.validator ist hier wegen dem hoisting...
this.validator=e=>{let field=e.target,type=field._spec.type;// nur prüfen wenn field constraints  und checker existieren
if(field._constraints&&this.checks[type]){let err;for(let constraint in field._constraints){if(this.checks[type][constraint]){err=this.checks[type][constraint](field)}if(err){field._setInvalid(err);// bei erstem fehler aufhören
return}else{// nur zurücksetzen wenn das field ungültig war
if(!field._isValid){field._clearInvalidity()}}}}};fields.addEventListener("field-value-changed",this.validator);this._FBPTriggerWire("--dataInjected",fields);/** TODO: eventqueue wie in FBP aufbauen??
                                                     setTimeout(()=>{
                                                      //check all field on init
                                                      fields.__childNodes.map(e=>{
                                                        let field = {target:e};
                                                        this.validator(field)
                                                      });
                                                    },16);
                                                     */}}window.customElements.define("entity-validator",EntityValidator);class EntityField extends _furoShell.LitElement{constructor(){super()}setValue(v){this.value=v}set value(v){this._value=v;this.field.value=v}get value(){return this._value}bindData(d){if(d===void 0){console.warn("Invalid binding ");console.log(this);return}this.field=d;this.field.addEventListener("field-value-changed",e=>{// updates wieder einspielen
/**
      * @event value-changed
      * Fired when
      * detail payload:
      */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=e.detail.value;this.dispatchEvent(customEvent)})}}customElements.define("entity-field",EntityField);class FuroFilterContainer extends(0,_furoShell.FBP)(HTMLElement){constructor(){super();this.style.display="none";this.type=this.getAttribute("type");// find .querySelectorAll("simple-filter-field")
let filterFields=this.querySelectorAll("simple-filter-field");if(null!=filterFields){filterFields.forEach(f=>{// set types to children
f.type=this.type})}// register changes
this.addEventListener("furo-filter-field-changed",e=>{// baum für filter aufbauen
let filter=[];this._scanfilterFields(this,filter);if(0<filter.length){// debounce filters for 16ms
clearTimeout(this._debounce);this._debounce=setTimeout(()=>{/**
           * @event filter-changed
           * Fired when filter changed
           * detail payload: filter
           */let customEvent=new Event("filter-changed",{composed:!0,bubbles:!0});customEvent.detail=filter;console.log(JSON.stringify(filter));this.dispatchEvent(customEvent)},16)}else{/**
         * @event filter-cleared
         * Fired when filter is empty
         * detail payload: none
         */let customEvent=new Event("filter-cleared",{composed:!0,bubbles:!0});this.dispatchEvent(customEvent)}},!0)}_appendAnd(node,filterArray){let andFilter=filterArray;for(let index=0,el;index<node.children.length;index++){el=node.children[index];if("FURO-FILTER-FIELD"===el.tagName){if(el._value){let f=[el._field,el._is,el._value];if(index+1<node.children.length){f.push([])}andFilter.push(f);andFilter=f[3]}}else{if("FURO-FILTER-AND"===el.tagName){// append to index3
this._appendAnd(el,andFilter)}if("FURO-FILTER-OR"===el.tagName){this._appendOr(el,andFilter)}}}}_appendOr(node,filterArray){for(let index=0,el;index<node.children.length;index++){el=node.children[index];if("FURO-FILTER-FIELD"===el.tagName){if(el._value){let f=[el._field,el._is,el._value];// oder reinpushen
filterArray.push(f)}}else{let sub=[];filterArray.push(sub);if("FURO-FILTER-AND"===el.tagName){// append to index3
this._appendAnd(el,sub)}if("FURO-FILTER-OR"===el.tagName){this._appendOr(el,sub)}}}}_scanfilterFields(node,filterArray){for(let index in node.children){let el=node.children[index];if("FURO-FILTER-AND"===el.tagName){// append to index3
this._appendAnd(el,filterArray)}if("FURO-FILTER-OR"===el.tagName){this._appendOr(el,filterArray)}}}}window.customElements.define("furo-filter-container",FuroFilterContainer);class FuroFilterField extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}/**
     * @private
     * @return {Object}
     */static get properties(){return{is:{type:String},field:{type:String},value:{type:String}}}set is(val){this._is=val;this._notifyChanges()}set field(val){this._field=val;this._notifyChanges()}set value(val){this._value=val;this._notifyChanges()}_notifyChanges(){if(this._field&&this._value!==void 0&&this._is){/**
       * @event furo-filter-changed
       * Fired when something changed
       * detail payload:
       */let customEvent=new Event("furo-filter-field-changed",{composed:!0,bubbles:!0});customEvent.detail=this;this.dispatchEvent(customEvent)}}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.css`
        :host {
            display: none;
        }
    `}}window.customElements.define("furo-filter-field",FuroFilterField);class RelExists extends _furoShell.LitElement{constructor(){super()}/**
     * Inject a HTS Link Array to receive a `rel-exist` or a `rel-dont-exist` event.
     *
     * inject returns true for existing links and false for non existing links.
     *
     * @param linkArray
     * @return {boolean}
     */inject(linkArray){let links=linkArray.filter(link=>{if(this.type){return link.rel===this.rel&&link.type===this.type}return link.rel===this.rel});if(0<links.length){/**
       * @event rel-exists
       * Fired when rel exists in linkArray
       * detail payload: {Object} Hateoas Link
       */let customEvent=new Event("rel-exists",{composed:!0,bubbles:!0});customEvent.detail=links[0];this.dispatchEvent(customEvent);return!0}/**
       * @event rel-dont-exist
       * Fired when rel does not exists in linkArray
       * detail payload: void
       */let customEvent=new Event("rel-dont-exist",{composed:!0,bubbles:!0});this.dispatchEvent(customEvent);return!1}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Name of the rel
       */rel:{type:String},/**
       * define the type if you want a specific check on the type also
       */type:{type:String}}}attributeChangedCallback(name,old,value){switch(name){case"rel":this.rel=value;break;case"type":this.type=value;break;}}}window.customElements.define("rel-exists",RelExists);const Services={tasks:{general:{name:"tasks",description:"Task Services",version:"1.0.0",lifecycle:{deprecated:!1,info:"This version is still valid"}},services:{Create:{description:"creates a new contract composite",data:{request:"vnd.com.acme.task",response:"vnd.com.acme.task"},query:[],deeplink:{rel:"create",method:"POST",href:"/api/v1/tasks"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},List:{description:"The List method takes a collection name and zero or more parameters as input, and returns a list of resources (response type definition) that match the input.",data:{request:null,response:"vnd.com.acme.task"},query:{parameters:{opt:{description:"Option des Taskes",value:"",type:"string"}}},deeplink:{rel:"list",method:"GET",href:"./api/v1/tasks/list.json"},options:{filter:{enabled:!0,fields:["taskId","title"]},sort:{enabled:!0,fields:["taskId","title"]},pagination:{enabled:!0,default:19,max:42}},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Update:{description:"The Update method takes a Body.",data:{request:"vnd.com.acme.task",response:"vnd.com.acme.task"},query:[],deeplink:{rel:"update",method:"PATCH",href:"./api/v1/tasks/{vtr}.json"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Get:{description:"The Get method takes a resource name, zero or more parameters, and returns the specified resource (response type definition).",data:{request:null,response:"vnd.com.acme.task"},query:[],deeplink:{rel:"self",method:"GET",href:"./api/v1/tasks/{vtr}.json"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Release:{description:"Releases the pending contract",data:{request:null,response:"vnd.com.acme.task"},query:[],deeplink:{rel:"release",method:"POST",href:"/api/v1/tasks/{vtr}:release"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}}}},tasksDeprecated:{general:{name:"tasks",description:"Task Services",version:"1.0.0",lifecycle:{deprecated:!0,info:"Please change to service tasks until Q3-2033"}},services:{Create:{description:"creates a new contract composite",data:{request:"vnd.com.acme.task",response:"vnd.com.acme.task"},query:[],deeplink:{rel:"create",method:"POST",href:"/api/v1/tasks"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},List:{description:"The List method takes a collection name and zero or more parameters as input, and returns a list of resources (response type definition) that match the input.",data:{request:null,response:"vnd.com.acme.task"},query:{parameters:{opt:{description:"Option des Taskes",value:"",type:"string"}}},deeplink:{rel:"list",method:"GET",href:"./api/v1/tasks/list.json"},options:{filter:{enabled:!0,fields:["taskId","title"]},sort:{enabled:!0,fields:["taskId","title"]},pagination:{enabled:!0,default:19,max:42}},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Update:{description:"The Update method takes a Body.",data:{request:"vnd.com.acme.task",response:"vnd.com.acme.task"},query:[],deeplink:{rel:"update",method:"PATCH",href:"./api/v1/tasks/{vtr}.json"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Get:{description:"The Get method takes a resource name, zero or more parameters, and returns the specified resource (response type definition).",data:{request:null,response:"vnd.com.acme.task"},query:[],deeplink:{rel:"self",method:"GET",href:"./api/v1/tasks/{vtr}.json"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}},Release:{description:"Releases the pending contract",data:{request:null,response:"vnd.com.acme.task"},query:[],deeplink:{rel:"release",method:"POST",href:"/api/v1/tasks/{vtr}:release"},caching:{"no-cache":!1,private:!0,"max-age":10,Expires:10,ETag:!0}}}}};_exports.Services=Services;const Types={"vnd.acme.zeitunddatum":{description:"Task komposit",type:"vnd.acme.zeitunddatum",fields:{date:{description:"Beschreibung",type:"date",meta:{default:"",hint:"",label:"Datum"},constraints:{min:{value:"today",message:"max 129"},max:{value:"eom"},mandatory:{value:!1},readonly:{value:!1}},options:{},toString:{fields:["taskNummer"],fmt:"%1"}},repstring:{description:"repstring",type:"string",meta:{repeated:!0,default:"repeat in repeat"}},time:{description:"Beschreibung",type:"time",meta:{label:"Zeit",default:"",hint:""},constraints:{mandatory:{value:!1},readonly:{value:!1}},options:{},toString:{fields:["taskNummer"],fmt:"%1"}},anytype:{description:"kann alles sein, kommt als JSON",type:"any",meta:{default:{"@type":"vnd.com.acme.reference",display_name:"Any default ref",id:3223}}},keyvaluetype:{description:"key value map",type:"map<string, string>",meta:{default:{error:"invalid username",message:"invalid username"}}}}},"vnd.com.acme.reference":{name:"Reference",type:"vnd.com.acme.reference",description:"reference",fields:{display_name:{description:"String representation of the reference",type:"string",__proto:{number:1}},id:{description:"Value of the reference",type:"string",__proto:{number:2}},rel:{description:"the relationship",type:"string",__proto:{number:3}},method:{description:"method of curl GET, POST, PUT, PATCH, DELETE",type:"string",__proto:{number:4}},href:{description:"link",type:"string",__proto:{number:5}},type:{description:"mime type",type:"string",__proto:{number:6}}}},"vnd.com.acme.task":{name:"Task",type:"vnd.com.acme.task",mime:"application/vnd.com.acme.task+json",description:"Task komposit",fields:{ref:{description:"ref",type:"vnd.com.acme.reference",meta:{label:"REFsrch",default:{display_name:"Hampel",id:"0003",href:"./api/v1/tasks/list.json",rel:"list",method:"get",type:"vnd.com.acme.task"},hint:""}},id:{description:"ulid des Taskes",type:"int",meta:{label:"Task ID",default:443343,hint:""},constraints:{min:{value:3,message:"max 129"},max:{value:129},mandatory:{value:!1},readonly:{value:!1}}},display_name:{description:"Nummer des Taskes",type:"string",meta:{label:"TITEL",default:"Tit",hint:"dsfdfs",readonly:!0},constraints:{min:{value:3,message:"Drei Zeichen sind zwingend"},max:{value:9,message:"Neun Zeichen sind genug"},mandatory:{value:!1},readonly:{value:!1}},options:{},toString:{fields:["taskNummer"],fmt:"%1"}},description:{description:"Beschreibung",type:"string",meta:{label:"Beschreibung",default:"",hint:"short text"},constraints:{min:{value:3,message:"max 129"},max:{value:129},mandatory:{value:!1},readonly:{value:!1}},options:{},toString:{fields:["taskNummer"],fmt:"%1"}},descrWithDefault:{description:"To test default values",type:"string",meta:{label:"Beschreibung",default:"YES",hint:"short text"},constraints:{min:{value:3,message:"max 129"},max:{value:129},mandatory:{value:!1},readonly:{value:!1}},options:{},toString:{fields:["taskNummer"],fmt:"%1"}},repdate:{type:"vnd.acme.zeitunddatum",meta:{repeated:!0,default:{date:"2019-12-12",time:"11:44"}}},repstring:{type:"string",meta:{repeated:!0,initialValue:["aaaa","bbbbb","ccc"]},constraints:{min:{value:3,message:"Kleinster wert ist 3"},max:{value:9}}},zeitunddatum:{type:"vnd.acme.zeitunddatum"},produktId:{name:"produktId",description:"ProduktId des Taskes",type:"int",meta:{label:"Produktid",default:"",hint:"Wert zwischen 3 und 9"},constraints:{min:{value:3,message:"Kleinster wert ist 3"},max:{value:9},mandatory:{value:!1},readonly:{value:!1}},options:[],toString:{fields:["produktId"],fmt:"%1"}}}}};_exports.Types=Types;var apiConfig={Services:Services,Types:Types};// -- initialize application env, theme, api
_exports.$apiConfig=apiConfig;_furoShell.Init.registerApiServices(Services);_furoShell.Init.registerApiTypes(Types);class SampleFuroDataTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 230px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>
      
      <furo-demo-snippet >
        <template>
          <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
          <furo-data-text-input autofocus ƒ-bind-data="--entity(*.fields.description)"></furo-data-text-input>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("sample-furo-data-text-input",SampleFuroDataTextInput);class SampleFuroDataPasswordInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 130px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>
      
      <furo-demo-snippet>
        <template>
          <furo-data-password-input hint="Hint text for password" label="Password"></furo-data-password-input>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("sample-furo-data-password-input",SampleFuroDataPasswordInput);class DemoFuroDataTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-data-text-input</h2>
      <p>Bind the field from entity-object with <strong>ƒ-bind-data="--entityReady(*.fields.fieldname)"</strong>. The labels, hints, defaults are comming from the entity-object specs.</p>
      <furo-demo-snippet >
        <template>
          <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
          <furo-data-text-input autofocus ƒ-bind-data="--entity(*.fields.description)"></furo-data-text-input>
          <furo-data-text-input autofocus ƒ-bind-data="--entity(*.fields.description)" @-value-changed="--textChanged"></furo-data-text-input>
          <!-- --textChanged only comes when data was typed in. -->
          <span ƒ-.inner-text="--textChanged"></span>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-data-text-input",DemoFuroDataTextInput);class DemoFuroDataTextareaInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-data-textarea-input</h2>
      <p>Bind the field from entity-object with <strong>ƒ-bind-data="--entityReady(*.fields.fieldname)"</strong>. The labels, hints, defaults are comming from the entity-object specs.</p>
      <furo-demo-snippet >
        <template>
          <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
          <furo-data-textarea-input autofocus ƒ-bind-data="--entity(*.fields.description)"></furo-data-textarea-input>
          <furo-data-textarea-input autofocus ƒ-bind-data="--entity(*.fields.description)" @-value-changed="--textareaChanged"></furo-data-textarea-input>
          <!-- --textareaChanged only comes when data was typed in. -->
          <span ƒ-.inner-textarea="--textareaChanged"></span>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-data-textarea-input",DemoFuroDataTextareaInput);class SampleFuroDataNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 230px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>
      
      <furo-demo-snippet >
        <template>
          <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
          <furo-data-number-input autofocus ƒ-bind-data="--entity(*.fields.id)"></furo-data-number-input>
          <furo-data-number-input  hint="Type in a number" label="label" ƒ-bind-data="--entity(*.fields.id)"></furo-data-number-input>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("sample-furo-data-number-input",SampleFuroDataNumberInput);class DemoFuroDataNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
        

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div><h2>Demo furo-data-number-input</h2>
          <p>Bind the field from entity-object with <strong>ƒ-bind-data="--entityReady(*.fields.fieldname)"</strong>.
            The labels, hints, defaults are comming from the entity-object specs.</p>
          <p>As you can see, the "data-binding" is done by the entity-object.</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
            <furo-horizontal-flex>
              <furo-data-number-input autofocus ƒ-bind-data="--entity(*.fields.id)"
                                      hint="Hint should come from spec and overflows"></furo-data-number-input>
              <furo-data-number-input label="with step" step="0.5" ƒ-bind-data="--entity(*.fields.id)"
                                      @-value-changed="--numberChanged"
                                      hint="but that should be ok"></furo-data-number-input>
              <furo-data-number-input flex label="min max" min="1" max="9"
                                      ƒ-bind-data="--entity(*.fields.id)"></furo-data-number-input>
              <furo-data-number-input label="disabled" disabled label="with step" step="0.5"
                                      ƒ-bind-data="--entity(*.fields.id)"></furo-data-number-input>
            </furo-horizontal-flex>
            <hr>
            <!-- --numberChanged only comes when data was typed in. -->
            <span ƒ-.inner-text="--numberChanged"></span>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-data-number-input",DemoFuroDataNumberInput);class DemoFuroDataTimeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div><h2>Demo furo-data-time-input</h2>
          <p>Bind the field from entity-object with <strong>ƒ-bind-data="--entityReady(*.fields.fieldname)"</strong>.
            The labels, hints, defaults are comming from the entity-object specs.</p>
          <p>As you can see, the "data-binding" is done by the entity-object.</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <entity-object type="vnd.com.acme.task" @-object-ready="--entity"></entity-object>
            <furo-horizontal-flex>
              <furo-data-time-input autofocus ƒ-bind-data="--entity(*.fields.id)"
                                      hint="Hint should come from spec and overflows"></furo-data-time-input>
              <furo-data-time-input label="with step" step="0.5" ƒ-bind-data="--entity(*.fields.id)"
                                      @-value-changed="--timeChanged"
                                      hint="but that should be ok"></furo-data-time-input>
              <furo-data-time-input flex label="min max" min="1" max="9"
                                      ƒ-bind-data="--entity(*.fields.id)"></furo-data-time-input>
              <furo-data-time-input label="disabled" disabled label="with step" step="0.5"
                                      ƒ-bind-data="--entity(*.fields.id)"></furo-data-time-input>
            </furo-horizontal-flex>
            <hr>
            <!-- --timeChanged only comes when data was typed in. -->
            <span ƒ-.inner-text="--timeChanged"></span>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-data-time-input",DemoFuroDataTimeInput);class FuroButton extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.label="label not set";this.disabled=!1;this.danger=!1}/**
     * Set the focus to the button
     * @param e
     */focus(e){this._FBPTriggerWire("--focus")}/**
     * Disables the button
     */disable(){this.disabled=!0}/**
     * Enables the button
     */enable(){this.disabled=!1}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Beschriftung des buttons
       */label:{type:String},/**
       * Optional icon
       */icon:{type:String},/**
       * Set danger to true if it is dangerous to press this button
       */danger:{type:Boolean,reflect:!0},/**
       * Set disabled to disable the button
       */disabled:{type:Boolean,reflect:!0},/**
       * Focus the element automatically
       */autofocus:{type:Boolean,reflect:!0},/**
       * Give the button a "box" with shadow
       */raised:{type:Boolean},/**
       * Give the button a "box"
       */unevelated:{type:Boolean},/**
       * Give the button a "border"
       */outline:{type:Boolean},/**
       * Sets the color to the primary color (--primary)
       */primary:{type:Boolean},/**
       * Sets the color to the secondary color (--secondary)
       */secondary:{type:Boolean},/**
       * Sets the color to the accent color (--accent)
       */accent:{type:Boolean}}}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: inline-block;
            position: relative;
            font-size: 16px;
            box-sizing: border-box;

            min-width: 64px;
            height: 36px;

        }

        :host([hidden]) {
            display: none;
        }

        * {
            transition: all 100ms ease-in;
        }

        button {
            font-family: "Roboto", "Noto", sans-serif;
            border-radius: 4px;
            border: 1px solid transparent;
            width: 100%;
            cursor: pointer;
            color: var(--on-surface);
            padding: 0 16px;
            text-transform: uppercase;
            font-size: 14px;
            outline: none;
            line-height: 34px;
            background-color: transparent;
            box-sizing: border-box;
        }

        :host([unevelated]) button {
            background-color: var(--surface, #f7f7f7);
            color: var(--on-surface, #333333);
        }

        :host([disabled]) button[disabled], :host([disabled]) button[disabled]:hover {
            color: var(--disabled, #eeeeee);
        }

        :host([raised][disabled]) button[disabled] ,:host([raised][disabled]) button[disabled]:hover,  :host([unevelated][disabled]) button[disabled] ,:host([unevelated][disabled]) button[disabled]:hover ,  :host([outline][disabled]) button[disabled] ,:host([outline][disabled]) button[disabled]:hover {
            background-color: var(--disabled, #eeeeee);
            color: var(--on-disabled, #333333);
            border-color:var(--disabled, #eeeeee);
        }

        
        :host([primary]) button {
            color: var(--primary);
        }
        :host([raised][primary]) button, :host([unevelated][primary]) button {
            background-color: var(--primary);
            color: var(--on-primary);
        }
        :host([outline][primary]) button {
            background-color: transparent;
            color: var(--primary);
            border: 1px solid var(--primary);
        }
        :host([raised][primary]) button:focus, :host([unevelated][primary]) button:focus{
            background-color: var(--primary-light);
        }
        :host([raised][primary]) button:hover, :host([unevelated][primary]) button:hover{
            background-color: var(--primary-dark);
        }
        :host([primary]) button:focus{
            background-color: var(--surface-light);
        }
        :host([primary]) button:hover{
            background-color: var(--surface-dark);
        }



        :host([accent]) button {
            color: var(--accent);
        }
        :host([raised][accent]) button, :host([unevelated][accent]) button {
            background-color: var(--accent);
            color: var(--on-accent);
        }
        :host([outline][accent]) button {
            background-color: transparent;
            color: var(--accent);
            border: 1px solid var(--accent);
        }
        :host([raised][accent]) button:focus, :host([unevelated][accent]) button:focus{
            background-color: var(--accent-light);
        }
        :host([raised][accent]) button:hover, :host([unevelated][accent]) button:hover{
            background-color: var(--accent-dark);
        }
        :host([accent]) button:focus{
            background-color: var(--surface-light);
        }
        :host([accent]) button:hover{
            background-color: var(--surface-dark);
        }


        :host([secondary]) button {
            color: var(--secondary);
        }
        :host([raised][secondary]) button, :host([unevelated][secondary]) button {
            background-color: var(--secondary);
            color: var(--on-secondary);
        }
        :host([outline][secondary]) button {
            background-color: transparent;
            color: var(--secondary);
            border: 1px solid var(--secondary);
        }
        :host([raised][secondary]) button:focus, :host([unevelated][secondary]) button:focus{
            background-color: var(--secondary-light);
        }
        :host([raised][secondary]) button:hover, :host([unevelated][secondary]) button:hover{
            background-color: var(--secondary-dark);
        }
        :host([secondary]) button:focus{
            background-color: var(--surface-light);
        }
        :host([secondary]) button:hover{
            background-color: var(--surface-dark);
        }

        
        


        :host([danger]) button {
            color: var(--danger, #ff0000);
        }

        :host([raised][danger]) button, :host([unevelated][danger]) button {
            background-color: var(--danger, #ff0000);
            color: var(--on-danger, #FFFFFF);
        }
 

        :host([outline][danger]) button {
            background-color: transparent;
            color: var(--danger);
            border: 1px solid var(--danger);
        }

        :host([raised][danger]) button:focus, :host([unevelated][danger]) button:focus{
            background-color: var(--on-danger, #FFFFFF);
            color: var(--danger, #ff0000);
        }
        :host([raised][danger]) button:hover, :host([unevelated][danger]) button:hover{
            background-color: var(--danger-dark);
            color: var(--on-danger, #FFFFFF);
        }
        :host([danger]) button:focus{
            background-color: var(--surface-light);
        }
        :host([danger]) button:hover{
            background-color: var(--surface-dark);
        }


        :host([outline]) button {
            background-color: transparent;
            color: var(--on-surface);
            border: 1px solid var(--on-surface);
        }

        button:active {
            box-shadow: none;
        }

        button:focus{
            background-color: var(--surface-light);
        }
        button:hover{
            background-color: var(--surface-dark);
        }

        :host([raised]) button:focus {
            box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);
        }

        :host([raised]) button {
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
        }

        :host([raised]) button:active {
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
        }


        furo-icon {
            width: 18px;
            height: 18px;
            margin: 0 8px 0 12px;
        }

        :host([icon]) button {
            padding: 0 16px 0 0;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <button @-keypressed="--buttonPressed" ƒ-focus="--focus" ?autofocus=${this.autofocus} ?disabled=${this.disabled} ?danger=${this.danger}><furo-icon ?hidden="${!this.icon}" icon="${this.icon}"></furo-icon>${this.label}       
        <furo-ripple ƒ-trigger="--buttonPressed"></furo-ripple>
      </button>
    `}}window.customElements.define("furo-button",FuroButton);class FuroRangeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.step="any";this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];// mark min max error
this.valid=!(input.validity.rangeOverflow||input.validity.rangeUnderflow);if(!input.validity.badInput){this.value=input.value;this._float=!!input.value;/**
                                      * @event value-changed
                                      * Fired when value has changed from inside the component
                                      * detail payload: {Number} the number value
                                      */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max, step
let inputField=this.shadowRoot.querySelector("#input");if(this.min){inputField.setAttribute("min",this.min)}if(this.max){inputField.setAttribute("max",this.max)}if(this.step){inputField.setAttribute("step",this.step)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:Number},/**
       * The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.
       *
       * A string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).
       */step:{type:String},/**
       * The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.
       *
       * This value must be greater than or equal to the value of the min attribute.
       */max:{type:Number},/**
       * The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.
       *
       * This value must be less than or equal to the value of the max attribute.
       */min:{type:Number},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Set the value for the field
     * @param {Number} num a valid number value
     */setValue(num){this._value=num;this.value=num}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Disables the field
     */disable(){this.disabled=!0}/**
     * Makes the field writable.
     */enable(){this.disabled=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 190px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {

            padding: 0 12px;
            box-sizing: border-box;
            height: 56px;
        }

        .iwrap {
            position: relative;
        }

        input {
            position: absolute;
            top: 20px;
            border: none;
            background: none;
            box-sizing: border-box;
            padding: 0;
            margin: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }


        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            border-top: none;
            line-height: 56px;
        }


        :host(:not([filled])) label span {
            position: relative;
            font-size: 12px;
            top: -30px;
            left: 0;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
            border: none;
        }

        :host([filled]) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }
        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top: 16px;
        }

        furo-icon.lead {
            position: absolute;

            left: 8px;
        }

        furo-icon.trail {
            position: absolute;
            right: 8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) .wrapper {
            padding-left: 36px;
        }

        :host([trailing-icon]) .wrapper {
            padding-right: 36px;
        }

        :host(:focus-within:not([valid])) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([condensed]) input {
            top: 8px;
        }

        :host([condensed]:not([filled])) label, :host([filled][condensed]) label {
            line-height: 36px;
        }

        
        

        :host([condensed]) .borderlabel, :host([condensed]) .wrapper {
            height: 36px;
        }

        :host([condensed]) furo-icon {
            top: 6px;
        }

        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label span {
            top: -15px;
            font-size: 10px;
        }

        :host([condensed]) label span {
            top: -20px;
            font-size: 10px;
        }

        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }

        :host([condensed]) {
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
       <div class="iwrap">
      <input id="input" ?autofocus=${this.autofocus} ?disabled=${this.disabled} 
       type="range"       
       ƒ-.value="--value" 
       @-input="--inputInput(*)"   
       ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-range-input",FuroRangeInput);class FuroDateInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.step="any";this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];// mark min max step error
this.valid=!(input.validity.rangeOverflow||input.validity.rangeUnderflow||input.validity.stepMismatch);if(!input.validity.badInput){this.value=input.value;this._float=!!input.value;/**
                                      * @event value-changed
                                      * Fired when value has changed from inside the component
                                      * detail payload: {String} the date value like "12:15" or "11:59:59"
                                      */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max, step
let inputField=this.shadowRoot.querySelector("#input");if(this.min){inputField.setAttribute("min",this.min)}if(this.max){inputField.setAttribute("max",this.max)}if(this.step){inputField.setAttribute("step",this.step)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.
       *
       * A string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).
       *
       * **Tipp:** set a `min` value as reference for the stepping calculations.
       */step:{type:String},/**
       * The latest date to accept. If the value entered into the element is later than this date, the element fails constraint validation. If the value of the max attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no maximum value.
       *
       * This value must specify a date string later than or equal to the one specified by the min attribute.
       *
       * For date inputs, the value of step is given in days, with a scaling factor of 86,400,000 (since the underlying numeric value is in milliseconds). The default value of step is 1, indicating 1 day.
       *
       * [more](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#step)
       */max:{type:String},/**
       * The earliest date to accept as a valid input.
       *
       * Dates earlier than this will cause the element to fail constraint validation. If the value of the min attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no minimum value.
       *
       * This value must specify a date string earlier than or equal to the one specified by the max attribute.
       */min:{type:String},/**
       * The latest date to accept, in the syntax described under Date value format
       *
       * A string indicating the latest date to accept, specified in the same [date value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#Date_value_format). If the specified string isn't a valid date, no maximum value is set.
       */label:{type:String,attribute:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Set the value for the field
     * @param {Number} num a valid date number value
     */setValue(num){this._value=num;this.value=num}set errortext(v){this._errortext=v;this.__initalErrorText=v}get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 174px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
            height: 56px;
        }

        .iwrap {
            position: relative;
        }


        input {
            position: absolute;
            top: 16px;
            border: none;
            background: none;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 100%;
            line-height: 24px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }


        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            border-top: none;
            line-height: 56px;
        }


        :host(:not([filled])) label span {
            position: relative;
            font-size: 12px;
            top: -30px;
            left: 0;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
            border: none;
        }

        :host([filled]) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }


        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top: 16px;
        }

        furo-icon.lead {
            position: absolute;

            left: 8px;
        }

        furo-icon.trail {
            position: absolute;
            right: 8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) .wrapper {
            padding-left: 36px;
        }

        :host([trailing-icon]) .wrapper {
            padding-right: 36px;
        }

        :host(:focus-within:not([valid])) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([condensed]) input {
            top: 8px;
        }

        :host([condensed]:not([filled])) label, :host([filled][condensed]) label {
            line-height: 36px;
        }

        :host([condensed]) input {
            font-size: 14px;
        }

        :host([condensed][filled]) input {
            font-size: 13px;
        }

        :host([condensed]) .borderlabel , :host([condensed]) .wrapper{
            height: 36px;
        }

        :host([condensed]) furo-icon {
            top: 6px;
        }

        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label[float] span, :host([filled][condensed]:focus-within) label span {
            top: -15px;
            font-size: 10px;
        }

        :host([condensed]) label span {
            top:-20px;
            font-size: 10px;
        }
        
        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }

        :host([condensed]) {
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
       <div class="iwrap">
      <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly} 
       type="date"     
       ƒ-.value="--value" 
       @-input="--inputInput(*)"   
       ƒ-focus="--focus">
       </div>
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-date-input",FuroDateInput);class FuroColorInput extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.valid=!0}_FBPReady(){super._FBPReady();this._value=this.value||"";this._FBPAddWireHook("--inputInput",e=>{let input=e.composedPath()[0];this.error=input.validity.rangeOverflow||input.validity.rangeUnderflow||input.validity.patternMismatch;this._float=!!input.value;if(input.validity.valid){this.value=input.value;/**
                                   * @event value-changed
                                   * Fired when value has changed from inside the component
                                   * detail payload: {String} the text value
                                   */let customEvent=new Event("value-changed",{composed:!0,bubbles:!0});customEvent.detail=this.value;this.dispatchEvent(customEvent)}});// set pattern, min, max
let inputField=this.shadowRoot.querySelector("#input");if(this.pattern){inputField.setAttribute("pattern",this.pattern)}if(this.min){inputField.setAttribute("minlength",this.min)}if(this.max){inputField.setAttribute("maxlength",this.max)}}set _value(v){this._float=!!v;this._FBPTriggerWire("--value",v)}static get properties(){return{/**
       * set this to true to indicate errors
       */error:{type:Boolean,reflect:!0},/**
       * The start value. Changes will be notified with the `@-value-changed` event
       */value:{type:String},/**
       * The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.
       *
       * If the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.
       */pattern:{type:String},/**
       * The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.
       */label:{type:String,attribute:!0},/**
       * Set this attribute to autofocus the input field.
       */autofocus:{type:Boolean},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */disabled:{type:Boolean,reflect:!0},/**
       * A Boolean attribute which, if present, means this field cannot be edited by the user.
       */readonly:{type:Boolean,reflect:!0},/**
       * helper for the label
       */_float:{type:Boolean},/**
       * The hint text for the field.
       */hint:{type:String},/**
       * Text for errors
       */errortext:{type:String},/**
       * Icon on the left side
       */leadingIcon:{type:String,attribute:"leading-icon"},/**
       * Icon on the right side
       */trailingIcon:{type:String,attribute:"trailing-icon"},/**
       * html input validity
       */valid:{type:Boolean,reflect:!0},/**
       * The default style (md like) supports a condensed form. It is a little bit smaller then the default
       */condensed:{type:Boolean}}}/**
     * Sets the value for the input field.
     * @param {String} string
     */setValue(string){this._value=string;this.value=string}/**
     * Setter method for errortext
     * @param {String} errortext
     * @private
     */set errortext(v){this._errortext=v;this.__initalErrorText=v}/**
     * Getter method for errortext
     * @private
     */get errortext(){return this._errortext}/**
     * Set the field to error state
     *
     * @param [{String}] The new errortext
     */setError(text){if("string"===typeof text){this._errortext=text}this.error=!0}/**
     * clears the error and restores the errortext.
     */clearError(){this.error=!1;this._errortext=this.__initalErrorText}/**
     * Sets the focus on the field.
     */focus(){this._FBPTriggerWire("--focus")}/**
     * Sets the field to readonly
     */disable(){this.readonly=!0}/**
     * Makes the field writable.
     */enable(){this.readonly=!1}/**
     *
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        /* https://material.io/design/components/text-fields.html#theming */
        :host {
            display: inline-block;
            position: relative;
            box-sizing: border-box;
            margin: 14px 0 0 0;
            height: 75px;
            font-family: "Roboto", "Noto", sans-serif;
            width: 104px;
        }

        :host([hidden]) {
            display: none;
        }

        .wrapper {
            position: relative;
            padding: 0 12px;
            box-sizing: border-box;
            height: 56px;
        }

        input {
            position: absolute;
            top: 10px;
            border: none;
            background: none;
            box-sizing: border-box;
            left:20px;
            width: 64px;
            height: 40px;
            padding: 6px;
            color: inherit;
            outline: none;
            font-family: "Roboto", "Noto", sans-serif;
            font-kerning: auto;
            font-size: 16px;
            font-stretch: 100%;
            font-style: normal;
        }

        :host([filled]) .wrapper {
            background-color: var(--surface-light, #FEFEFE);
        }

        :host([filled]) .wrapper:hover {
            background-color: var(--surface, #FCFCFC);
        }

        :host([filled]:focus-within) .wrapper {
            background-color: var(--surface-dark, #FEA222);
        }

        :host(:not([filled]):hover) .left-border, :host(:not([filled]):hover) .right-border, :host(:not([filled]):hover) label {
            border-color: var(--input-hover-color, #333333);
        }


        .borderlabel {
            pointer-events: none;
            position: absolute;
            box-sizing: border-box;
            top: 0;
            right: 0;
            left: 0;
            height: 56px;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -ms-flex-direction: row;
            -webkit-flex-direction: row;
            flex-direction: row;
        }

        .left-border {
            width: 8px;
            box-sizing: border-box;
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-right: none;
            border-top-left-radius: 4px;
            border-bottom-left-radius: 4px;
        }


        :host(:not([filled])) label {
            padding: 0 4px;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-right: none;
            border-top: none;
            line-height: 56px;
        }


        :host(:not([filled])) label span {
            position: relative;
            font-size: 12px;
            top: -30px;
            left: 0;
        }


        .right-border {
            pointer-events: none;
            border: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
            border-left: none;
            border-top-right-radius: 4px;
            border-bottom-right-radius: 4px;
            -ms-flex: 1 1 0.000000001px;
            -webkit-flex: 1;
            flex: 1;
            -webkit-flex-basis: 0.000000001px;
            flex-basis: 0.000000001px;
        }


        .ripple-line {
            display: none;
            position: absolute;
            width: 100%;
            height: 1px;
            top: 56px;
            border: none;
            border-bottom: 1px solid var(--input-activation-indicator-color, var(--disabled, #333333));
        }

        :host([filled]) .ripple-line {
            display: block;
        }

        :host([filled]) .right-border, :host([filled]) .left-border {
            display: none;
        }


        :host([filled]) label {
            padding: 0 12px;
            line-height: 56px;
            border: none;
        }

        :host([filled]) label span {
            font-size: 12px;
            font-weight: 400;
            top: -20px;
            position: relative;
        }


        * {
            transition: all 200ms ease-out;
        }

        .hint, .errortext {
            position: absolute;
            bottom: 0;
            font-size: 12px;
            color: transparent;
            padding-left: 12px;
            white-space: nowrap;
            pointer-events: none;
        }

        :host(:focus-within) .hint {
            color: var(--input-hint-color, #999999);
            transition: all 550ms ease-in;
        }


        :host([error]) .errortext {
            display: block;
        }

        .errortext {
            color: var(--input-error-text-color, var(--error, red));
            display: none;
        }


        label {
            color: var(--input-hint-color, var(--disabled, #DEDEDE));
        }

        :host(:focus-within) label, :host(:focus-within:not([filled])) label {
            color: var(--input-active-float-label-color, var(--primary, #3f51b5));
            border-color: var(--input-active-float-label-color, var(--primary, #3f51b5));
        }


        :host(:focus-within) .ripple-line {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host(:not([filled]):focus-within) .left-border, :host(:not([filled]):focus-within) .right-border, :host(:not([filled]):focus-within) label {
            border-color: var(--input-active-activation-indicator-color, var(--primary, #3f51b5));
            border-width: 2px;
        }

        :host([error]:focus-within) .left-border, :host([error]:focus-within) .right-border, :host([error]:focus-within) label, :host([error]:focus-within) .ripple-line {
            border-color: var(--input-error-text-color, var(--error, red));
            border-width: 2px;
        }

        :host([error]:focus-within) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([error]:focus-within) .hint {
            display: none;
        }

        :host([error]) .ripple-line, :host([error]) .left-border, :host([error]) .right-border, :host([error]) label {
            border-color: var(--input-error-activation-indicator-color, var(--error, red));
        }

        furo-icon {
            display: none;
            top: 16px;
        }

        furo-icon.lead {
            position: absolute;

            left: 8px;
        }

        furo-icon.trail {
            position: absolute;
            right: 8px;
        }

        :host([leading-icon]) furo-icon.lead, :host([trailing-icon]) furo-icon.trail {
            display: block;
        }

        :host([leading-icon]) .wrapper {
            padding-left: 36px;
        }

        :host([trailing-icon]) .wrapper {
            padding-right: 36px;
        }

        :host(:focus-within:not([valid])) label {
            color: var(--input-error-text-color, var(--error, red));
        }

        :host([condensed]) input{
            top:8px;
        }
        :host([condensed]:not([filled])) label, :host([filled][condensed]) label{
            line-height: 36px;
        }
        :host([condensed]) input {
            font-size: 14px;
            margin: 10px;
        }

        :host([condensed][filled]) input {
            font-size: 13px;
        }

        :host([condensed]) .borderlabel, :host([condensed]) .wrapper {
            height: 36px;
        }

        :host([condensed]) furo-icon {
            top: 6px;
        }

        :host([condensed]) .ripple-line {
            top: 36px;
        }

        :host([condensed][filled]) label span {
            top: -15px;
            font-size: 10px;
        }

        :host([condensed]) label span {
            top: -20px;
            font-size: 10px;
        }

        :host([condensed]) .hint, :host([condensed]) .errortext {
            font-size: 10px;
        }

        :host([condensed]) {
            height: 53px;
        }

    `}/**
     *
     * @return {TemplateResult | TemplateResult}
     * @private
     */render(){// language=HTML
return _furoShell.html` 
      <div class="wrapper">
       <furo-icon class="lead" icon="${this.leadingIcon}"></furo-icon>    
      <input id="input" ?autofocus=${this.autofocus} ?readonly=${this.disabled||this.readonly}       
       type="color" ƒ-.value="--value" @-input="--inputInput(*)"   ƒ-focus="--focus">
       
       <furo-icon class="trail" icon="${this.trailingIcon}"></furo-icon>
      </div>
      <div class="borderlabel">
      <div class="left-border"></div>
      <label ?float="${this._float}" for="input"><span>${this.label}</span></label>
      <div class="right-border"></div>
      </div>
      
      <div class="ripple-line"></div>           
      <div class="hint">${this.hint}</div>
      <div class="errortext">${this.errortext}</div>
 
    `}}window.customElements.define("furo-color-input",FuroColorInput);class FuroButtonPlayground extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||[_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);

        }

        :host([hidden]) {
            display: none;
        }

        .display {
            padding: 60px;
            background-color: var(--surface);
            margin: 8px;
        }

        furo-button {
            margin: 8px;
        }

        hr {
            width: 100%;
            color: #eeeeee;
        }

    `,Styling.theme]}constructor(){super();this.label="Label";this.icon="apps";this.primary=!1;this.secondary=!1;this.accent=!1;this.danger=!1;this.raised=!1;this.unevelated=!1;this.outline=!1;this.disabled=!1}_FBPReady(){super._FBPReady();this._FBPAddWireHook("--label",val=>{this.label=val;this.requestUpdate()});this._FBPAddWireHook("--icon",val=>{this.icon=val;this.requestUpdate()});["primary","secondary","accent","raised","danger","outline","unevelated","disabled"].forEach(bool=>{this._FBPAddWireHook("--toggle"+bool,()=>{let newstate=!this[bool];switch(bool){case"primary":case"secondary":case"accent":case"danger":this.primary=!1;this.secondary=!1;this.accent=!1;this.danger=!1;break;case"raised":case"unevelated":case"outline":this.raised=!1;this.outline=!1;this.unevelated=!1;break;}this[bool]=newstate;this.requestUpdate()})});this._FBPAddWireHook("--enable",()=>{this.disabled=!1;this.requestUpdate()});this._FBPAddWireHook("--disable",()=>{this.disabled=!0;this.requestUpdate()})}/**
     * @private
     * @returns {TemplateResult}
     */render(){return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>furo-button playground</h2>
          <p>Try the button states</p>
        </div>
        <div class="flex">
          <furo-split-view>
            <furo-vertical-flex slot="master">          
              <furo-text-input autofocus label="Label" value="${this.label}" @-value-changed="--label"></furo-text-input>
              <furo-text-input autofocus label="Icon" value="${this.icon}" hint="mail, send, filter-list, fingerprint" @-value-changed="--icon"></furo-text-input>
              
              <furo-button raised label="Primary" ?primary="${this.primary}" @-click="--toggleprimary"></furo-button>
              <furo-button raised label="secondary" ?primary="${this.secondary}" @-click="--togglesecondary"></furo-button>
              <furo-button raised label="accent" ?primary="${this.accent}" @-click="--toggleaccent"></furo-button>
              <furo-button raised label="danger" ?primary="${this.danger}" @-click="--toggledanger"></furo-button>
              
              <hr>
              
              <furo-button raised label="raised" ?primary="${this.raised}" @-click="--toggleraised"></furo-button>
              <furo-button raised label="unevelated" ?primary="${this.unevelated}" @-click="--toggleunevelated"></furo-button>
              <furo-button raised label="outline" ?primary="${this.outline}" @-click="--toggleoutline"></furo-button>
              <hr>
              <furo-button raised label="disabled" ?primary="${this.disabled}" @-click="--toggledisabled"></furo-button>
              
              <div>
              <hr>
              Methods</div>
              
              <furo-button label="ƒ-focus" @-click="--focus"></furo-button>
              <furo-button label="ƒ-enable" @-click="--enable"></furo-button>
              <furo-button label="ƒ-disable" @-click="--disable"></furo-button>
              
            </furo-vertical-flex>
           <div class="display">
              <furo-button 
                 label="${this.label}"
                 ?primary="${this.primary}" 
                 ?secondary="${this.secondary}" 
                 ?accent="${this.accent}" 
                 ?raised="${this.raised}" 
                 ?unevelated="${this.unevelated}" 
                 ?disabled="${this.disabled}" 
                 ?outline="${this.outline}" 
                 ?danger="${this.danger}" 
                 ƒ-focus="--focus"
                 ƒ-enable="--enable"
                 ƒ-disable="--disable"
                 ></furo-button>
                 <furo-button 
                 icon="${this.icon}"
                 label="${this.label}"
                 ?primary="${this.primary}" 
                 ?secondary="${this.secondary}" 
                   ?unevelated="${this.unevelated}" 
                 ?accent="${this.accent}" 
                 ?raised="${this.raised}" 
                 ?disabled="${this.disabled}" 
                 ?outline="${this.outline}" 
                 ?danger="${this.danger}"                
                 ></furo-button> 
                 
                 <div style="background-color: white">
                  <furo-button 
                 label="${this.label}"
                 ?primary="${this.primary}" 
                 ?secondary="${this.secondary}" 
                 ?accent="${this.accent}" 
                 ?raised="${this.raised}" 
                 ?unevelated="${this.unevelated}" 
                 ?disabled="${this.disabled}" 
                 ?outline="${this.outline}" 
                 ?danger="${this.danger}" 
                 ƒ-focus="--focus"
                 ƒ-enable="--enable"
                 ƒ-disable="--disable"
                 ></furo-button>
                 <furo-button 
                 icon="${this.icon}"
                 label="${this.label}"
                 ?primary="${this.primary}" 
                 ?secondary="${this.secondary}" 
                   ?unevelated="${this.unevelated}" 
                 ?accent="${this.accent}" 
                 ?raised="${this.raised}" 
                 ?disabled="${this.disabled}" 
                 ?outline="${this.outline}" 
                 ?danger="${this.danger}"                
                 ></furo-button> 
                 
              </div>
           </div>
          
          
          </furo-split-view>
        </div>
        

      </furo-vertical-flex>

    `;// language=HTML
}}window.customElements.define("furo-button-playground",FuroButtonPlayground);class DemoFuroButton extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);

        }

        :host([hidden]) {
            display: none;
        }


    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo furo-button</h2>
          <p>description</p>
        </div>

        <furo-demo-snippet flex>
          <template>
            <table>
              <tr>
              <th></th>
              <th>Default</th>
              <th>disabled</th>
              <th>raised</th>
              <th>raised disabled</th>
              </th>
              <tr>
                <td>Default</td>
                <td>
                  <furo-button autofocus label="default"></furo-button>
                </td>
                <td>
                  <furo-button disabled label="raised"></furo-button>
                </td> 
                <td>
                  <furo-button raised label="other"></furo-button>
                </td>
                <td>
                  <furo-button disabled raised label="raised"></furo-button>
                </td>
              </tr>
             
               <tr>
                <td>primary</td>
                <td>
                  <furo-button primary label="primary"></furo-button>
                </td>
                <td>
                  <furo-button primary disabled label="primary"></furo-button>
                </td> 
                <td>
                  <furo-button primary raised label="primary"></furo-button>
                </td>
                <td>
                  <furo-button primary disabled raised label="primary"></furo-button>
                </td>
              </tr>

              <tr>
                <td>secondary</td>
                <td>
                  <furo-button secondary label="secondary"></furo-button>
                </td>
                <td>
                  <furo-button secondary disabled label="secondary"></furo-button>
                </td>
                <td>
                  <furo-button secondary raised  label="secondary"></furo-button>
                </td>
                <td>
                  <furo-button secondary disabled raised label="secondary"></furo-button>
                </td>
              </tr>

              <tr>
                <td>accent</td>
                <td>
                  <furo-button accent label="accent"></furo-button>
                </td>
                <td>
                  <furo-button accent disabled label="accent"></furo-button>
                </td>
                <td>
                  <furo-button accent raised label="accent"></furo-button>
                </td>
                <td>
                  <furo-button accent disabled raised label="accent"></furo-button>
                </td>
              </tr>
              <tr>
                <td>danger</td>
                <td>
                  <furo-button danger label="danger"></furo-button>
                </td>
                <td>
                  <furo-button danger disabled label="danger"></furo-button>
                </td>
                <td>
                  <furo-button danger raised label="danger"></furo-button>
                </td>
                <td>
                  <furo-button danger disabled raised label="danger"></furo-button>
                </td>
              </tr>
            </table>
           
          </template>
        </furo-demo-snippet>

      </furo-vertical-flex>

    `}}window.customElements.define("demo-furo-button",DemoFuroButton);class DemoFuroNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-number-input</h2>
      <p>description</p>
      <furo-demo-snippet style="height: 600px">
        <template>
          <div style="background-color: #e5e5e5; padding: 30px">
            <furo-number-input min="5" leading-icon="send" label="Label" hint="Hint"></furo-number-input>
            <furo-number-input trailing-icon="send" filled label="Label" value="Val" hint="Hint"></furo-number-input>
            <furo-number-input trailing-icon="send" leading-icon="send"  error label="Label" errortext="errortext"></furo-number-input>
            <furo-number-input trailing-icon="send" leading-icon="send"  filled error label="Label" value="Val" errortext="errortext"></furo-number-input>
          </div>
          <div style="padding:30px">
            <furo-number-input label="Label" value="Val" hint="Hint jkfdjkdkjf"></furo-number-input>
            <furo-number-input filled label="Label" value="Val" hint="Hint"></furo-number-input>
            <furo-number-input error label="Label" value="Val" errortext="errortext"></furo-number-input>
            <furo-number-input trailing-icon="send" filled error label="Label" value="Val" errortext="errortext"></furo-number-input>
          </div>
          <div style="padding:30px">
            <furo-number-input disabled trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-number-input>
            <furo-number-input trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-number-input>
            <furo-number-input trailing-icon="fingerprint"  condensed filled label="Label" value="Val" hint="Hint"></furo-number-input>
          </div>

        </template>
      </furo-demo-snippet>
      
     
    `}}window.customElements.define("demo-furo-number-input",DemoFuroNumberInput);class DemoFuroRangeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo furo-range-input</h2>
          <p>description</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-range-input trailing-icon="dashboard" label="Range" step="0.25" value="11" min="10" max="20" hint="Slide for a number"
                              @-value-changed="--rval" ƒ-set-value="--nval"></furo-range-input>
            <furo-number-input  label="Number" hint="type in a number" ƒ-set-value="--rval"
                               @-value-changed="--nval"></furo-number-input>
            <furo-text-input label="Text" hint="type something like a number" ƒ-set-value="--rval"
                             @-value-changed="--rval,--nval"></furo-text-input>
            <hr>

            <furo-range-input  leading-icon="dashboard" label="Range" step="0.25"  min="10" max="20" hint="Slide for a number"></furo-range-input>
            <furo-range-input condensed leading-icon="dashboard" label="Range" step="0.25"  min="10" max="20" hint="Slide for a number"></furo-range-input>
            <furo-range-input filled leading-icon="dashboard" trailing-icon="dashboard" label="Range" step="0.25"  min="10" max="20" hint="Slide for a number"></furo-range-input>
            <furo-range-input filled condensed leading-icon="dashboard" label="Range" step="0.25"  min="10" max="20" hint="Slide for a number"></furo-range-input>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-range-input",DemoFuroRangeInput);class DemoFuroTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>


        <div>
          <h2>Demo furo-text-input</h2>
          <p>description</p>
        </div>
        <furo-horizontal-scroller flex>
          
            <div style="background-color: #e5e5e5; padding: 30px">
              <furo-text-input min="5" leading-icon="send" label="Label" hint="Hint"></furo-text-input>
              <furo-text-input trailing-icon="send" filled label="Label" value="Val" hint="Hint"></furo-text-input>
              <furo-text-input trailing-icon="send" leading-icon="send"  error label="Label" errortext="errortext"></furo-text-input>
              <furo-text-input trailing-icon="send" leading-icon="send"  filled error label="Label" value="Val" errortext="errortext"></furo-text-input>
            </div>
            <div style="padding:30px">
              <furo-text-input label="Label" value="Val" hint="Hint jkfdjkdkjf"></furo-text-input>
              <furo-text-input filled label="Label" value="Val" hint="Hint"></furo-text-input>
              <furo-text-input error label="Label" value="Val" hint="tex" errortext="errortext"></furo-text-input>
              <furo-text-input trailing-icon="send" filled error label="Label" value="Val" errortext="errortext"></furo-text-input>
            </div> 
            <div style="padding:30px">
              <furo-text-input disabled trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-text-input>
              <furo-text-input trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-text-input>
              <furo-text-input trailing-icon="fingerprint"  condensed filled label="Label" value="Val" hint="Hint"></furo-text-input>
            </div>
          
        </furo-horizontal-scroller>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-text-input",DemoFuroTextInput);class SampleFuroButton extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        
        furo-demo-snippet {
            height: 200px;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>
      <furo-demo-snippet>
        <template>
          <table>
            <tr>
              <th></th>
              <th>Default</th>
              <th>disabled</th>
              <th>raised</th>
              <th>raised disabled</th>
              </th>
            <tr>
              <td>Default</td>
              <td>
                <furo-button autofocus label="default" ƒ-focus="--primaryraisedClicked" @-click="--defautlClicked"></furo-button>
              </td>
              <td>
                <furo-button disabled label="raised"></furo-button>
              </td>
              <td>
                <furo-button raised label="other" ƒ-focus="--defautlClicked" @-click="--raisedClicked"></furo-button>
              </td>
              <td>
                <furo-button disabled raised label="raised"></furo-button>
              </td>
            </tr>

            <tr>
              <td>primary</td>
              <td>
                <furo-button primary label="primary" ƒ-focus="--raisedClicked" @-click="--primaryClicked"></furo-button>
              </td>
              <td>
                <furo-button primary disabled label="primary"></furo-button>
              </td>
              <td>
                <furo-button primary raised label="primary" ƒ-focus="--primaryClicked" @-click="--primaryraisedClicked"></furo-button>
              </td>
              <td>
                <furo-button primary disabled raised label="primary"></furo-button>
              </td>
            </tr>
          </table>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("sample-furo-button",SampleFuroButton);class SampleFuroRangeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 130px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>

      <furo-demo-snippet >
        <template>
          <furo-range-input ƒ-set-value="--number" autofocus value="123.25" step="0.25" hint="Steps 0.25" label="Range input field" @-value-changed="--number"></furo-range-input>
          <furo-range-input ƒ-set-value="--number" max="125" min="50" value="123" hint="Min max" label="Range input field" @-value-changed="--number"></furo-range-input>
          <furo-range-input error errortext="out of range" ƒ-set-value="--number" hint="Slide for some number" label="With error" @-value-changed="--number"></furo-range-input>
          <furo-range-input disabled ƒ-set-value="--number" value="23" hint="Slide for some number" label="Disabled" @-value-changed="--number"></furo-range-input>
        </template>
      </furo-demo-snippet>
      
    `}}window.customElements.define("sample-furo-range-input",SampleFuroRangeInput);class SampleFuroNumberInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 130px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>

      <furo-demo-snippet >
        <template>
          <furo-number-input ƒ-set-value="--number" autofocus value="123.25" step="0.25" hint="Steps 0.25" label="Number input field" @-value-changed="--number"></furo-number-input>
          <furo-number-input ƒ-set-value="--number" max="125" min="122" value="123" hint="Min max" label="Number input field" @-value-changed="--number"></furo-number-input>
          <furo-number-input error errortext="something went wrong" ƒ-set-value="--number" hint="Type in some number" label="With error" @-value-changed="--number"></furo-number-input>
          <furo-number-input disabled ƒ-set-value="--number" value="23" hint="Type in some number" label="Disabled" @-value-changed="--number"></furo-number-input>
        </template>
      </furo-demo-snippet>
      
    `}}window.customElements.define("sample-furo-number-input",SampleFuroNumberInput);class SampleFuroTextInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet {
            height: 130px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h3>Sample</h3>

      <furo-demo-snippet >
        <template>
          <furo-text-input ƒ-set-value="--text" autofocus value="some text" hint="With autofocus" label="Text input field" @-value-changed="--text"></furo-text-input>
          <furo-text-input ƒ-set-value="--text" hint="Type in some text" label="Text input field" @-value-changed="--text"></furo-text-input>
          <furo-text-input error errortext="something went wrong" ƒ-set-value="--text" hint="Type in some text" label="With error" @-value-changed="--text"></furo-text-input>
          <furo-text-input disabled ƒ-set-value="--text" hint="Type in some text" label="With error" @-value-changed="--text"></furo-text-input>
        </template>
      </furo-demo-snippet>
      
    `}}window.customElements.define("sample-furo-text-input",SampleFuroTextInput);class DemoFuroPasswordInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
            --primary: blue;
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>


        <div>
      <h2>Demo furo-password-input</h2>
      <p>description</p>
        
        
          <furo-password-input 
                  value="1234"
                  hint="under your keyboard or on postit below monitor"
                  label="super secret password"
                  ƒ-make-visible="--showPasswordClicked"
                  ƒ-make-invisible="--hidePasswordClicked"
          ></furo-password-input>
          <furo-button @-click="--showPasswordClicked" label="show password"></furo-button>
          <furo-button @-click="--hidePasswordClicked" label="hide password"></furo-button>
        </div>
      <furo-horizontal-scroller flex>

        <div style="background-color: #e5e5e5; padding: 30px">
          <furo-password-input min="5" leading-icon="send" label="Label" hint="Hint"></furo-password-input>
          <furo-password-input trailing-icon="send" filled label="Label" value="Val" hint="Hint"></furo-password-input>
          <furo-password-input trailing-icon="send" leading-icon="send"  error label="Label" errortext="errortext"></furo-password-input>
          <furo-password-input trailing-icon="send" leading-icon="send"  filled error label="Label" value="Val" errortext="errortext"></furo-password-input>
        </div>
        <div style="padding:30px">
          <furo-password-input label="Label" value="Val" hint="Hint jkfdjkdkjf"></furo-password-input>
          <furo-password-input filled label="Label" value="Val" hint="Hint"></furo-password-input>
          <furo-password-input error label="Label" value="Val" errortext="errortext"></furo-password-input>
          <furo-password-input trailing-icon="send" filled error label="Label" value="Val" errortext="errortext"></furo-password-input>
        </div>
        <div style="padding:30px">
          <furo-password-input disabled trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-password-input>
          <furo-password-input trailing-icon="fingerprint"  condensed label="Label" value="Val" hint="Hint"></furo-password-input>
          <furo-password-input trailing-icon="fingerprint"  condensed filled label="Label" value="Val" hint="Hint"></furo-password-input>
        </div>

      </furo-horizontal-scroller>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-password-input",DemoFuroPasswordInput);class DemoFuroSearchInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-search-input</h2>
      <p>Type some text and clear it with the Escape Key</p>
      <furo-demo-snippet >
        <template>
          <furo-search-input label="Search" ></furo-search-input>
          <furo-search-input label="With value" hint="search" value="start:"></furo-search-input>
          <furo-search-input label="With pattern" hint="3 letters" pattern="[A-Za-z]{3}"></furo-search-input>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-search-input",DemoFuroSearchInput);class DemoFuroTextareaInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo furo-textarea-input</h2>
          <p>description</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-textarea-input rows="1" label="a lot of text" hint="just type" value="aa\nss\v"></furo-textarea-input>
            <furo-text-input label="compare" value="text" hint="hint"></furo-text-input>
            <hr>
            <furo-textarea-input label="a lot of text" hint="just type" value="aa\nss\v"></furo-textarea-input>
          </template>
        </furo-demo-snippet>
        <furo-split-view flex>
          <furo-textarea-input style="width: 100%" slot="master" rows="14" label="Markdown" hint="just type"
                               @-value-changed="--text"></furo-textarea-input>
          <furo-markdown  style="width: 100%"  ƒ-parse-markdown="--text" ></furo-markdown>
        </furo-split-view>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-textarea-input",DemoFuroTextareaInput);class DemoFuroTimeInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo furo-time-input</h2>
          <p>If you type in a time outside the min max range or the step, an "error" will be indicated. But not the error text.</p>
          <p>You can also type in a time in a "furo-input-field" (the 3rd field). But when you feed "furo-time-input" with bad data, it displays "--:--"</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-time-input label="nothing "></furo-time-input>
            <furo-time-input ƒ-set-value="--time" autofocus value="01:00" step="900" hint="Step in 15 Minutes" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-time-input ƒ-set-value="--time" max="19:00" min="13:00" value="18:00"  hint="Min max" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-text-input ƒ-set-value="--time"  label="Input field" @-value-changed="--time"></furo-text-input>
            <furo-time-input error errortext="Useful error text" ƒ-set-value="--time" hint="Type in some time" label="With error" @-value-changed="--time"></furo-time-input>
            <furo-time-input disabled ƒ-set-value="--time" value="6000" hint="Is disabled" label="Disabled" @-value-changed="--time"></furo-time-input>
            
            <hr>

            <furo-time-input condensed label="nothing "></furo-time-input>
            <furo-time-input condensed ƒ-set-value="--time" autofocus value="01:00" step="900" hint="Step in 15 Minutes" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-time-input condensed ƒ-set-value="--time" max="19:00" min="13:00" value="18:00"  hint="Min max" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-text-input condensed ƒ-set-value="--time"  label="Input field" @-value-changed="--time"></furo-text-input>
            <furo-time-input condensed error errortext="Useful error text" ƒ-set-value="--time" hint="Type in some time" label="With error" @-value-changed="--time"></furo-time-input>
            <furo-time-input condensed disabled ƒ-set-value="--time" value="6000" hint="Is disabled" label="Disabled" @-value-changed="--time"></furo-time-input>
            <hr>
            
            <furo-time-input filled label="nothing "></furo-time-input>
            <furo-time-input filled ƒ-set-value="--time" autofocus value="01:00" step="900" hint="Step in 15 Minutes" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-time-input filled ƒ-set-value="--time" max="19:00" min="13:00" value="18:00"  hint="Min max" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-text-input filled ƒ-set-value="--time"  label="Input field" @-value-changed="--time"></furo-text-input>
            <furo-time-input filled error errortext="Useful error text" ƒ-set-value="--time" hint="Type in some time" label="With error" @-value-changed="--time"></furo-time-input>
            <furo-time-input filled disabled ƒ-set-value="--time" value="6000" hint="Is disabled" label="Disabled" @-value-changed="--time"></furo-time-input>
            
            <hr>

            <furo-time-input filled condensed label="nothing "></furo-time-input>
            <furo-time-input filled condensed ƒ-set-value="--time" autofocus value="01:00" step="900" hint="Step in 15 Minutes" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-time-input filled condensed ƒ-set-value="--time" max="19:00" min="13:00" value="18:00"  hint="Min max" label="Time input field" @-value-changed="--time"></furo-time-input>
            <furo-text-input filled condensed ƒ-set-value="--time"  label="Input field" @-value-changed="--time"></furo-text-input>
            <furo-time-input filled condensed error errortext="Useful error text" ƒ-set-value="--time" hint="Type in some time" label="With error" @-value-changed="--time"></furo-time-input>
            <furo-time-input filled condensed disabled ƒ-set-value="--time" value="6000" hint="Is disabled" label="Disabled" @-value-changed="--time"></furo-time-input>
            <hr>
            
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-time-input",DemoFuroTimeInput);class DemoFuroDateInput extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo furo-date-input</h2>
          <p>If you type in a date outside the min max range or the step, an "error" will be indicated. But not the error text.</p>
          <p>You can also type in a date in a "furo-input-field" (the 3rd field). But when you feed "furo-date-input" with bad data, it displays "--:--"</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-date-input ƒ-set-value="--date" autofocus value="1974-12-08" min="1974-12-08" step="7" hint="Step in 7 Days" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-date-input ƒ-set-value="--date" max="2020-12-31" min="2020-01-01" value="2020-02-02"  hint="Min max in 2020 only" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-text-input ƒ-set-value="--date"  label="Input field" @-value-changed="--date"></furo-text-input>
            <furo-date-input error errortext="Useful error text" ƒ-set-value="--date" hint="Type in some date" label="With error" @-value-changed="--date"></furo-date-input>
            <furo-date-input disabled ƒ-set-value="--date" value="2020-01-01" hint="Is disabled" label="Disabled" @-value-changed="--date"></furo-date-input>
            <hr>
            <furo-date-input condensed ƒ-set-value="--date" autofocus value="1974-12-08" min="1974-12-08" step="7" hint="Step in 7 Days" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-date-input condensed ƒ-set-value="--date" max="2020-12-31" min="2020-01-01" value="2020-02-02"  hint="Min max in 2020 only" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-text-input condensed ƒ-set-value="--date"  label="Input field" @-value-changed="--date"></furo-text-input>
            <furo-date-input condensed error errortext="Useful error text" ƒ-set-value="--date" hint="Type in some date" label="With error" @-value-changed="--date"></furo-date-input>
            <furo-date-input condensed disabled ƒ-set-value="--date" value="2020-01-01" hint="Is disabled" label="Disabled" @-value-changed="--date"></furo-date-input>
            <hr>
            <furo-date-input filled ƒ-set-value="--date" autofocus value="1974-12-08" min="1974-12-08" step="7" hint="Step in 7 Days" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-date-input filled ƒ-set-value="--date" max="2020-12-31" min="2020-01-01" value="2020-02-02"  hint="Min max in 2020 only" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-text-input filled ƒ-set-value="--date"  label="Input field" @-value-changed="--date"></furo-text-input>
            <furo-date-input filled error errortext="Useful error text" ƒ-set-value="--date" hint="Type in some date" label="With error" @-value-changed="--date"></furo-date-input>
            <furo-date-input filled disabled ƒ-set-value="--date" value="2020-01-01" hint="Is disabled" label="Disabled" @-value-changed="--date"></furo-date-input>
            <hr>
            <furo-date-input filled condensed ƒ-set-value="--date" autofocus value="1974-12-08" min="1974-12-08" step="7" hint="Step in 7 Days" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-date-input filled condensed ƒ-set-value="--date" max="2020-12-31" min="2020-01-01" value="2020-02-02"  hint="Min max in 2020 only" label="Date input field" @-value-changed="--date"></furo-date-input>
            <furo-text-input filled condensed ƒ-set-value="--date"  label="Input field" @-value-changed="--date"></furo-text-input>
            <furo-date-input filled condensed error errortext="Useful error text" ƒ-set-value="--date" hint="Type in some date" label="With error" @-value-changed="--date"></furo-date-input>
            <furo-date-input filled condensed disabled ƒ-set-value="--date" value="2020-01-01" hint="Is disabled" label="Disabled" @-value-changed="--date"></furo-date-input>
            <hr>
            
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-date-input",DemoFuroDateInput);class DemoFuroInputTogether extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo input items together</h2>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-card style="margin:8px;height:200px">
              <div ƒ-.inner-text="--fromTextarea">Do not forget to give the card <br> a height</div>
              <furo-horizontal-flex slot="action">
                <furo-button primary label="primary"></furo-button>
                <furo-button label="other"></furo-button>
                <furo-button accent label="accent"></furo-button>
                <furo-empty-spacer></furo-empty-spacer>
                <furo-button danger label="Danger"></furo-button>
              </furo-horizontal-flex>
            </furo-card>
            <br>
            <br>
            <furo-time-input ƒ-set-value="--time" value="01:00" step="900" hint="Step in 15 Minutes"
                             label="Time  field" @-value-changed="--time"></furo-time-input>
            <furo-range-input label="Range" step="0.25" value="11" min="10" max="20" hint="Slide for a number"
                              @-value-changed="--rval" ƒ-set-value="--nval"></furo-range-input>
           
            <furo-color-input label="Color" value="#FEA234"></furo-color-input>
            <furo-search-input label="Search"></furo-search-input>
            <furo-date-input ƒ-set-value="--date" max="2020-12-31" min="2020-01-01" value="2020-02-02"
                             hint="Min max in 2020 only" label="Date input field"
                             @-value-changed="--date"></furo-date-input>
            <furo-password-input
                    value="1234"
                    hint="under your keyboard or on postit below monitor"
                    label="super secret password"
                    ƒ-make-visible="--showPasswordClicked"
                    ƒ-make-invisible="--hidePasswordClicked"
            ></furo-password-input>

            <furo-text-input ƒ-set-value="--text" autofocus value="some text" hint="With autofocus"
                             label="Text input field" @-value-changed="--text"></furo-text-input>
            <furo-number-input ƒ-set-value="--number" value="123.25" step="0.25" hint="Steps 0.25"
                               label="Number input field" @-value-changed="--number"></furo-number-input>
            <furo-text-input style="width: 100%" ƒ-set-value="--time" label="Input field" @-value-changed="--time"></furo-text-input>
            
            <hr>
            <furo-textarea-input rows="4" label="a lot of text" hint="just type" value="aa\nss\v" @-value-changed="--fromTextarea"></furo-textarea-input>
            
            <furo-input-row label="row label">
              <furo-text-input ƒ-set-value="--text" autofocus value="some text" hint="With autofocus"
                               label="Text input field" @-value-changed="--text"></furo-text-input>
              <furo-number-input ƒ-set-value="--number" value="123.25" step="0.25" hint="Steps 0.25"
                                 label="Number input field" @-value-changed="--number"></furo-number-input>
            </furo-input-row>
            <furo-button-bar>
              <furo-button primary raised label="primary"></furo-button>
              <furo-button secondary raised label="secondary"></furo-button>
              <furo-empty-spacer></furo-empty-spacer>
              <furo-button danger raised label="danger"></furo-button>
            </furo-button-bar>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-input-together",DemoFuroInputTogether);class FuroTreeItem extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.hidden=!0}search(event){if(!this.hidden){let term=event.term.toLowerCase();// do not search empty searchTerm
if(0===term.length){return}let searchTokens=term.split(" "),hasResults=!0;searchTokens.forEach(t=>{if(0<t.length){if(1===t.length){// single letter search first letter of word
t=t+".*$"}hasResults=hasResults&&this._searchTokens.has(t)}});if(hasResults){// append fieldnode to result set (used in furo-tree.js)
event.results.push(this.fieldNode)}}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */hidden:{type:Boolean,reflect:!0},hovered:{type:Boolean,reflect:!0},searchmatch:{type:Boolean,reflect:!0},inedit:{type:Boolean,reflect:!0},haserror:{type:Boolean,reflect:!0},selected:{type:Boolean,reflect:!0},noicon:{type:Boolean}}}// re render, build search tokens
_updateItem(){this.requestUpdate();// build index later (50ms), a human user can not react earlyer
setTimeout(()=>{let tmpArr=[];this.fieldNode.__childNodes.filter(field=>{// maybe change to fields-to-index list
if("string"===typeof field._value){return!0}}).map(field=>{tmpArr=tmpArr.concat(field._value.toLowerCase().split(/\W+/))});let s=new Set(tmpArr);// tokenize
tmpArr=[];s.forEach(word=>{//first letter
tmpArr.push(word.substr(0,1)+".*$");let l;for(let tokenLength=2;tokenLength<word.length;tokenLength++){l=word.length-tokenLength+1;for(let i=0;i<l;i++){tmpArr.push(word.substr(i,tokenLength))}}});this._searchTokens=new Set(Array.from(s).concat(tmpArr))},50)}bindData(fieldNode){this.fieldNode=fieldNode;this.fieldNode._isHidden=!0;// reflect visible close state to attr
this.fieldNode.addEventListener("ancestor-invisible",e=>{this.hidden=!0;this.fieldNode._isHidden=!0});// reflect visible close state to attr
this.fieldNode.addEventListener("ancestor-visible",e=>{if(this.fieldNode.__parentNode.__parentNode.open.value){this.hidden=!1;this.fieldNode._isHidden=!1}});// for elements that are already ready
this._updateItem();this.fieldNode.addEventListener("branch-value-changed",e=>{// for elements that are updated later
if(e.detail.__parentNode===this.fieldNode){this._updateItem()}});this.fieldNode.addEventListener("modified",n=>{this.inedit=!0});this.fieldNode.addEventListener("has-error",n=>{this.haserror=!0});// listen to open close state
this.fieldNode.open.addEventListener("field-value-changed",e=>{e.cancelBubble=!0;if(!1===e.detail.value){e.detail.__parentNode.children.broadcastEvent(new NodeEvent("ancestor-invisible",e.detail.__parentNode))}else{e.detail.__parentNode.children.broadcastEvent(new NodeEvent("ancestor-visible",e.detail.__parentNode))}});// make first node visible
if(0===this.fieldNode.depth){this.hidden=!1;this.fieldNode._isHidden=!1}this._FBPTriggerWire("--fieldOpen",this.fieldNode.open)}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
this._FBPAddWireHook("--labelClicked",e=>{this.fieldNode.selectItem()});this.fieldNode.addEventListener("tree-node-unselection-requested",e=>{this.selected=!1;this.fieldNode._isSelected=!1});this.fieldNode.addEventListener("tree-node-blur-requested",e=>{this.hovered=!1});this.fieldNode.addEventListener("this-node-hovered",e=>{this.hovered=!0});this.fieldNode.addEventListener("this-node-selected",e=>{this.selected=!0;this.fieldNode._isSelected=!0});// This item is not or no more in the search results
this.fieldNode.addEventListener("search-didnt-match",e=>{this.searchmatch=!1});// This item is  in the search results
this.fieldNode.addEventListener("search-matched",e=>{this.searchmatch=!0})}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
            :host {
                display: block;
                line-height: 40px;
                cursor: pointer;
                user-select: none;
                padding-left: var(--spacing-xs, 16px);
                border-radius: 2px;
                position: relative;
            }

            :host([hidden]) {
                display: none;
            }

            :host([inedit]) {
                font-style: italic;
            }

            :host([haserror]) ,
            :host([selected][haserror]) {
                color: var(--error, red);
            }

            :host([haserror]) furo-icon {
                animation: error-pulse 3s infinite;
            }

            .label {
                white-space: nowrap;
                font-size: 0.875rem;
                letter-spacing: 0.2px;
                margin-left: 8px;
            }

            .desc {
                font-size: smaller;
                white-space: nowrap;
            }

            .oc {
                color: var(--separator-color, #b5b5b5);
                width: 12px;
                box-sizing: border-box;
                padding-left: 4px;
                font-size: 8px;
            }

            :host([selected]) .oc {
                color: var(--on-primary, white);
            }

            :host([searchmatch])::before {
                position: absolute;
                top: 8px;
                content: "🔍";
                right: 2px;
                font-size: 12px;
            }

            furo-icon[error] {
                animation: error-pulse 2s infinite;
            }

            :host([selected]) furo-icon {
                fill: var(--on-primary, white);;
            }


            furo-icon {

                transition: all 0.4s;
                width: 20px;
                height: 20px;
                margin-right: 4px;

            }

            @keyframes error-pulse {
                0% {
                    fill: var(--on-primary, #46150f);
                }
                12% {
                    fill: var(--error-color, #fc4d34);
                }
                24% {
                    fill: var(--on-primary, #46150f);
                }
                36% {
                    fill: var(--error-color, #fc4d34);
                }
                48% {
                    fill: var(--on-primary, #46150f);
                }

            }

        `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
<furo-horizontal-flex @-dblclick="--dblclicked" @mouseenter="${e=>this.fieldNode.triggerHover()}">
      <div style="width: ${8*this.fieldNode.depth}px"></div>
      <div class="oc"><furo-data-bool-icon ?hidden="${!this.fieldNode.children.repeats.length}" ƒ-toggle="--dblclicked" ƒ-bind-data="--fieldOpen"></furo-data-bool-icon></div>      
            
      <div flex class="label" @-click="--labelClicked" > <furo-icon ?hidden="${this.noicon}" icon="${this.fieldNode.icon}" ?error="${this.fieldNode.has_error.value}"></furo-icon> ${this.fieldNode.display_name} <span class="desc">${this.fieldNode.description}</span></div>
</furo-horizontal-flex>

    `}}_exports.FuroTreeItem=FuroTreeItem;window.customElements.define("furo-tree-item",FuroTreeItem);var furoTreeItem={FuroTreeItem:FuroTreeItem};_exports.$furoTreeItem=furoTreeItem;class FuroTree extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();/**
              * Flat list representation of the tree
              * @type {Array}
              * @private
              */this._flatTree=[];this.tabindex=0;this._searchTerm="";this._searchIsActive=!1;/**
                                   * If you want to use a custom component for the tree-item, set this attribute.
                                   * The default item component is **furo-tree-item**.
                                   *
                                   * @type {*|string|string}
                                   */this.treeItemComponent=this.getAttribute("tree-item-component")||"furo-tree-item";this._treeItemTepmplate=(0,_furoShell.html)([["<",this.treeItemComponent," \u0192-bind-data=\"--itemInjected(*.item)\" \u0192-search=\"--trigger\"></",this.treeItemComponent,">"].join("")]);// keyboard navigation on top node only
this.addEventListener("keydown",event=>{let key=event.key||event.keyCode;switch(key){case"Enter":event.preventDefault();// not reseting the search at this position is by intention.
if(this._hoveredField._isSelected){// openclose
this._hoveredField.toggleOpenClose()}else{// open the hovered field
this._hoveredField.selectItem()}break;case"ArrowDown":event.preventDefault();this._hoverNext();break;case"ArrowUp":event.preventDefault();this._hoverPrevious();break;case"ArrowLeft":event.preventDefault();this._resetSearch();// close when opened, parent when closed
if(!this._hoveredField.isBranch()&&this._hoveredField.open.value){this._hoveredField.toggleOpenClose()}else{this._hoverHome()}break;case"ArrowRight":event.preventDefault();this._resetSearch();// open when closed, next when opened
if(!this._hoveredField.isBranch()&&!this._hoveredField.open.value){this._hoveredField.toggleOpenClose()}else{this._hoverNext()}break;case"Escape":if(this._searchIsActive){event.stopPropagation();this._resetSearch()}break;case"Backspace":this._removeLastSymbofFromSearch();break;}});// keyboard navigation on top node only
this.addEventListener("keypress",event=>{let key=event.key||event.keyCode;if("Enter"===key){return}if(!event.ctrlKey){event.preventDefault();this._addSymbolToSearch(key)}else{switch(key){// expand recursive with ctrl-e
case"e":event.preventDefault();this._hoveredField.expandRecursive();break;}}})}_removeLastSymbofFromSearch(){this._searchTerm=this._searchTerm.substr(0,this._searchTerm.length-1);if(0===this._searchTerm.length){this._resetSearch()}else{this.searchOpenTree(this._searchTerm)}}_addSymbolToSearch(key){this._searchTerm+=key;this.searchOpenTree(this._searchTerm)}searchOpenTree(){this._searchIsActive=!0;let d={term:this._searchTerm,results:[]};this._foundSearchItems=d.results;this._FBPTriggerWire("--searchRequested",d);// select first result
if(0<d.results.length){d.results[0].triggerHover()}this._updateSearchmatchAttributesOnItems();this.requestUpdate()}_resetSearch(){this._searchIsActive=!1;this._searchTerm="";this._foundSearchItems=[];this._updateSearchmatchAttributesOnItems()}_updateSearchmatchAttributesOnItems(){this._rootNode.broadcastEvent(new NodeEvent("search-didnt-match",this._rootNode,!0));this._foundSearchItems.map(node=>{node.dispatchNodeEvent(new NodeEvent("search-matched",this._rootNode,!1))})}_hoverHome(){let parent=this._hoveredField.getParentElement();if(parent){parent.triggerHover()}}/**
     * hovers the previous item
     */_hoverPrevious(){let prev;if(this._searchIsActive){for(let i=0;i<this._foundSearchItems.length;i++){if(this._foundSearchItems[i].__flatTreeIndex>=this._hoveredField.__flatTreeIndex){prev=this._foundSearchItems[i-1];break}}// select last
if(!prev){prev=this._foundSearchItems[this._foundSearchItems.length-1]}}else{prev=this._hoveredField.getPrevElement()}if(prev){prev.triggerHover()}}/**
     * select the previous visible item
     */selectPrev(){this._hoveredField=this._selectedField||this._hoveredField;this._hoverPrevious();// open the hovered field
this._hoveredField.selectItem()}/**
     * expands the currently selected node recursive
     */expandNodeRecursive(){this._selectedField.expandRecursive()}expandAll(){this._flatTree[0].expandRecursive()}collapseAll(){this._flatTree[0].collapseRecursive()}/**
     * expands the currently selected node recursive
     */collapseNodeRecursive(){this._selectedField.collapseRecursive()}/**
     * toggles the currently selected node
     */toggle(){this._selectedField.toggleOpenClose()}addSubNode(rawNode){let newnode=this._selectedField.children.add();newnode.value=rawNode;this._buildFlatTree(this._rootNode);setTimeout(()=>{newnode.selectItem()},10)}deleteNode(){this._selectedField.__parentNode.deleteChild(this._selectedField.__index);this._buildFlatTree(this._rootNode)}/**
     * select the next visible item
     */selectNext(){this._hoveredField=this._selectedField||this._hoveredField;this._hoverNext();// open the hovered field
this._hoveredField.selectItem()}/**
     * hovers the next item
     */_hoverNext(){let next;if(this._searchIsActive){for(let i=this._foundSearchItems.length-1;0<=i;i--){if(this._foundSearchItems[i].__flatTreeIndex<=this._hoveredField.__flatTreeIndex){next=this._foundSearchItems[i+1];break}}// select first
if(!next){next=this._foundSearchItems[0]}}else{next=this._hoveredField.getNextVisibleElement()}if(next){next.triggerHover()}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Maximal depth for the tree. Default is infinite.
       */depth:{type:Number},/**
       * Sets the tabindex
       */tabindex:{type:Number,reflect:!0},/**
       * indicator for searching. Maybe you want style your item depending on this attribute
       */_searchIsActive:{type:Boolean,attribute:"searching",reflect:!0}}}/**
     * focuses the element
     */focus(){super.focus()}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady()}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            box-sizing: border-box;

            outline: none;
            position: relative;
        }

        .tablewrapper {
            overflow: auto;
            height: 100%;
        }

        :host([hidden]) {
            display: none;
        }

        td {
            padding: 0;
        }

        table {
            border-spacing: 0;
            min-width: 100%;
        }


        :host(:not(:focus-within)) td > *[hovered] {
            background: unset;
        }

        :host(:focus-within) td > *[selected] {
            background: var(--primary, #429cff);
            color: var(--on-primary, white);
        }

        td > *[hovered] {
            background-color: var(--hover-color, #eeeeee);
        }

        td > *[selected], :host(:not(:focus-within)) td > *[selected] {
            background-color: var(--primary-variant-color, #429cff);
            color: var(--on-primary, #FFFFFF);
        }


        :host(:focus-within) td > *[selected]:hover {
            background: var(--primary, #57a9ff);
        }


        .srch {
            display: none;
            position: absolute;
            left: var(--spacing-xs, 8px);
            bottom: var(--spacing-xs, 8px);
            width: inherit;
            border: 1px solid var(--primary, #57a9ff);
            padding: 2px;
            font-size: 11px;
            z-index: 2;
            animation: border-pulsate 2s;
        }

        @keyframes border-pulsate {
            0% {
                border-color: var(--primary, #57a9ff);
            }
            50% {
                border-color: var(--surface, #999999);
            }
            100% {
                border-color: var(--primary, #57a9ff);
            }
        }

        :host([searching]:focus-within) .srch {
            display: block;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
    <div class="srch">🔍 ${this._searchTerm}</div>
      <div class="tablewrapper">
      <table>
        <template is="flow-repeat" ƒ-inject-items="--treeChanged" ƒ-trigger-all="--searchRequested">
          <tr>
            <td>
              ${this._treeItemTepmplate}
            </td>
          </tr>
        </template>
      </table>
      </div>
    `}bindData(treeNode){if(treeNode.fields===void 0){return}this._tree=treeNode.fields;this._rootNode=this._tree.root;treeNode.addEventListener("data-injected",e=>{this._init()});this._init()}_init(){this._buildFlatTree(this._rootNode);// set visible on root node
this._rootNode.children.broadcastEvent(new NodeEvent("ancestor-visible",this._rootNode));if(!this.__listenersInitialized){this._initHoverAndSelectEvents()}this.__listenersInitialized=!0;// initial hover on first element
this._hoveredField=this._flatTree[0];setTimeout(()=>{this._hoveredField.triggerHover()},0)}_initHoverAndSelectEvents(){// Internal Event, when a node gets hovered
this._rootNode.addEventListener("tree-node-hovered",e=>{// broadcast blur
this._rootNode.broadcastEvent(new NodeEvent("tree-node-blur-requested"));this._hoveredField=e.target;// only dispatch when the element contains a name
if(null!=this._hoveredField.display_name.value){/**
         * @event node-hovered
         * Fired when
         * detail payload:
         */let customEvent=new Event("node-hovered",{composed:!0,bubbles:!0});customEvent.detail=this._hoveredField;this.dispatchEvent(customEvent);if(this._hoveredField.isBranch()){/**
           * @event branch-hovered
           * Fired when
           * detail payload:
           */let customEvent=new Event("branch-hovered",{composed:!0,bubbles:!0});customEvent.detail=this._hoveredField;this.dispatchEvent(customEvent)}else{/**
           * @event leaf-hovered
           * Fired when
           * detail payload:
           */let customEvent=new Event("leaf-hovered",{composed:!0,bubbles:!0});customEvent.detail=this._hoveredField;this.dispatchEvent(customEvent)}}});// Internal Event, when a node gets selected
this._rootNode.addEventListener("tree-node-selected",e=>{// broadcast deselect
this._rootNode.broadcastEvent(new NodeEvent("tree-node-unselection-requested"));this._selectedField=e.target;/**
                                       * @event node-selected
                                       * Fired when
                                       * detail payload:
                                       */let customEvent=new Event("node-selected",{composed:!0,bubbles:!0});customEvent.detail=this._selectedField;this.dispatchEvent(customEvent);if(this._selectedField.isBranch()){/**
         * @event branch-selected
         * Fired when
         * detail payload:
         */let customEvent=new Event("branch-selected",{composed:!0,bubbles:!0});customEvent.detail=this._selectedField;this.dispatchEvent(customEvent)}else{/**
         * @event leaf-selected
         * Fired when
         * detail payload:
         */let customEvent=new Event("leaf-selected",{composed:!0,bubbles:!0});customEvent.detail=this._selectedField;this.dispatchEvent(customEvent)}})}_buildFlatTree(tree){this._flatTree=[tree];tree.__flatTreeIndex=0;this._parseTreeRecursive(tree,0,this.depth);for(let len=this._flatTree.length;0<len;len--){let index=len-1,node=this._flatTree[index];// open field if entity contains a field open with true
if(!node.open){node.addChildProperty("open",new FieldNode(node,{type:"bool"},"open"));node.open.value=!1}// Traverse the flat tree, it is simpler then the nested tree
// next active element
node.getNextVisibleElement=()=>{for(let i=index+1;i<this._flatTree.length;i++){if(!this._flatTree[i]._isHidden){return this._flatTree[i]}}return!1};// prev active element
node.getPrevElement=()=>{for(let i=index-1;0<=i;i--){if(!this._flatTree[i]._isHidden){return this._flatTree[i]}}return!1};// is branch
node.isBranch=()=>{return 0===node.children.repeats.length};// get Parent
node.getParentElement=()=>{return node.__parentNode.__parentNode};// add openclose method to treeNode
node.toggleOpenClose=()=>{node.open.value=!node.open.value};// hovers the current node
node.triggerHover=()=>{node.dispatchNodeEvent(new NodeEvent("tree-node-hovered",this,!0));node.dispatchNodeEvent(new NodeEvent("this-node-hovered",this,!1))};// selects the current item
node.selectItem=()=>{node.dispatchNodeEvent(new NodeEvent("tree-node-selected",node,!0));node.dispatchNodeEvent(new NodeEvent("this-node-selected",node,!1));// used to open the paths upwards from the selected node
node.__parentNode.dispatchNodeEvent(new NodeEvent("descendant-selected",this,!0));//node.triggerHover()
};// if a descendant was selected, we ensure to open the path
node.addEventListener("descendant-selected",e=>{node.open.value=!0});// expand recursive
node.expandRecursive=()=>{node.broadcastEvent(new NodeEvent("recursive-expand-requested",node))};node.addEventListener("recursive-expand-requested",e=>{node.open.value=!0});// collapse recursive
node.collapseRecursive=()=>{node.broadcastEvent(new NodeEvent("recursive-collapse-requested",node))};node.addEventListener("recursive-collapse-requested",e=>{node.open.value=!1})}// open the root ode
tree.open.value=!0;this._FBPTriggerWire("--treeChanged",this._flatTree)}_parseTreeRecursive(tree,level,maxdepth){if(0<maxdepth&&!(level<maxdepth)){return}tree.depth=level;level++;tree.children.repeats.forEach(node=>{node.depth=level;let i=this._flatTree.push(node);node.__flatTreeIndex=i-1;if(0<node.children.repeats.length){this._parseTreeRecursive(node,level,maxdepth)}})}}window.customElements.define("furo-tree",FuroTree);const Types$1={"vnd.com.acme.tree":{name:"Tree",type:"vnd.com.acme.tree",mime:"application/vnd.com.acme.tree+json",description:"Tree komposit",fields:{id:{description:"id",type:"int"},display_name:{description:"Label",type:"string"},panel:{description:"Label",type:"string"},description:{description:"description",type:"string"},open:{description:"open close",type:"bool",meta:{default:!1}},root:{descripion:"The root node",type:"vnd.com.acme.treeitem"}}},"vnd.com.acme.treeitem":{name:"Tree",type:"vnd.com.acme.tree",mime:"application/vnd.com.acme.tree+json",description:"Tree komposit",fields:{id:{description:"id",type:"int"},display_name:{description:"Label",type:"string"},subtitle:{description:"Label",type:"string"},icon:{description:"Label",type:"string"},description:{description:"description",type:"string"},key_words:{description:"description",type:"string"},has_error:{description:"description",type:"bool"},link:{description:"self Link",type:"vnd.furo.link"},open:{description:"open close",type:"bool",meta:{default:!1}},children:{descripion:"Child nodes",type:"vnd.com.acme.treeitem",meta:{repeated:!0}}}},"vnd.furo.link":{name:"Link",type:"vnd.furo.link",mime:"application/vnd.furo.link+json",description:"link",fields:{rel:{description:"the relationship",type:"string",__proto:{number:1}},method:{description:"method of curl",type:"string",__proto:{number:2}},href:{description:"link",type:"string",__proto:{number:3}},type:{description:"mime type",type:"string",__proto:{number:4}}}}};_exports.Types$1=Types$1;var apiConfig$1={Types:Types$1};// -- initialize application env, theme, api
_exports.$apiConfig$1=apiConfig$1;_furoShell.Init.registerApiTypes(Types$1);class ProduceData extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.data={data:{panel:"view",root:{id:1,display_name:"root",description:"root",icon:"mail",open:!0,link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task"},children:[{id:2,display_name:"A",description:"first with veery big title sub",link:{rel:"self",method:"GET",href:"./api/v1/tasks/A.json",type:"vnd.com.acme.task"},children:[{id:3,display_name:"C",description:"sub sirst with veery big titleub",link:{rel:"self",method:"GET",href:"./api/v1/tasks/c4.json",type:"vnd.com.acme.task"},children:[]}]},{id:4,display_name:"B",description:"second sirst with veery big titleub",open:!0,link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task-b"},children:[{id:5,display_name:"D",description:"sub suirst with veery big titleb",link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task"},children:[{id:6,display_name:"E",description:"sub suirst with veery big titleb",link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task"},children:[{id:7,display_name:"E",description:"sub sub",link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task"},children:[{id:8,display_name:"E",description:"sub sub",link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.task"},children:[{id:455,display_name:"E",description:"Berlin",children:[]}]}]}]}]},{id:234,display_name:"E",description:"sub unknown type",link:{rel:"self",method:"GET",href:"./api/v1/tasks/12.json",type:"vnd.com.acme.unknown"},children:[]}]}]}}};this.addEventListener("click",this.produce)}_FBPReady(){super._FBPReady();if(this.auto){this.produce()}}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */auto:{type:Boolean}}}produce(){/**
     * @event data
     * Fired when
     * detail payload:
     */let customEvent=new Event("data",{composed:!0,bubbles:!0});customEvent.detail=this.data;this.dispatchEvent(customEvent)}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
        }

        :host([hidden]) {
            display: none;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-button label="create tree data"></furo-button>
    `}}window.customElements.define("produce-data",ProduceData);class DemoFuroTree extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <h2>Demo demo-furo-tree</h2>
        <p>description</p>
        <furo-demo-snippet flex>
          <template>
            
            
            <furo-button @-click="--focusClicked" label="focus"></furo-button>
            <furo-button @-click="--expandAll" label="expand all"></furo-button>
            <furo-button @-click="--collapseAll" label="collapse all"></furo-button>
            <entity-object type="vnd.com.acme.tree" ƒ-inject-raw="--data" @-object-ready="--entityObj"></entity-object>
            
            <furo-split-view style="height: 500px;">
              <furo-tree slot="master" ƒ-focus="--focusClicked" ƒ-bind-data="--entityObj(*.fields)" @-node-selected="--nodeSelected"
                         ƒ-select-next="--next"
                         ƒ-select-prev="--prev"
                         ƒ-add-sub-node="--addSub"
                         ƒ-expand-node-recursive="--expandNode"
                         ƒ-expand-all="--expandAll"
                         ƒ-collapse-all="--collapseAll"
                         ƒ-delete-node="--deleteNode"
                         @-node-hovered="--nodeHovered"></furo-tree>
              
              <furo-card>
                <h4>Hovered</h4>
                <furo-input-row label="title" @-click="--thcl">
                  <furo-text-input flex ƒ-focus="--thcl" ƒ-bind-data="--nodeHovered(*.display_name)"></furo-text-input>
                </furo-input-row>
                <furo-input-row label="description">
                  <furo-data-textarea-input flex ƒ-bind-data="--nodeHovered(*.description)"></furo-data-textarea-input>
                </furo-input-row>

                <h4>Selected</h4>
                <furo-input-row label="title">
                  <furo-text-input flex
                                   ƒ-bind-data="--nodeSelected(*.display_name)"></furo-text-input>
                </furo-input-row>
                <furo-input-row label="description">
                  <furo-data-textarea-input flex ƒ-bind-data="--nodeSelected(*.description)"></furo-data-textarea-input>
                </furo-input-row>
                <furo-button @-click="--prev">prev</furo-button>
                <furo-button @-click="--next">next</furo-button>
                <furo-button @-click="--addSub">add sub</furo-button>
                <furo-button @-click="--deleteNode">deleteNode</furo-button>
                <furo-button @-click="--expandNode">expand</furo-button>
              </furo-card>
            </furo-split-view>


            <produce-data auto @-data="--data"></produce-data>
          </template>
        </furo-demo-snippet>
      </furo-vertical-flex>
    `}}window.customElements.define("demo-furo-tree",DemoFuroTree);/**
                                                               *
                                                               * `furo-head-tail`
                                                               *  Splits an iterable (i.e. Array) in its head and tail part.
                                                               *
                                                               *```
                                                               *  <furo-head-tail ƒ-split="--arrayData" @-head="--firstElement" @-tail="--restOfArray"></furo-head-tail>
                                                               *```
                                                               *
                                                               * @summary split an array
                                                               * @customElement
                                                               */class FuroHeadTail extends HTMLElement{/**
   * Splits an iterable to its head (first item) and its tail (the rest) parts.
   *
   * ```
   * ["a", "b", "c", "d"]
   *  |_|  |___________|
   *   ^      ^
   *   |      |
   *   |     TAIL   => ["b", "c", "d"]
   *  HEAD          => "a"
   * ```
   *
   * @param iterable
   */split(iterable){if(!Array.isArray(iterable)){console.warn("input is not iterable",iterable);return}const[head,...tail]=iterable;/**
                                      * @event head
                                      * Fired when Array was splitted
                                      * detail payload: {Any} first element of array
                                      */let headEvent=new Event("head",{composed:!0,bubbles:!0});headEvent.detail=head;this.dispatchEvent(headEvent);/**
                                   * @event tail
                                   * Fired when Array was splitted
                                   * detail payload: {Array || Any} the tail from the injected array (e1 - 1n)
                                   */let tailEvent=new Event("tail",{composed:!0,bubbles:!0});tailEvent.detail=tail;this.dispatchEvent(tailEvent)}}window.customElements.define("furo-head-tail",FuroHeadTail);class FuroPrettyJson extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}static get properties(){return{}}static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
            :host {
                display: block;
                font-family: "Benton Sans", "Helvetica Neue", helvetica, arial, sans-serif;
                margin: var(--spacing);
                line-height: 1.5;
            }

            pre {
                background-color: var(--background);
                padding: 0;
            }

            .string {
                color: #080
            }

            .number {
                color: darkorange;
            }

            .boolean {
                color: blue;
            }

            .null {
                color: magenta;
            }

            .key {
                color: #606
            }

        `}/**
     * Inject JSON data
     * @param json
     */injectData(json){if(json){this.markedText=JSON.stringify(json,null,2);this.markedText=this._syntaxHighlight(this.markedText);this.shadowRoot.querySelector("#content").innerHTML=this.markedText}}_syntaxHighlight(json){if("string"!=typeof json){json=JSON.stringify(json,void 0,2)}json=json.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(match){var cls="number";if(/^"/.test(match)){if(/:$/.test(match)){cls="key"}else{cls="string"}}else if(/true|false/.test(match)){cls="boolean"}else if(/null/.test(match)){cls="null"}return"<span class=\""+cls+"\">"+match+"</span>"})}render(){// language=HTML
return _furoShell.html`
            <pre id="content"></pre>
        `}}window.customElements.define("furo-pretty-json",FuroPrettyJson);class DemoFuroMarkdown extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            overflow: auto;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo furo-markdown</h2>
      <p>If unsafe is not set, html will not be rendered</p>
      <furo-demo-snippet source>
        <template>
          <furo-markdown mdsrc="/FuroBaseComponents/_page/markdown/demo.md"></furo-markdown>
        </template>
      </furo-demo-snippet>     
      
      <h2>Demo furo-markdown unsafe</h2>
      <p>If unsafe is not set, html will not be rendered</p>
      <furo-demo-snippet source>
        <template>
          <furo-markdown unsafe mdsrc="/FuroBaseComponents/_page/markdown/demo.md"></furo-markdown>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-markdown",DemoFuroMarkdown);class DemoFuroPrettyJson extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }
        furo-demo-snippet{
            height: 500px;
        }
       
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <h2>Demo demo-furo-pretty-json</h2>
      <p>description</p>
      <furo-demo-snippet >
        <template>
          <produce-data @-data="--data"></produce-data>
          <furo-vertical-scroller>
          <furo-pretty-json ƒ-inject-data="--data"></furo-pretty-json>
          </furo-vertical-scroller>
        </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-furo-pretty-json",DemoFuroPrettyJson);class FuroCaptureAudio extends _furoShell.LitElement{constructor(){super();this.constraints={audio:!0,video:!1}}stop(){this.tracks[0].stop()}start(){if(navigator.mediaDevices){navigator.mediaDevices.getUserMedia(this.constraints).then(stream=>{/**
         *
         * @type {MediaStream}
         */this.stream=stream;this.tracks=stream.getTracks();/**
                                           * the stream
                                           * @type {MediaStream}
                                           */ /**
                                               * @event stream
                                               * Fired when
                                               * detail payload:
                                               */let customEvent=new Event("stream",{composed:!0,bubbles:!0});customEvent.detail=this.stream;this.dispatchEvent(customEvent)}).catch(this._err)}else{let e=new Error("Works with https only");this._err(e)}}_err(e){console.error(e);/**
                       * @event error
                       * Fired when
                       * detail payload:
                       */let customEvent=new Event("error",{composed:!0,bubbles:!0});customEvent.detail=e;this.dispatchEvent(customEvent)}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}}window.customElements.define("furo-capture-audio",FuroCaptureAudio);class FuroCaptureVideo extends _furoShell.LitElement{constructor(){super();this.constraints={audio:!1,video:{width:{exact:320},height:{exact:240}}}}stop(){this.tracks[0].stop()}start(){if(navigator.mediaDevices){navigator.mediaDevices.getUserMedia(this.constraints).then(stream=>{/**
         *
         * @type {MediaStream}
         */this.stream=stream;this.tracks=stream.getTracks();/**
                                           * the stream
                                           * @type {MediaStream}
                                           */ /**
                                               * @event stream
                                               * Fired when
                                               * detail payload:
                                               */let customEvent=new Event("stream",{composed:!0,bubbles:!0});customEvent.detail=this.stream;this.dispatchEvent(customEvent)}).catch(this._err)}else{let e=new Error("Works with https only");this._err(e)}}_err(e){console.error(e);/**
                       * @event error
                       * Fired when
                       * detail payload:
                       */let customEvent=new Event("error",{composed:!0,bubbles:!0});customEvent.detail=e;this.dispatchEvent(customEvent)}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}}window.customElements.define("furo-capture-video",FuroCaptureVideo);class FuroSpeechRecognition extends _furoShell.LitElement{constructor(){super();window.SpeechRecognition=window.webkitSpeechRecognition||window.SpeechRecognition;this.recognition=new SpeechRecognition;this.recognition.interimResults=!1;this.recognition.onresult=event=>{const speechToText=event.results[0][0].transcript;console.log(event.results);/**
                                  * @event transcript
                                  * Fired when speechToText
                                  * detail payload: string
                                  */let customEvent=new Event("transcript",{composed:!0,bubbles:!0});customEvent.detail=speechToText;this.dispatchEvent(customEvent)}}start(){this.recognition.start()}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}}window.customElements.define("furo-speech-recognition",FuroSpeechRecognition);class DemoCaptureVideo extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-right: var(--spacing);
        }

        :host([hidden]) {
            display: none;
        }

    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-vertical-flex>
        <div>
          <h2>Demo demo-capture-video</h2>
          <p>description</p>
        </div>
        <furo-demo-snippet flex>
          <template>
            <furo-button primary unevelated @-click="--start" label="start"> </furo-button>
            <furo-button danger unevelated @-click="--stop" label="stop"></furo-button>
            <hr>
            <furo-capture-video ƒ-start="--start" ƒ-stop="--stop" @-stream="--stream"></furo-capture-video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
            <video autoplay playsinline ƒ-.src-object="--stream"></video>
      </furo-vertical-flex>
      </template>
      </furo-demo-snippet>
    `}}window.customElements.define("demo-capture-video",DemoCaptureVideo);class FuroDemoLoader extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}load(location){if(location.pathSegments[0]){let lastDemo=this.shadowRoot.querySelector("#demo");lastDemo.remove();this.demoComponent=location.pathSegments[0];// if the element is registered append the new
if(document.createElement(this.demoComponent).constructor!==HTMLElement){// append the demo element
let demo=document.createElement(this.demoComponent);demo.id="demo";this.shadowRoot.appendChild(demo)}else{let demo=document.createElement("div");demo.id="demo";demo.classList.add("error");demo.innerText="404  -  "+this.demoComponent+" is not imported, nothing to show here";this.shadowRoot.appendChild(demo)}this.requestUpdate()}}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            overflow: auto;
            position: relative;
        }

        :host([hidden]) {
            display: none;
        }

        .goback {
            position: absolute;
            right: var(--spacing);

        }
        .error{
            font-size: 48px;
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <a class="goback" href="../doc/">Back to package</a>
        <div id="demo"></div>
    `}}window.customElements.define("furo-demo-loader",FuroDemoLoader);class PanelDemo extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super()}/**
     * @private
     * @return {Object}
     */static get properties(){return{/**
       * Description
       */myBool:{type:Boolean}}}/**
    * flow is ready lifecycle method
    */_FBPReady(){super._FBPReady();// this._FBPTraceWires()
}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-left: var(--spacing-s);
            overflow: hidden;
            box-sizing: border-box;
            background-color: var(--background);
            --split-master-width: 212px;
        }

        :host([hidden]) {
            display: none;
        }
        
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      
      <furo-location url-space-regex="^/api/[^/]*/demo" @-location-changed="--pathChanged"></furo-location>
      <furo-demo-loader ƒ-load="--pathChanged"></furo-demo-loader>
    `}}window.customElements.define("panel-demo",PanelDemo);class PanelDoc extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            padding-top: var(--spacing);
            padding-left: var(--spacing-s);
            overflow: hidden;
            box-sizing: border-box;
            background-color: var(--background);
            --split-master-width: 212px;
        }

        :host([hidden]) {
            display: none;
        }

        furo-doc-element, furo-doc-class {
            max-width: 960px;
            min-width: 500px;
            padding-left: var(--spacing);
        }

        /** the background of the bar itself. **/
        ::-webkit-scrollbar {
            width: 6px;
            background-color: var(--surface, white);
        }

        /** the directional buttons on the scrollbar. **/
        ::-webkit-scrollbar-button {
            background-color: var(--on-surface, black);
        }

        /** the empty space “below” the progress bar. **/
        ::-webkit-scrollbar-track {
        }

        /** the top-most layer of the the progress bar not covered by the thumb. **/
        ::-webkit-scrollbar-track-piece {
        }

        /** the draggable scrolling element resizes depending on the size of the scrollable element. **/
        ::-webkit-scrollbar-thumb {
            background-color: var(--on-surface, black);
            border-radius: 3px;
        }

        /** the bottom corner of the scrollable element, where two scrollbar meet. **/
        ::-webkit-scrollbar-corner {
        }

        /** the draggable resizing handle that appears above the scrollbar-corner at the bottom corner of some elements. **/
        ::-webkit-resizer {
        }
    `}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
this._FBPAddWireHook("--packageChanged",e=>{this._FBPTriggerWire("--src","FuroBaseComponents/node_modules/@furo/"+e.pathSegments[0]+"/analysis.json")})}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`

      <!-- find the package -->
      <furo-location url-space-regex="^/api" @-location-changed="--packageChanged"></furo-location>
      <furo-location url-space-regex="^/api/[^/]*/doc" @-location-changed="--pathChanged"></furo-location>
      <furo-doc-fetch-analysis ƒ-fetch-src="--src" ƒ-check-subroute="--pathChanged"
                               @-data="--analysis"></furo-doc-fetch-analysis>

      <furo-split-view>

        <!-- the doc menu -->
        <furo-doc-menu slot="master" scroll ƒ-analysis="--analysis" @-element="--element"
                       @-class="--class" @-mixin="--class"></furo-doc-menu>

        <div scroll>
          <furo-doc-element ƒ-print="--element" ƒ-hide="--class"></furo-doc-element>
        </div>
        <div scroll>
          <furo-doc-class scroll ƒ-print="--class" ƒ-hide="--element"></furo-doc-class>
        </div>
      </furo-split-view>
    `}}window.customElements.define("panel-doc",PanelDoc);class FuroAppFlowRouter extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this.style.display="none";/**
                                  * A regexp that defines the set of URLs that should be considered part
                                  * of this web app.
                                  *
                                  * Clicking on a link that matches this regex won't result in a full page
                                  * navigation, but will instead just update the URL state in place.
                                  *
                                  * This regexp is given everything after the origin in an absolute
                                  * URL. So to match just URLs that start with /app/ do:
                                  *     url-space-regex="^/app/"
                                  *
                                  * @type {string|RegExp}
                                  */this.urlSpaceRegex=this.getAttribute("url-space-regex")||"/"}/**
     * trigger a history back
     */back(){window.history.back()}/**
     * trigger a history forward
     */forward(){window.history.forward()}static get properties(){return{/**
       *Configuration Array
       *
       * | current   | flow-event-name      | target      | [mapping]          |
       * |:----------|:---------------------|:------------|:-------------------|
       * | view-main | form-complete        | detail-view | element => aufgabe |
       * | *         | menu-settings-click  | settings    |                    |
       *
       *
       *
       *  [['view-main', 'button-tap', 'detail-view',  'task => id]]
       *  if current is set to view-main and the app-flow-event with name 'button-tap' is triggered, current is set to detail-view and data.task from app-flow is mapped to data.id.
       *
       *  Special configurations:
       *
       *
       *  You can set a wildcard for "current". If you check the example: menu-settings-click can be triggered from any current. If there is a "current" with menu-settings-click configured and you are there, the wildcard is not used.
       */config:{type:Array}}}/**
     * Trigger the router
     * @param flowEvent
     * @return {boolean}
     */trigger(flowEvent){let currentPath=window.location.pathname.replace(new RegExp(this.urlSpaceRegex),""),match=window.location.pathname.match(new RegExp(this.urlSpaceRegex)),prefix=match[0]||"/",selection=this._configObject[currentPath+flowEvent.event]||this._configObject["*"+flowEvent.event];if(selection){let search="",sa=[];for(let k in flowEvent.data){sa.push(k+"="+flowEvent.data[k])}// todo: implement mapper
if(0<sa.length){search="?"+sa.join("&")}if("HISTORY-BACK"===selection.target){this.back()}else{window.history.pushState({},"",prefix+selection.target+search);/**
                                                                               * Internal notyfication
                                                                               * @private
                                                                               */let now=window.performance.now(),customEvent=new Event("__furoLocationChanged",{composed:!0,bubbles:!0});customEvent.detail=now;this.dispatchEvent(customEvent)}/**
         * @event view-changed
         * Fired when page was changed
         * detail payload: flowEvent
         */let customEvent=new Event("view-changed",{composed:!0,bubbles:!0});customEvent.detail=flowEvent;this.dispatchEvent(customEvent);return!0}/**
       * @event event-not-found
       * Fired when view not
       * detail payload: flowEvent
       */let customEvent=new Event("event-not-found",{composed:!0,bubbles:!0});customEvent.detail=flowEvent;this.dispatchEvent(customEvent);return!1}/**
     * build internal config for faster access
     */set config(configArray){this._configObject={};let self=this;// build config object for faster checks
configArray.forEach(config=>{this._configObject[config[0]+config[1]]={target:config[2],mapping:config[3]}})}}window.customElements.define("furo-app-flow-router",FuroAppFlowRouter);class panelRegistry{static registerType(type,panel){this._registry[type]=panel}static getPanelName(type,suffix){if(suffix){if(this._registry[type]){return this._registry[type][suffix]}else{console.warn("type is not registred:",type);return}}if(this._registry[type]){return this._registry[type]}else{console.warn("type is not registred:",type);return}}}_exports.panelRegistry=panelRegistry;panelRegistry._registry={};var panelRegistry$1={panelRegistry:panelRegistry};_exports.$panelRegistry=panelRegistry$1;class FuroPanelCoordinator extends(0,_furoShell.FBP)(_furoShell.LitElement){constructor(){super();this._openPanels=[];this._furoPage=this.parentNode;this._flatTree=[];/**
                          * the Query param you use for the active page. ap stands for active panel. If it conflicts with your naming, change this property
                          * @type {string}
                          */this.queryTag=this.getAttribute("query-tag")||"ap";/**
                                                             * A regexp that defines the set of URLs that should be considered part
                                                             * of this web app.
                                                             *
                                                             * Clicking on a link that matches this regex won't result in a full page
                                                             * navigation, but will instead just update the URL state in place.
                                                             *
                                                             * This regexp is given everything after the origin in an absolute
                                                             * URL. So to match just URLs that start with /app/ do:
                                                             *     url-space-regex="^/app/"
                                                             *
                                                             * @type {string|RegExp}
                                                             */this.urlSpaceRegex=this.getAttribute("url-space-regex")||"";this._FBPAddWireHook("--locationChanged",e=>{this._handleDeepLink(e)})}bindTreeEntity(entityNode){this._tree=entityNode;this._rootNode=entityNode.fields.root;// set view as default panel
if(this._tree.fields.panel&&this._tree.fields.panel.value){this._panel=this._tree.fields.panel.value}else{this._panel="view"}/**
       * set the query param for the active page.
       */this._rootNode.addEventListener("tree-node-selected",e=>{let nodeID=e.detail.id.value,newQuery=window.location.search.slice(1),queryObject={};if(0<newQuery.length){newQuery.split("&").forEach((qstr,i,a)=>{let p=qstr.split("=");queryObject[p[0]]=p[1]})}queryObject[this.queryTag]="P"+nodeID;let qp=[];for(let segment in queryObject){if(queryObject.hasOwnProperty(segment)){qp.push(segment+"="+queryObject[segment])}}// notify furo location
window.history.pushState({},"",window.location.pathname+"?"+qp.join("&")+window.location.hash);let now=window.performance.now(),customEvent=new Event("__furoLocationChanged",{composed:!0,bubbles:!0});customEvent.detail=now;this.dispatchEvent(customEvent)});this._tree.addEventListener("data-injected",e=>{this._initTree()});this._initTree()}_initTree(){this._flatTree=[this._rootNode];if(0<this._rootNode.children.repeats.length){this._parseTreeRecursive(this._rootNode);if(0<this._flatTree.length&&this._queueLocation){this._handleDeepLink(this._queueLocation);this._queueLocation=void 0}}}_parseTreeRecursive(tree){tree.children.repeats.forEach(node=>{this._flatTree.push(node);if(0<node.children.repeats.length){this._parseTreeRecursive(node)}})}_handleDeepLink(location){if(location.query[this.queryTag]){if(0<this._flatTree.length){let nodes=this._flatTree.filter(n=>{return"P"+n.id.value===location.query.ap});if(nodes[0].link){// Mark Tree node
setTimeout(()=>{let node=nodes[0];node.dispatchNodeEvent(new NodeEvent("this-node-selected",node,!1));// used to open the paths upwards from the selected node
node.__parentNode.dispatchNodeEvent(new NodeEvent("descendant-selected",this,!0));if(node.triggerHover){node.triggerHover()}},150);this._activatePanelForNode(nodes[0])}}else{this._queueLocation=location}}}/**
     * closes all open panels
     */closeAll(event){this._openPanels.forEach(panel=>{panel.dispatchNodeEvent(new NodeEvent("close-requested",this,!1))})}/**
     * removes a panel from the view
     * @param nodeName
     * @private
     */_removeNodeByName(nodeName){// remove from dom
let e=this._furoPage.querySelector("*[name="+nodeName+"]");e.remove();// remove from flat tree
this._openPanels=this._openPanels.filter((node,index)=>{return"P"+node.id.value!==nodeName});if(0<this._openPanels.length){// select item with same index
this._openPanels[this._openPanels.length-1].selectItem()}else{//enable default page
this._furoPage.activatePage("overview");// update query params by removing the queryTag
let newQuery=window.location.search.slice(1),queryObject={};if(0<newQuery.length){newQuery.split("&").forEach((qstr,i,a)=>{let p=qstr.split("=");queryObject[p[0]]=p[1]})}delete queryObject[this.queryTag];let qp=[];for(let segment in queryObject){if(queryObject.hasOwnProperty(segment)){qp.push(segment+"="+queryObject[segment])}}// notify furo location
window.history.pushState({},"",window.location.pathname+"?"+qp.join("&")+window.location.hash);let now=window.performance.now(),customEvent=new Event("__furoLocationChanged",{composed:!0,bubbles:!0});customEvent.detail=now;this.dispatchEvent(customEvent);// -- update query params
}/**
       * @event panel-changed
       * Fired when a panel was opened or is closed
       * detail payload: array with open panels
       */let customEvent=new Event("panel-changed",{composed:!0,bubbles:!1});customEvent.detail=this._openPanels;this.dispatchEvent(customEvent);/**
                                      * @event panel-opened
                                      * Fired when a panel was  closed
                                      * detail payload: array with open panels
                                      */let closedEvent=new Event("panel-closed",{composed:!0,bubbles:!1});closedEvent.detail=this._openPanels;this.dispatchEvent(closedEvent)}_activatePanelForNode(node){let name=node.id.value;// register node
if(-1===this._openPanels.indexOf(node)){let panelComponent=panelRegistry.getPanelName(node.link.type.value,this._panel);if(panelComponent){//create element and set name,...
let panel=document.createElement(panelComponent),panelName="P"+name;panel.setAttribute("name",panelName);panel._TreeNode=node;panel.removePanel=()=>{this._removeNodeByName(panelName)};this._openPanels.push(node);this._furoPage.appendChild(panel);/**
                                            * @event panel-changed
                                            * Fired when a panel was opened or is closed
                                            * detail payload: array with open panels
                                            */let customEvent=new Event("panel-changed",{composed:!0,bubbles:!1});customEvent.detail=this._openPanels;this.dispatchEvent(customEvent);/**
                                          * @event panel-opened
                                          * Fired when a panel was opened
                                          * detail payload: array with open panels
                                          */let openedEvent=new Event("panel-opened",{composed:!0,bubbles:!1});openedEvent.detail=this._openPanels;this.dispatchEvent(openedEvent)}else{console.warn(node.link.type.value,"is not in the registry",this)}}// microtask
setTimeout(()=>{let currentPanel=this._furoPage.activatePage("P"+name);if(currentPanel&&currentPanel._FBPTriggerWire!==void 0){if(!currentPanel.__panelInitSent){currentPanel._FBPTriggerWire("--panelInit",node.link.value);currentPanel._FBPTriggerWire("--treeNode",node);currentPanel.__panelInitSent=!0}currentPanel._FBPTriggerWire("--panelActivated",node.link.value)}},0)}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-location @-location-changed="--locationChanged"  url-space-regex="${this.urlSpaceRegex}"></furo-location>
    `}/**
     * flow is ready lifecycle method
     */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
}}window.customElements.define("furo-panel-coordinator",FuroPanelCoordinator);class ViewApi extends(0,_furoShell.FBP)(_furoShell.LitElement){/**
   * flow is ready lifecycle method
   */_FBPReady(){super._FBPReady();//this._FBPTraceWires()
this._FBPTriggerWire("--nav",_furoShell.nav)}/**
     * Themable Styles
     * @private
     * @return {CSSResult}
     */static get styles(){// language=CSS
return _furoShell.Theme.getThemeForComponent(this.name)||_furoShell.css`
        :host {
            display: block;
            height: 100%;
            overflow: hidden;
            box-sizing: border-box;
            background-color: var(--background, white);
            color: var(--on-background, black);
            --split-master-width: 250px;
        }

        :host([hidden]) {
            display: none;
        }
        furo-pages{
            height: 100%;
        }

        /** the background of the bar itself. **/
        ::-webkit-scrollbar {
            width: 6px;
            background-color: var(--surface, white);
        }

        /** the directional buttons on the scrollbar. **/
        ::-webkit-scrollbar-button {
            background-color: var(--on-surface, black);
        }

        /** the empty space “below” the progress bar. **/
        ::-webkit-scrollbar-track {
        }

        /** the top-most layer of the the progress bar not covered by the thumb. **/
        ::-webkit-scrollbar-track-piece {
        }

        /** the draggable scrolling element resizes depending on the size of the scrollable element. **/
        ::-webkit-scrollbar-thumb {
            background-color: var(--on-surface, black);
            border-radius: 3px;
        }

        /** the bottom corner of the scrollable element, where two scrollbar meet. **/
        ::-webkit-scrollbar-corner {
        }

        /** the draggable resizing handle that appears above the scrollbar-corner at the bottom corner of some elements. **/
        ::-webkit-resizer {
        }
    `}/**
     * @private
     * @returns {TemplateResult}
     */render(){// language=HTML
return _furoShell.html`
      <furo-location url-space-regex="^/api/[^/]*" @-location-changed="--pathChanged"></furo-location>

      <furo-split-view>
        <div slot="master" scroll>
          <side-navigation ƒ-inject-nav-config="--nav" base-path="/api/"></side-navigation>
        </div>
        <furo-pages ƒ-inject-location="--pathChanged" default="default">
          <panel-doc name="doc"></panel-doc>
          <panel-demo name="demo"></panel-demo>
          <div name="default">404 ....</div>
        </furo-pages>
      </furo-split-view>
    `}}window.customElements.define("view-api",ViewApi)});
