syntax = "proto3";
package projectmember;

import "google/api/annotations.proto";




// The members of a project
service ServiceprojectmembersService {           
   
    // Get a collection with PersonEntities
    rpc ListServiceprojectmembers (ListServiceprojectmembersRequest) returns (PersonCollection){
        option (google.api.http) = {
            get: "/api/members"
        };
    }   
    // Custom method to unsubscribe a member, complete PersonEntity is expected
    rpc UnsubscribeServiceprojectmembers (UnsubscribeServiceprojectmembersRequest) returns (PersonCollection){
        option (google.api.http) = {
            post: "/api/members/{prs}:unsubscribe"
            body: "data"
        };
    }
}


   
message ListServiceprojectmembersRequest { 
    
    //Partielle Repr채sentation fields=id,name // 10
    string fields = 1;
    //Sortierung nach feldern
    //**?filter=-completed** um completed absteigend zu bekommen
    //**?filter=completed** um completed aufsteigend zu bekommen
    string sort = 2;
    //Filter
    string filter = 3;
    //Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
    int32 page = 4;
    //Anzahl Elemente pro Seite, maximal sind 99 erlaubt
    int32 limit = 5;
    //Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
    bool count = 6;
    //not implemented
    string sum = 7;
    //not implemented (ehemals context)
    string view = 8;       
       
    //Query term to search a member
    string q = 11;
}

message ListServiceprojectmembersResponse {
    repeated PersonCollection data= 1;
    furo.type.Meta meta = 2;
    repeated furo.type.Link links = 3;
}
   
message UnsubscribeServiceprojectmembersRequest { 
    
    string prs = 1;
    PersonEntity data =  2;  
}

message UnsubscribeServiceprojectmembersResponse {
    repeated PersonCollection data= 1;
    furo.type.Meta meta = 2;
    repeated furo.type.Link links = 3;
}
