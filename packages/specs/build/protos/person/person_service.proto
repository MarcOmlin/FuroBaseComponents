// Code generated by furo-proto-gen. DO NOT EDIT.
// generation date: 2019-08-15 14:07:10

syntax = "proto3";
package person;

import "google/api/annotations.proto";

import "person_entity.proto";
import "person_collection.proto";
import "furo/type/link.proto";
import "furo/type/meta.proto";



// person service
service PersonServiceService {           
   
    // Get a PersonEntity
    rpc GetPersonService (GetPersonServiceRequest) returns (PersonEntity){
        option (google.api.http) = {
            get: "/api/persons/{prs}"
        };
    }   
    // Get a collection with PersonEntities
    rpc ListPersonService (ListPersonServiceRequest) returns (PersonCollection){
        option (google.api.http) = {
            get: "/api/persons"
        };
    }
}


   
message GetPersonServiceRequest { 
    
    string prs = 1; 
}

message GetPersonServiceResponse {
    repeated PersonEntity data= 1;
    furo.type.Meta meta = 2;
    repeated furo.type.Link links = 3;
}
   
message ListPersonServiceRequest { 
    
    //Partielle Repr채sentation fields=id,name // 10
    string fields = 1;
    //Sortierung nach feldern
    //**?filter=-completed** um completed absteigend zu bekommen
    //**?filter=completed** um completed aufsteigend zu bekommen
    string sort = 2;
    //Filter
    string filter = 3;
    //Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
    int32 page = 4;
    //Anzahl Elemente pro Seite, maximal sind 99 erlaubt
    int32 limit = 5;
    //Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
    bool count = 6;
    //not implemented
    string sum = 7;
    //not implemented (ehemals context)
    string view = 8;       
       
    //Query term to search a member
    string q = 11;
}

message ListPersonServiceResponse {
    repeated PersonCollection data= 1;
    furo.type.Meta meta = 2;
    repeated furo.type.Link links = 3;
}
