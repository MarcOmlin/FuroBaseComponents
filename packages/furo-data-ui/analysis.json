{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-data-table`\nRead only data table based on the response type from the rest api spec.\n\n```\n<furo-data-table Æ’-bind-data=\"--data\" type=\"vnd.com.abc\" @-tablerow-selected=\"--rowSelected\" @-checkstate-changed=\"--checkStateChanged\"></furo-data-table>\n```\n\nConfiguration:\nAttribute: hide-header | hides the table header row\n\nTags: data-ui",
      "summary": "datatable",
      "path": "packages/furo-data-ui/furo-data-table.js",
      "properties": [
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "Typedefinition of incoming collection items\nREST SPEC Type\ne.g. vnd.com.abc.[type]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hideHeader",
          "type": "boolean | null | undefined",
          "description": "Flag to show table header information\nTRUE => shows header",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 12
            },
            "end": {
              "line": 101,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_checkType",
          "description": "SPEC Type checker\nBuilds the column Array for the inner template",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "Event listening and type check",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Binds collection-object to data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 345,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collectionNode",
              "type": "CollectionNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "Template rendering",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 383,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        },
        {
          "name": "_navigate",
          "description": "Handles key navigation",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 4
            },
            "end": {
              "line": 412,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectRow",
          "description": "Handles table row select",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectRowByIndex",
          "description": "Comfort function to select a specific table row\nby index",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "idx"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 460,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataTable",
      "attributes": [
        {
          "name": "type",
          "description": "Typedefinition of incoming collection items\nREST SPEC Type\ne.g. vnd.com.abc.[type]",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-header",
          "description": "Flag to show table header information\nTRUE => shows header",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 12
            },
            "end": {
              "line": 101,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "checkstate-changed",
          "description": "Fired when a row is checked or unchecked\nPayload: Array of raw Entities",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "contextmenu-requested",
          "description": "Fired when context menu is requested\nPayload: entity",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-loaded",
          "description": "Fired when inject data has successfully finished.\nPayload: this",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "key-pressed",
          "description": "Fired when a key was pressed\nPayload: KeyboardEvent",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "spec-error",
          "description": "spec-error\nFired when spec could not be loaded\ndetail payload: {string} spec name",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "tablerow-selected",
          "description": "Fired when a table row has been selected.\nPayload: Entity",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-table",
      "mixins": [
        "FBP"
      ]
    }
  ]
}
