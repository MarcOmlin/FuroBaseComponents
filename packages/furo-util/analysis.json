{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-markdown`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-markdown.js",
      "properties": [
        {
          "name": "_hasConnected",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 469,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 472,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "hasUpdated",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 475,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 542,
              "column": 4
            },
            "end": {
              "line": 544,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "mdsrc",
          "type": "string | null | undefined",
          "description": "source of the md",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "markdown",
          "type": "string | null | undefined",
          "description": "markdown string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 302,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 357,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestUpdate",
          "description": "This private version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 381,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 428,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_enqueueUpdate",
          "description": "Sets up the element to asynchronously update.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 432,
              "column": 4
            },
            "end": {
              "line": 468,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "performUpdate",
          "description": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.\n\nYou can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 494,
              "column": 4
            },
            "end": {
              "line": 524,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 525,
              "column": 4
            },
            "end": {
              "line": 528,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 554,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 592,
              "column": 4
            },
            "end": {
              "line": 593,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "adoptStyles",
          "description": "Applies styling to the element shadowRoot using the `static get styles`\nproperty. Styling will apply using `shadowRoot.adoptedStyleSheets` where\navailable and will fallback otherwise. When Shadow DOM is polyfilled,\nShadyCSS scopes styles and adds them to the document. When Shadow DOM\nis available but `adoptedStyleSheets` is not, styles are appended to the\nend of the `shadowRoot` to [mimic spec\nbehavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "fetchMd",
          "description": "fetch markdown from a url or path",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "src"
            }
          ],
          "return": {
            "type": "Promise.<(string | never)>"
          }
        },
        {
          "name": "parseMarkdown",
          "description": "Parse markdown string to html content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "markdown"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parseMarkdown",
          "description": "parse markdown string to html content",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "markdown"
            }
          ],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "_ensureClassProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "finalize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's\n`converter` or `converter.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_getUniqueStyles",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "LitElement"
        }
      ],
      "demos": [
        {
          "url": "demo/furo-markdown.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 262,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroMarkdown",
      "attributes": [
        {
          "name": "mdsrc",
          "description": "source of the md",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "markdown",
          "description": "markdown string",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-markdown",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-properties-item`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-properties-item.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-properties-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocPropertiesItem",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-properties-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-properties`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-properties.js",
      "properties": [
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "hide props if empty",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 44
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 91,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocProperties",
      "attributes": [
        {
          "name": "hidden",
          "description": "hide props if empty",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 44
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-properties",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-methods-item`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-methods-item.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-methods-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocMethodsItem",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-methods-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-methods`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-methods.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-methods.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocMethods",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-methods",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-events-item`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-events-item.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-events-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocEventsItem",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-events-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-events`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-events.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-events.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 95,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocEvents",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-events",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-element`\nRenders a analysis file",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc-element.js",
      "properties": [],
      "methods": [
        {
          "name": "hide",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "print",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "analysisElement"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-element.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-element",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-methods-item`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-class-methods-item.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-methods-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocClassMethodsItem",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-class-methods-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-methods`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc/furo-doc-class-methods.js",
      "properties": [],
      "methods": [
        {
          "name": "data",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-methods.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 96,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocClassMethods",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-class-methods",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-element`\nRenders a analysis file",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc-class.js",
      "properties": [],
      "methods": [
        {
          "name": "hide",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "print",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "analysisElement"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-element.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 98,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocClass",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-class",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-doc-menu`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-doc-menu.js",
      "properties": [],
      "methods": [
        {
          "name": "analysis",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "analysis"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-doc-menu.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDocMenu",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-doc-menu",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-head-tail`\n Splits an iterable (i.e. Array) in its head and tail part.\n\n```\n <furo-head-tail ƒ-split=\"--arrayData\" @-head=\"--firstElement\" @-tail=\"--restOfArray\"></furo-head-tail>\n```",
      "summary": "split an array",
      "path": "packages/furo-util/furo-head-tail.js",
      "properties": [],
      "methods": [
        {
          "name": "split",
          "description": "Splits an iterable to its head (first item) and its tail (the rest) parts.\n\n```\n[\"a\", \"b\", \"c\", \"d\"]\n |_|  |___________|\n  ^      ^\n  |      |\n  |     TAIL   => [\"b\", \"c\", \"d\"]\n HEAD          => \"a\"\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "iterable"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroHeadTail",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "head",
          "description": "head\nFired when Array was splitted\ndetail payload: {Any} first element of array",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "tail",
          "description": "tail\nFired when Array was splitted\ndetail payload: {Array || Any} the tail from the injected array (e1 - 1n)",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-head-tail"
    },
    {
      "description": "`furo-pretty-json`\nPretty json with highlighting",
      "summary": "",
      "path": "packages/furo-util/furo-pretty-json.js",
      "properties": [],
      "methods": [
        {
          "name": "injectData",
          "description": "Inject JSON data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_syntaxHighlight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json"
            }
          ]
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 103,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPrettyJson",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-pretty-json"
    },
    {
      "description": "`furo-demo-snippet`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-util/furo-demo-snippet.js",
      "properties": [
        {
          "name": "source",
          "type": "boolean | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 44
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "demo",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "flow",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "__fbpReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-demo-snippet.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDemoSnippet",
      "attributes": [
        {
          "name": "source",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 44
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "demo",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 42
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "flow",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 42
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-demo-snippet",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-key-filter`\nAllows only defined key events to pass through\n\n```\n<!-- note the asterisk on other-component keydown. Because filter needs the keyboard event. -->\n<other-component @-keydown=\"--keydown(*)\"></other-component>\n<furo-key-filter ƒ-filter=\"--keydown\" @-matched=\"--escapePressed\" keys=\"Escape\"></furo-key-filter>\n```",
      "summary": "keyboard event filter",
      "path": "packages/furo-util/furo-key-filter.js",
      "properties": [
        {
          "name": "keys",
          "type": "string | null | undefined",
          "description": "Coma separated list with allowed keys to pass. i.e \"Enter, ArrowUp\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 12
            },
            "end": {
              "line": 74,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "shift",
          "type": "boolean | null | undefined",
          "description": "Modifier key **shift** must be pressed too to match",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 12
            },
            "end": {
              "line": 78,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "alt",
          "type": "boolean | null | undefined",
          "description": "Modifier key **alt** must be pressed too to match",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "command",
          "type": "boolean | null | undefined",
          "description": "Alias for meta.\n\nModifier key **meta** must be pressed too to match.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 12
            },
            "end": {
              "line": 88,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "meta",
          "type": "boolean | null | undefined",
          "description": "Modifier key **meta** must be pressed too to match",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 92,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "control",
          "type": "boolean | null | undefined",
          "description": "Modifier key **control** must be pressed too to match",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "filter",
          "description": "Check the event and dispatch matched when the conditions are fulfilled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyboardEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-key-filter.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroKeyFilter",
      "attributes": [
        {
          "name": "keys",
          "description": "Coma separated list with allowed keys to pass. i.e \"Enter, ArrowUp\"",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 12
            },
            "end": {
              "line": 74,
              "column": 32
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "shift",
          "description": "Modifier key **shift** must be pressed too to match",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 12
            },
            "end": {
              "line": 78,
              "column": 34
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "alt",
          "description": "Modifier key **alt** must be pressed too to match",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 32
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "command",
          "description": "Alias for meta.\n\nModifier key **meta** must be pressed too to match.",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 12
            },
            "end": {
              "line": 88,
              "column": 36
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "meta",
          "description": "Modifier key **meta** must be pressed too to match",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 92,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "control",
          "description": "Modifier key **control** must be pressed too to match",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 36
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "matched",
          "description": "matched\nFired when key matches the options\ndetail payload: keyboardEvent",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-key-filter",
      "mixins": [
        "FBP"
      ]
    }
  ]
}
