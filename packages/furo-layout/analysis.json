{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-empty-spacer` Takes the place in furo-horizontal-flex or a furo-vertical-flex.\n\n<furo-demo-snippet source>\n<template>\n <furo-horizontal-flex>\n  <div>small</div>\n  <!-- A furo-empty-spacer will fill the available space. -->\n  <furo-empty-spacer style=\"border: 1px dashed lightgray;\"></furo-empty-spacer>\n  <div>small</div>\n </furo-horizontal-flex>\n</template>\n</furo-demo-snippet>",
      "summary": "fill the space in a furo-xxxx-flex",
      "path": "src/furo-empty-spacer.js",
      "properties": [
        {
          "name": "flex",
          "type": "boolean | null | undefined",
          "description": "Attribute flex for furo-horizontal-flex and furo-vertical-flex",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "Set to true to hide the spacer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "*"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-vertical-flex",
          "description": "With vertical flex"
        },
        {
          "url": "demo-furo-horizontal-flex",
          "description": "With horizontal flex"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroEmptySpacer",
      "attributes": [
        {
          "name": "flex",
          "description": "Attribute flex for furo-horizontal-flex and furo-vertical-flex",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hidden",
          "description": "Set to true to hide the spacer",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-empty-spacer",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-horizontal-flex`\n\n Für horizontales anordnen von Komponenten. Die Breite ist automatisch auf 100% gesetzt (display block).\n\n Setze auf dem flexiblen Element das Attribut **flex**\n\n\n```html\n<furo-horizontal-flex>\n  <div>small</div>\n  <div flex>full width</div>\n  <div>small</div>\n</furo-horizontal-flex>\n```\n Tags: layout",
      "summary": "horizontal alignment",
      "path": "src/furo-horizontal-flex.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-horizontal-flex",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 92,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroHorizontalFlex",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-horizontal-flex",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ripple` gives the ripple effect to a element\n\n > Note: Add a `position:relative` to the parent element.\n\n use it directly in an element:\n<furo-demo-snippet source>\n<template>\n<!-- without position relative -->\n <button>\n      click here\n     <furo-ripple></furo-ripple>\n </button>\n</template>\n</furo-demo-snippet>\n\n## trigger the ripple effect via wire\n<furo-demo-snippet source>\n<template>\n<button @-click=\"--actionClicked\">\n      click here\n</button>\n\n<div style=\"position:relative; width:80px;height:80px; border:1px solid black;\">\n  <furo-ripple noink ƒ-trigger=\"--actionClicked\"></furo-ripple>\n  Ripple here\n</div>\n</template>\n</furo-demo-snippet>\n\n\n## style vars\n with variable `--furo-ripple-bg-color` you can modify the backgroud color of the ripple effect",
      "summary": "add a ripple effect",
      "path": "src/furo-ripple.js",
      "properties": [
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Disables the click, only ripples with `trigger()`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "animate the ripple effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 128,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroRipple",
      "attributes": [
        {
          "name": "noink",
          "description": "Disables the click, only ripples with `trigger()`",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 45
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ripple"
    },
    {
      "description": "`furo-vertical-scroller`\n\n```html\n<furo-vertical-scroller>\n  <your-content></your-content>\n</furo-vertical-scroller>\n```",
      "summary": "vertical scroll",
      "path": "src/furo-vertical-scroller.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-vertical-scroller",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroVerticalScroller",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-vertical-scroller",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-split-view`  is a layouter for master detail views.\n\nYou can add the attribute scroll on the detail view to make the content scrollable.\n\n\n```html\n<furo-split-view>\n  <div slot=\"master\">Master</div>\n  <big-component scroll> </big-component>\n</furo-split-view>\n```\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--split-master-width` | width of the master slot | 270px | --\n\nLeft right layout for master detail views",
      "summary": "splitted layout",
      "path": "src/furo-split-view.js",
      "properties": [
        {
          "name": "reverse",
          "type": "boolean | null | undefined",
          "description": "flip the left and right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-split-view",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroSplitView",
      "attributes": [
        {
          "name": "reverse",
          "description": "flip the left and right side",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 32
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-split-view",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-vertical-flex`\n\n Für vertikales anordnen von Komponenten. Die Höhe ist automatisch auf 100% gesetzt (display block).\n\n Setze auf dem flexiblen Element das Attribut **flex**\n\n\n```html\n<furo-vertical-flex>\n  <div>small</div>\n  <div flex>full width</div>\n  <div>small</div>\n</furo-vertical-flex>\n```\n Tags: layout",
      "summary": "vertical alignment of stuff",
      "path": "src/furo-vertical-flex.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-vertical-flex",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroVerticalFlex",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-vertical-flex",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-panel`\nSimple content panel with predefined margins.\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--furo-panel-margin` | Margin size | 0 var(--spacing-s) 0 var(--spacing-s) | --",
      "summary": "content panel with predefined margins",
      "path": "src/furo-panel.js",
      "properties": [
        {
          "name": "bordered",
          "type": "boolean | null | undefined",
          "description": "Gives the panel a border",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 48
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "marginM",
          "type": "boolean | null | undefined",
          "description": "Changes margin to spacing-m",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 70
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "marginL",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 70
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel",
          "description": "Sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPanel",
      "attributes": [
        {
          "name": "bordered",
          "description": "Gives the panel a border",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 48
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "margin-m",
          "description": "Changes margin to spacing-m",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 70
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "margin-l",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 70
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-panel",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-resizer`\n container which let you resize its width.\n\n Doubleclick on the handler to reset the width.\n You need a counter part which flexes.\n\n```html\n  <furo-horizontal-flex>\n    <div flex> the flexible part </div>\n    <!-- you have to set at leas one handle to resize the content -->\n    <furo-resizer righthandle remember=\"logv\" minwidth=\"280\" maxwidth=\"780\">\n      <some-content></some-content>\n    </furo-resizer>\n  </furo-horizontal-flex>\n```",
      "summary": "resizable box",
      "path": "src/furo-resizer.js",
      "properties": [
        {
          "name": "_unregister",
          "type": "?",
          "description": "remove the listeners",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "() => {\n  window.removeEventListener('mousemove', this._movementHandler);\n  window.removeEventListener('mouseup', this._unregister); // set cursor to avoid flickering\n\n  this.parentNode.style.cursor = '';\n}"
        },
        {
          "name": "_movementHandler",
          "type": "?",
          "description": "capture the mouse movement and resize the width",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "e => {\n  const delta = (e.screenX - this._positions.x) * this._handleLRM; // todo request animation frame\n\n  let width = this._startwidth + delta;\n\n  if (this.minwidth && width + 3 < this.minwidth) {\n    width = this.minwidth;\n\n    this._unregister();\n  }\n\n  if (this.maxwidth && width - 3 > this.maxwidth) {\n    width = this.maxwidth;\n\n    this._unregister();\n  }\n\n  this.resizer.style.width = `${width}px`;\n\n  if (this.remember) {\n    sessionStorage.setItem(this.remember, width);\n  }\n}"
        },
        {
          "name": "_startTrackingLeft",
          "type": "?",
          "description": "register the left handler",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "e => {\n  this._handleLRM = -1;\n\n  this._startTracking(e);\n}"
        },
        {
          "name": "_startTrackingRight",
          "type": "?",
          "description": "register the right handler",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "e => {\n  this._handleLRM = 1;\n\n  this._startTracking(e);\n}"
        },
        {
          "name": "_startTracking",
          "type": "?",
          "description": "Start mouse move tracking",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "e => {\n  e.preventDefault();\n  window.addEventListener('mousemove', this._movementHandler);\n  window.addEventListener('mouseup', this._unregister);\n  this._positions.x = e.screenX;\n  this._startwidth = this.getBoundingClientRect().width; // set cursor to avoid flickering\n\n  this.parentNode.style.cursor = 'col-resize';\n}"
        },
        {
          "name": "lefthandle",
          "type": "boolean | null | undefined",
          "description": "add a handle to the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "righthandle",
          "type": "boolean | null | undefined",
          "description": "add a handle to the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "remember",
          "type": "string | null | undefined",
          "description": "remember the size after resizing.\nGive the id for the rememberer, you can use the id on different views",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "maxwidth",
          "type": "number | null | undefined",
          "description": "Set the maximal width of the resizer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "minwidth",
          "type": "number | null | undefined",
          "description": "Set the minimal width of the resizer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-resizer",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 242,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroResizer",
      "attributes": [
        {
          "name": "lefthandle",
          "description": "add a handle to the left side",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "righthandle",
          "description": "add a handle to the right side",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 36
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "remember",
          "description": "remember the size after resizing.\nGive the id for the rememberer, you can use the id on different views",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 32
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "maxwidth",
          "description": "Set the maximal width of the resizer",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 32
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "minwidth",
          "description": "Set the minimal width of the resizer",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 32
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-resizer",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-external-content`\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe",
      "summary": "",
      "path": "src/furo-external-content.js",
      "properties": [
        {
          "name": "src",
          "type": "string | null | undefined",
          "description": "The URL of the page to embed. Use a value of about:blank to embed an empty page that conforms to the same-origin policy.\nAlso note that programatically removing an <iframe>'s src attribute (e.g. via Element.removeAttribute())\ncauses about:blank to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "allow",
          "type": "string | null | undefined",
          "description": "Specifies a feature policy for the <iframe>. The policy defines what features are available to the <iframe>\nbased on the origin of the request (e.g. access to the microphone, camera, battery, web-share API, etc.).\nFor more information and examples see: Using Feature Policy > The iframe allow attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "csp",
          "type": "string | null | undefined",
          "description": "A Content Security Policy enforced for the embedded resource. See HTMLIFrameElement.csp for details.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "A targetable name for the embedded browsing context. This can be used in the target attribute of the <a>, <form>,\nor <base> elements; the form target attribute of the <input> or <button> elements; or the windowName parameter in the window.open() method.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "referrerpolicy",
          "type": "string | null | undefined",
          "description": "Indicates which referrer to send when fetching the frame's resource:\n- no-referrer: The Referer header will not be sent.\n- no-referrer-when-downgrade (default): The Referer header will not be sent to origins without TLS (HTTPS).\n- origin: The sent referrer will be limited to the origin of the referring page: its scheme, host, and port.\n- origin-when-cross-origin: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- same-origin: A referrer will be sent for same origin, but cross-origin requests will contain no referrer information.\n- strict-origin: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- strict-origin-when-cross-origin: Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- unsafe-url: The referrer will include the origin and the path (but not the fragment, password, or username). This value is unsafe, because it leaks origins and paths from TLS-protected resources to insecure origins.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "sandbox",
          "type": "string | null | undefined",
          "description": "Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply\nall restrictions, or space-separated tokens to lift particular restrictions:\n- allow-downloads-without-user-activation : Allows for downloads to occur without a gesture from the user.\n- allow-downloads: Allows for downloads to occur with a gesture from the user.\n- allow-forms: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n- allow-modals: Lets the resource open modal windows.\n- allow-orientation-lock: Lets the resource lock the screen orientation.\n- allow-pointer-lock: Lets the resource use the Pointer Lock API.\n- allow-popups: Allows popups (such as window.open(), target=\"_blank\", or showModalDialog()). If this keyword is not used, the popup will silently fail to open.\n- allow-popups-to-escape-sandbox: Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n- allow-presentation: Lets the resource start a presentation session.\n- allow-same-origin: If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy.\n- allow-scripts: Lets the resource run scripts (but not create popup windows).\n- allow-storage-access-by-user-activation : Lets the resource request access to the parent's storage capabilities with the Storage Access API.\n- allow-top-navigation: Lets the resource navigate the top-level browsing context (the one named _top).\n- allow-top-navigation-by-user-activation: Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "bind string field with url\nThe URL of the page to embed. Use a value of about:blank to embed an empty page that conforms to the same-origin policy.\nAlso note that programatically removing an <iframe>'s src attribute (e.g. via Element.removeAttribute())\ncauses about:blank to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-external-content",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 173,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroExternalContent",
      "attributes": [
        {
          "name": "src",
          "description": "The URL of the page to embed. Use a value of about:blank to embed an empty page that conforms to the same-origin policy.\nAlso note that programatically removing an <iframe>'s src attribute (e.g. via Element.removeAttribute())\ncauses about:blank to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "allow",
          "description": "Specifies a feature policy for the <iframe>. The policy defines what features are available to the <iframe>\nbased on the origin of the request (e.g. access to the microphone, camera, battery, web-share API, etc.).\nFor more information and examples see: Using Feature Policy > The iframe allow attribute.",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "csp",
          "description": "A Content Security Policy enforced for the embedded resource. See HTMLIFrameElement.csp for details.",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "name",
          "description": "A targetable name for the embedded browsing context. This can be used in the target attribute of the <a>, <form>,\nor <base> elements; the form target attribute of the <input> or <button> elements; or the windowName parameter in the window.open() method.",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "referrerpolicy",
          "description": "Indicates which referrer to send when fetching the frame's resource:\n- no-referrer: The Referer header will not be sent.\n- no-referrer-when-downgrade (default): The Referer header will not be sent to origins without TLS (HTTPS).\n- origin: The sent referrer will be limited to the origin of the referring page: its scheme, host, and port.\n- origin-when-cross-origin: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n- same-origin: A referrer will be sent for same origin, but cross-origin requests will contain no referrer information.\n- strict-origin: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).\n- strict-origin-when-cross-origin: Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n- unsafe-url: The referrer will include the origin and the path (but not the fragment, password, or username). This value is unsafe, because it leaks origins and paths from TLS-protected resources to insecure origins.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "sandbox",
          "description": "Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply\nall restrictions, or space-separated tokens to lift particular restrictions:\n- allow-downloads-without-user-activation : Allows for downloads to occur without a gesture from the user.\n- allow-downloads: Allows for downloads to occur with a gesture from the user.\n- allow-forms: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n- allow-modals: Lets the resource open modal windows.\n- allow-orientation-lock: Lets the resource lock the screen orientation.\n- allow-pointer-lock: Lets the resource use the Pointer Lock API.\n- allow-popups: Allows popups (such as window.open(), target=\"_blank\", or showModalDialog()). If this keyword is not used, the popup will silently fail to open.\n- allow-popups-to-escape-sandbox: Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n- allow-presentation: Lets the resource start a presentation session.\n- allow-same-origin: If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy.\n- allow-scripts: Lets the resource run scripts (but not create popup windows).\n- allow-storage-access-by-user-activation : Lets the resource request access to the parent's storage capabilities with the Storage Access API.\n- allow-top-navigation: Lets the resource navigate the top-level browsing context (the one named _top).\n- allow-top-navigation-by-user-activation: Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-external-content",
      "mixins": [
        "FBP"
      ]
    }
  ]
}
