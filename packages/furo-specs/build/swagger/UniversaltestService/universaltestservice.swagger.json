{
  "swagger": "2.0",
  "info": {
    "title": "UniversaltestService/universaltestservice.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mockdata/universaltests": {
      "post": {
        "summary": "Creates a new universaltest",
        "operationId": "Createuniversaltest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/universaltestUniversaltestEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/universaltestUniversaltest"
            }
          }
        ],
        "tags": [
          "UniversaltestService"
        ]
      }
    }
  },
  "definitions": {
    "fatBool": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attributes for a value, something like confidential-msg: you are not allowed to see this value"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "boolean",
            "format": "boolean"
          },
          "description": "Labels / flags for the value, something like unspecified, empty, confidential, absent,... Can be used for AI, UI, Business Logic,..."
        },
        "value": {
          "type": "boolean",
          "format": "boolean",
          "title": "The JSON representation for `BoolValue` is a JSON boolean"
        }
      },
      "description": "Furo annotated type wrapper message for `bool`."
    },
    "fatInt32": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attributes for a value, something like confidential-msg: you are not allowed to see this value"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Labels / flags for the value, something like unspecified, empty, confidential, absent,... Can be used for AI, UI, Business Logic,..."
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "title": "The JSON representation for `Int32Value` is JSON number"
        }
      },
      "description": "Furo annotated type wrapper message for `int32`."
    },
    "fatString": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attributes for a value, something like confidential-msg: you are not allowed to see this value"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Labels / flags for the value, something like unspecified, empty, confidential, absent,... Can be used for AI, UI, Business Logic,..."
        },
        "value": {
          "type": "string",
          "title": "The JSON representation for `StringValue` is a JSON string"
        }
      },
      "description": "Furo annotated type wrapper message for `string`."
    },
    "furoFieldConstraint": {
      "type": "object",
      "properties": {
        "is": {
          "type": "string",
          "title": "the constraint value as string, even it is a number"
        },
        "message": {
          "type": "string",
          "title": "The message to display on constraint violation"
        }
      },
      "title": "a single fieldconstraint"
    },
    "furoFieldMeta": {
      "type": "object",
      "properties": {
        "default": {
          "type": "string",
          "title": "The default value as JSON string"
        },
        "hint": {
          "type": "string",
          "title": "A hint"
        },
        "label": {
          "type": "string",
          "title": "The label"
        },
        "options": {
          "$ref": "#/definitions/furoFieldoption",
          "title": "Fieldoptions"
        },
        "readonly": {
          "type": "boolean",
          "format": "boolean",
          "title": "readonly"
        },
        "repeated": {
          "type": "boolean",
          "format": "boolean",
          "title": "repeated"
        },
        "typespecific": {
          "$ref": "#/definitions/googleprotobufAny",
          "title": "Put in type specific metas for your fields here"
        }
      },
      "title": "Metas for a field"
    },
    "furoFieldoption": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Add flags for your field. This can be something like \u0026#34;searchable\u0026#34;. \n//The flags can be used by generators, ui components,..."
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/googleprotobufAny"
          },
          "title": "a list with options, use furo.optionitem or your own"
        }
      },
      "title": "Metas for a field"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "title": "link"
        },
        "method": {
          "type": "string",
          "title": "method of curl"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "service": {
          "type": "string",
          "title": "name of the service which can handle this link"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetaField"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetaField": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoFieldConstraint"
          },
          "title": "constraints for a field"
        },
        "meta": {
          "$ref": "#/definitions/furoFieldMeta",
          "title": "meta information of a field"
        }
      },
      "title": "fields of meta info"
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Any contains an arbitrary serialized protocol buffer message along with a\n// URL that describes the type of the serialized message. client uses type `ArrayBuffer` for the value field .  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto"
    },
    "universaltestUniversaltest": {
      "type": "object",
      "properties": {
        "fat_bool": {
          "$ref": "#/definitions/fatBool",
          "title": "field of a fat bool for the Universaltest"
        },
        "fat_int32": {
          "$ref": "#/definitions/fatInt32",
          "title": "field of a fat int32 for the Universaltest"
        },
        "fat_string": {
          "$ref": "#/definitions/fatString",
          "title": "field of a fat string for the Universaltest"
        },
        "fat_string_list": {
          "$ref": "#/definitions/fatString",
          "title": "field of a fat string for the Universaltest"
        },
        "fat_string_repeated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fatString"
          },
          "title": "field of repeated fat string for the Universaltest"
        },
        "id": {
          "type": "string",
          "title": "Identity of a universaltes type"
        },
        "scalar_int32": {
          "type": "integer",
          "format": "int32",
          "title": "field of a scalar int32 for the Universaltest"
        },
        "scalar_string": {
          "type": "string",
          "title": "field of a scalar string for the Universaltest"
        },
        "wrapper_bool": {
          "type": "boolean",
          "format": "boolean",
          "title": "field of a wrapper boolean for the Universaltest"
        },
        "wrapper_int32": {
          "type": "integer",
          "format": "int32",
          "title": "field of a wrapper int32 for the Universaltest"
        },
        "wrapper_string": {
          "type": "string",
          "title": "field of a wrapper string for the Universaltest"
        }
      },
      "title": "oneof experiment spec for testing"
    },
    "universaltestUniversaltestEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/universaltestUniversaltest",
          "title": "contains a universaltest.Universaltest"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "UniversaltestEntity with Universaltest type in data"
    }
  }
}
