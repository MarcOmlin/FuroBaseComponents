// Code generated by protoc-gen-go. DO NOT EDIT.
// source: __bundled/BundledService.proto

package taskmanager

import (
	auth "../auth"
	experiment "../experiment"
	person "../person"
	project "../project"
	projectfilter "../projectfilter"
	task "../task"
	tree "../tree"
	universaltest "../universaltest"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTreeServiceRequest struct {
	Data                 *tree.Tree `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTreeServiceRequest) Reset()         { *m = CreateTreeServiceRequest{} }
func (m *CreateTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTreeServiceRequest) ProtoMessage()    {}
func (*CreateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{0}
}

func (m *CreateTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTreeServiceRequest.Unmarshal(m, b)
}
func (m *CreateTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTreeServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTreeServiceRequest.Merge(m, src)
}
func (m *CreateTreeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTreeServiceRequest.Size(m)
}
func (m *CreateTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTreeServiceRequest proto.InternalMessageInfo

func (m *CreateTreeServiceRequest) GetData() *tree.Tree {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTreeServiceRequest struct {
	Tre                  string       `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteTreeServiceRequest) Reset()         { *m = DeleteTreeServiceRequest{} }
func (m *DeleteTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTreeServiceRequest) ProtoMessage()    {}
func (*DeleteTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{1}
}

func (m *DeleteTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTreeServiceRequest.Unmarshal(m, b)
}
func (m *DeleteTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTreeServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTreeServiceRequest.Merge(m, src)
}
func (m *DeleteTreeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTreeServiceRequest.Size(m)
}
func (m *DeleteTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTreeServiceRequest proto.InternalMessageInfo

func (m *DeleteTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

func (m *DeleteTreeServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTreeServiceRequest struct {
	Tre                  string   `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTreeServiceRequest) Reset()         { *m = GetTreeServiceRequest{} }
func (m *GetTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTreeServiceRequest) ProtoMessage()    {}
func (*GetTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{2}
}

func (m *GetTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTreeServiceRequest.Unmarshal(m, b)
}
func (m *GetTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTreeServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTreeServiceRequest.Merge(m, src)
}
func (m *GetTreeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTreeServiceRequest.Size(m)
}
func (m *GetTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTreeServiceRequest proto.InternalMessageInfo

func (m *GetTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

type ListTreeServiceRequest struct {
	//Query term to search a tree
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTreeServiceRequest) Reset()         { *m = ListTreeServiceRequest{} }
func (m *ListTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListTreeServiceRequest) ProtoMessage()    {}
func (*ListTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{3}
}

func (m *ListTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTreeServiceRequest.Unmarshal(m, b)
}
func (m *ListTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTreeServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTreeServiceRequest.Merge(m, src)
}
func (m *ListTreeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListTreeServiceRequest.Size(m)
}
func (m *ListTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTreeServiceRequest proto.InternalMessageInfo

func (m *ListTreeServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateTreeServiceRequest struct {
	Tre                  string     `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data                 *tree.Tree `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateTreeServiceRequest) Reset()         { *m = UpdateTreeServiceRequest{} }
func (m *UpdateTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTreeServiceRequest) ProtoMessage()    {}
func (*UpdateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{4}
}

func (m *UpdateTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTreeServiceRequest.Unmarshal(m, b)
}
func (m *UpdateTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTreeServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTreeServiceRequest.Merge(m, src)
}
func (m *UpdateTreeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTreeServiceRequest.Size(m)
}
func (m *UpdateTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTreeServiceRequest proto.InternalMessageInfo

func (m *UpdateTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

func (m *UpdateTreeServiceRequest) GetData() *tree.Tree {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectfilterServiceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectfilterServiceRequest) Reset()         { *m = GetProjectfilterServiceRequest{} }
func (m *GetProjectfilterServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectfilterServiceRequest) ProtoMessage()    {}
func (*GetProjectfilterServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{5}
}

func (m *GetProjectfilterServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectfilterServiceRequest.Unmarshal(m, b)
}
func (m *GetProjectfilterServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectfilterServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectfilterServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectfilterServiceRequest.Merge(m, src)
}
func (m *GetProjectfilterServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectfilterServiceRequest.Size(m)
}
func (m *GetProjectfilterServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectfilterServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectfilterServiceRequest proto.InternalMessageInfo

type CreateAuthServiceRequest struct {
	Data                 *auth.Auth `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateAuthServiceRequest) Reset()         { *m = CreateAuthServiceRequest{} }
func (m *CreateAuthServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAuthServiceRequest) ProtoMessage()    {}
func (*CreateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{6}
}

func (m *CreateAuthServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAuthServiceRequest.Unmarshal(m, b)
}
func (m *CreateAuthServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAuthServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateAuthServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAuthServiceRequest.Merge(m, src)
}
func (m *CreateAuthServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAuthServiceRequest.Size(m)
}
func (m *CreateAuthServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAuthServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAuthServiceRequest proto.InternalMessageInfo

func (m *CreateAuthServiceRequest) GetData() *auth.Auth {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteAuthServiceRequest struct {
	Data                 *empty.Empty `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteAuthServiceRequest) Reset()         { *m = DeleteAuthServiceRequest{} }
func (m *DeleteAuthServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAuthServiceRequest) ProtoMessage()    {}
func (*DeleteAuthServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{7}
}

func (m *DeleteAuthServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAuthServiceRequest.Unmarshal(m, b)
}
func (m *DeleteAuthServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAuthServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAuthServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAuthServiceRequest.Merge(m, src)
}
func (m *DeleteAuthServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAuthServiceRequest.Size(m)
}
func (m *DeleteAuthServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAuthServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAuthServiceRequest proto.InternalMessageInfo

func (m *DeleteAuthServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetAuthServiceRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthServiceRequest) Reset()         { *m = GetAuthServiceRequest{} }
func (m *GetAuthServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthServiceRequest) ProtoMessage()    {}
func (*GetAuthServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{8}
}

func (m *GetAuthServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthServiceRequest.Unmarshal(m, b)
}
func (m *GetAuthServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthServiceRequest.Merge(m, src)
}
func (m *GetAuthServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthServiceRequest.Size(m)
}
func (m *GetAuthServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthServiceRequest proto.InternalMessageInfo

func (m *GetAuthServiceRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type ListAuthServiceRequest struct {
	//Query term to search a auth
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuthServiceRequest) Reset()         { *m = ListAuthServiceRequest{} }
func (m *ListAuthServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListAuthServiceRequest) ProtoMessage()    {}
func (*ListAuthServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{9}
}

func (m *ListAuthServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuthServiceRequest.Unmarshal(m, b)
}
func (m *ListAuthServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuthServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListAuthServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthServiceRequest.Merge(m, src)
}
func (m *ListAuthServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListAuthServiceRequest.Size(m)
}
func (m *ListAuthServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthServiceRequest proto.InternalMessageInfo

func (m *ListAuthServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateAuthServiceRequest struct {
	Uid                  string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Data                 *auth.Auth `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateAuthServiceRequest) Reset()         { *m = UpdateAuthServiceRequest{} }
func (m *UpdateAuthServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAuthServiceRequest) ProtoMessage()    {}
func (*UpdateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{10}
}

func (m *UpdateAuthServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAuthServiceRequest.Unmarshal(m, b)
}
func (m *UpdateAuthServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAuthServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAuthServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAuthServiceRequest.Merge(m, src)
}
func (m *UpdateAuthServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAuthServiceRequest.Size(m)
}
func (m *UpdateAuthServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAuthServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAuthServiceRequest proto.InternalMessageInfo

func (m *UpdateAuthServiceRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UpdateAuthServiceRequest) GetData() *auth.Auth {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreatePersonServiceRequest struct {
	Data                 *person.Person `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreatePersonServiceRequest) Reset()         { *m = CreatePersonServiceRequest{} }
func (m *CreatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePersonServiceRequest) ProtoMessage()    {}
func (*CreatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{11}
}

func (m *CreatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePersonServiceRequest.Unmarshal(m, b)
}
func (m *CreatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePersonServiceRequest.Merge(m, src)
}
func (m *CreatePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePersonServiceRequest.Size(m)
}
func (m *CreatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePersonServiceRequest proto.InternalMessageInfo

func (m *CreatePersonServiceRequest) GetData() *person.Person {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeletePersonServiceRequest struct {
	Prs                  string       `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeletePersonServiceRequest) Reset()         { *m = DeletePersonServiceRequest{} }
func (m *DeletePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePersonServiceRequest) ProtoMessage()    {}
func (*DeletePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{12}
}

func (m *DeletePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePersonServiceRequest.Unmarshal(m, b)
}
func (m *DeletePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeletePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePersonServiceRequest.Merge(m, src)
}
func (m *DeletePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePersonServiceRequest.Size(m)
}
func (m *DeletePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePersonServiceRequest proto.InternalMessageInfo

func (m *DeletePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *DeletePersonServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPersonServiceRequest struct {
	Prs                  string   `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonServiceRequest) Reset()         { *m = GetPersonServiceRequest{} }
func (m *GetPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPersonServiceRequest) ProtoMessage()    {}
func (*GetPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{13}
}

func (m *GetPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersonServiceRequest.Unmarshal(m, b)
}
func (m *GetPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonServiceRequest.Merge(m, src)
}
func (m *GetPersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetPersonServiceRequest.Size(m)
}
func (m *GetPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonServiceRequest proto.InternalMessageInfo

func (m *GetPersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

type ListPersonServiceRequest struct {
	//Query term to search a person
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPersonServiceRequest) Reset()         { *m = ListPersonServiceRequest{} }
func (m *ListPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListPersonServiceRequest) ProtoMessage()    {}
func (*ListPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{14}
}

func (m *ListPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPersonServiceRequest.Unmarshal(m, b)
}
func (m *ListPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPersonServiceRequest.Merge(m, src)
}
func (m *ListPersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListPersonServiceRequest.Size(m)
}
func (m *ListPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPersonServiceRequest proto.InternalMessageInfo

func (m *ListPersonServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdatePersonServiceRequest struct {
	Prs                  string         `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *person.Person `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdatePersonServiceRequest) Reset()         { *m = UpdatePersonServiceRequest{} }
func (m *UpdatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePersonServiceRequest) ProtoMessage()    {}
func (*UpdatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{15}
}

func (m *UpdatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePersonServiceRequest.Unmarshal(m, b)
}
func (m *UpdatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePersonServiceRequest.Merge(m, src)
}
func (m *UpdatePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePersonServiceRequest.Size(m)
}
func (m *UpdatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePersonServiceRequest proto.InternalMessageInfo

func (m *UpdatePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *UpdatePersonServiceRequest) GetData() *person.Person {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateProjectServiceRequest struct {
	Data                 *project.Project `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateProjectServiceRequest) Reset()         { *m = CreateProjectServiceRequest{} }
func (m *CreateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectServiceRequest) ProtoMessage()    {}
func (*CreateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{16}
}

func (m *CreateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectServiceRequest.Unmarshal(m, b)
}
func (m *CreateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectServiceRequest.Merge(m, src)
}
func (m *CreateProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectServiceRequest.Size(m)
}
func (m *CreateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectServiceRequest proto.InternalMessageInfo

func (m *CreateProjectServiceRequest) GetData() *project.Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProjectServiceRequest struct {
	Prj                  string       `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteProjectServiceRequest) Reset()         { *m = DeleteProjectServiceRequest{} }
func (m *DeleteProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectServiceRequest) ProtoMessage()    {}
func (*DeleteProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{17}
}

func (m *DeleteProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectServiceRequest.Unmarshal(m, b)
}
func (m *DeleteProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectServiceRequest.Merge(m, src)
}
func (m *DeleteProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectServiceRequest.Size(m)
}
func (m *DeleteProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectServiceRequest proto.InternalMessageInfo

func (m *DeleteProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

func (m *DeleteProjectServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectServiceRequest struct {
	Prj                  string   `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectServiceRequest) Reset()         { *m = GetProjectServiceRequest{} }
func (m *GetProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectServiceRequest) ProtoMessage()    {}
func (*GetProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{18}
}

func (m *GetProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectServiceRequest.Unmarshal(m, b)
}
func (m *GetProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectServiceRequest.Merge(m, src)
}
func (m *GetProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectServiceRequest.Size(m)
}
func (m *GetProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectServiceRequest proto.InternalMessageInfo

func (m *GetProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

type ListProjectServiceRequest struct {
	//Query term to search a project
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectServiceRequest) Reset()         { *m = ListProjectServiceRequest{} }
func (m *ListProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectServiceRequest) ProtoMessage()    {}
func (*ListProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{19}
}

func (m *ListProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectServiceRequest.Unmarshal(m, b)
}
func (m *ListProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectServiceRequest.Merge(m, src)
}
func (m *ListProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectServiceRequest.Size(m)
}
func (m *ListProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectServiceRequest proto.InternalMessageInfo

func (m *ListProjectServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateProjectServiceRequest struct {
	Prj                  string           `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data                 *project.Project `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateProjectServiceRequest) Reset()         { *m = UpdateProjectServiceRequest{} }
func (m *UpdateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectServiceRequest) ProtoMessage()    {}
func (*UpdateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{20}
}

func (m *UpdateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectServiceRequest.Unmarshal(m, b)
}
func (m *UpdateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectServiceRequest.Merge(m, src)
}
func (m *UpdateProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectServiceRequest.Size(m)
}
func (m *UpdateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectServiceRequest proto.InternalMessageInfo

func (m *UpdateProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

func (m *UpdateProjectServiceRequest) GetData() *project.Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListProjectMembersServiceRequest struct {
	//Query term to search a member
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectMembersServiceRequest) Reset()         { *m = ListProjectMembersServiceRequest{} }
func (m *ListProjectMembersServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectMembersServiceRequest) ProtoMessage()    {}
func (*ListProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{21}
}

func (m *ListProjectMembersServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectMembersServiceRequest.Unmarshal(m, b)
}
func (m *ListProjectMembersServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectMembersServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectMembersServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectMembersServiceRequest.Merge(m, src)
}
func (m *ListProjectMembersServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectMembersServiceRequest.Size(m)
}
func (m *ListProjectMembersServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectMembersServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectMembersServiceRequest proto.InternalMessageInfo

func (m *ListProjectMembersServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UnsubscribeProjectMembersServiceRequest struct {
	Prj                  string               `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Prs                  string               `protobuf:"bytes,2,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *person.PersonEntity `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UnsubscribeProjectMembersServiceRequest) Reset() {
	*m = UnsubscribeProjectMembersServiceRequest{}
}
func (m *UnsubscribeProjectMembersServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeProjectMembersServiceRequest) ProtoMessage()    {}
func (*UnsubscribeProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{22}
}

func (m *UnsubscribeProjectMembersServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Unmarshal(m, b)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Marshal(b, m, deterministic)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Merge(m, src)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Size(m)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeProjectMembersServiceRequest proto.InternalMessageInfo

func (m *UnsubscribeProjectMembersServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

func (m *UnsubscribeProjectMembersServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *UnsubscribeProjectMembersServiceRequest) GetData() *person.PersonEntity {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateTaskServiceRequest struct {
	Data                 *task.Task `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTaskServiceRequest) Reset()         { *m = CreateTaskServiceRequest{} }
func (m *CreateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskServiceRequest) ProtoMessage()    {}
func (*CreateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{23}
}

func (m *CreateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskServiceRequest.Unmarshal(m, b)
}
func (m *CreateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskServiceRequest.Merge(m, src)
}
func (m *CreateTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskServiceRequest.Size(m)
}
func (m *CreateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskServiceRequest proto.InternalMessageInfo

func (m *CreateTaskServiceRequest) GetData() *task.Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTaskServiceRequest struct {
	Tsk                  string       `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteTaskServiceRequest) Reset()         { *m = DeleteTaskServiceRequest{} }
func (m *DeleteTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskServiceRequest) ProtoMessage()    {}
func (*DeleteTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{24}
}

func (m *DeleteTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskServiceRequest.Unmarshal(m, b)
}
func (m *DeleteTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskServiceRequest.Merge(m, src)
}
func (m *DeleteTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskServiceRequest.Size(m)
}
func (m *DeleteTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskServiceRequest proto.InternalMessageInfo

func (m *DeleteTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *DeleteTaskServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskServiceRequest struct {
	Tsk                  string   `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskServiceRequest) Reset()         { *m = GetTaskServiceRequest{} }
func (m *GetTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskServiceRequest) ProtoMessage()    {}
func (*GetTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{25}
}

func (m *GetTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskServiceRequest.Unmarshal(m, b)
}
func (m *GetTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskServiceRequest.Merge(m, src)
}
func (m *GetTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskServiceRequest.Size(m)
}
func (m *GetTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskServiceRequest proto.InternalMessageInfo

func (m *GetTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

type ListTaskServiceRequest struct {
	//Partial representation (comma separated list of field names), ?fields=
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	//The response message will be filtered by the fields before being sent back to the client, filter=[[&#39;id&#39;,&#39;eq&#39;,&#39;1&#39;]]
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	//Specifies the result ordering for List requests. The default sorting order is ascending, ?order_by=foo desc,bar
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	//Use this field to specify the maximum number of results to be returned by the server.
	//    //The server may further constrain the maximum number of results returned in a single page.
	//    //If the page_size is 0, the server will decide the number of results to be returned. page_size=15
	PageSize string `protobuf:"bytes,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//Query term to search a {{.name}}
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	//allows the client to specify which view of the resource it wants to receive in the response. view=BASIC
	View                 string   `protobuf:"bytes,6,opt,name=view,proto3" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskServiceRequest) Reset()         { *m = ListTaskServiceRequest{} }
func (m *ListTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskServiceRequest) ProtoMessage()    {}
func (*ListTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{26}
}

func (m *ListTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskServiceRequest.Unmarshal(m, b)
}
func (m *ListTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskServiceRequest.Merge(m, src)
}
func (m *ListTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskServiceRequest.Size(m)
}
func (m *ListTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskServiceRequest proto.InternalMessageInfo

func (m *ListTaskServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListTaskServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTaskServiceRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *ListTaskServiceRequest) GetPageSize() string {
	if m != nil {
		return m.PageSize
	}
	return ""
}

func (m *ListTaskServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *ListTaskServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

type UpdateTaskServiceRequest struct {
	Tsk                  string     `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *task.Task `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateTaskServiceRequest) Reset()         { *m = UpdateTaskServiceRequest{} }
func (m *UpdateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskServiceRequest) ProtoMessage()    {}
func (*UpdateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{27}
}

func (m *UpdateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskServiceRequest.Unmarshal(m, b)
}
func (m *UpdateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskServiceRequest.Merge(m, src)
}
func (m *UpdateTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskServiceRequest.Size(m)
}
func (m *UpdateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskServiceRequest proto.InternalMessageInfo

func (m *UpdateTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *UpdateTaskServiceRequest) GetData() *task.Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateExperimentServiceRequest struct {
	Data                 *experiment.Experiment `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateExperimentServiceRequest) Reset()         { *m = CreateExperimentServiceRequest{} }
func (m *CreateExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateExperimentServiceRequest) ProtoMessage()    {}
func (*CreateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{28}
}

func (m *CreateExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExperimentServiceRequest.Unmarshal(m, b)
}
func (m *CreateExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExperimentServiceRequest.Merge(m, src)
}
func (m *CreateExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateExperimentServiceRequest.Size(m)
}
func (m *CreateExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExperimentServiceRequest proto.InternalMessageInfo

func (m *CreateExperimentServiceRequest) GetData() *experiment.Experiment {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateTemplateExperimentServiceRequest struct {
	Data                 *empty.Empty `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateTemplateExperimentServiceRequest) Reset() {
	*m = CreateTemplateExperimentServiceRequest{}
}
func (m *CreateTemplateExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTemplateExperimentServiceRequest) ProtoMessage()    {}
func (*CreateTemplateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{29}
}

func (m *CreateTemplateExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTemplateExperimentServiceRequest.Unmarshal(m, b)
}
func (m *CreateTemplateExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTemplateExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateTemplateExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTemplateExperimentServiceRequest.Merge(m, src)
}
func (m *CreateTemplateExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTemplateExperimentServiceRequest.Size(m)
}
func (m *CreateTemplateExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTemplateExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTemplateExperimentServiceRequest proto.InternalMessageInfo

func (m *CreateTemplateExperimentServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteExperimentServiceRequest struct {
	Exp                  string       `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteExperimentServiceRequest) Reset()         { *m = DeleteExperimentServiceRequest{} }
func (m *DeleteExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteExperimentServiceRequest) ProtoMessage()    {}
func (*DeleteExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{30}
}

func (m *DeleteExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExperimentServiceRequest.Unmarshal(m, b)
}
func (m *DeleteExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExperimentServiceRequest.Merge(m, src)
}
func (m *DeleteExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteExperimentServiceRequest.Size(m)
}
func (m *DeleteExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExperimentServiceRequest proto.InternalMessageInfo

func (m *DeleteExperimentServiceRequest) GetExp() string {
	if m != nil {
		return m.Exp
	}
	return ""
}

func (m *DeleteExperimentServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetExperimentServiceRequest struct {
	Exp                  string   `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperimentServiceRequest) Reset()         { *m = GetExperimentServiceRequest{} }
func (m *GetExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetExperimentServiceRequest) ProtoMessage()    {}
func (*GetExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{31}
}

func (m *GetExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperimentServiceRequest.Unmarshal(m, b)
}
func (m *GetExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperimentServiceRequest.Merge(m, src)
}
func (m *GetExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetExperimentServiceRequest.Size(m)
}
func (m *GetExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperimentServiceRequest proto.InternalMessageInfo

func (m *GetExperimentServiceRequest) GetExp() string {
	if m != nil {
		return m.Exp
	}
	return ""
}

type ListExperimentServiceRequest struct {
	//Query term to search a experiment
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExperimentServiceRequest) Reset()         { *m = ListExperimentServiceRequest{} }
func (m *ListExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListExperimentServiceRequest) ProtoMessage()    {}
func (*ListExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{32}
}

func (m *ListExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExperimentServiceRequest.Unmarshal(m, b)
}
func (m *ListExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExperimentServiceRequest.Merge(m, src)
}
func (m *ListExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListExperimentServiceRequest.Size(m)
}
func (m *ListExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListExperimentServiceRequest proto.InternalMessageInfo

func (m *ListExperimentServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type ReleaseExperimentServiceRequest struct {
	Data                 *experiment.ExperimentEntity `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReleaseExperimentServiceRequest) Reset()         { *m = ReleaseExperimentServiceRequest{} }
func (m *ReleaseExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseExperimentServiceRequest) ProtoMessage()    {}
func (*ReleaseExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{33}
}

func (m *ReleaseExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseExperimentServiceRequest.Unmarshal(m, b)
}
func (m *ReleaseExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseExperimentServiceRequest.Merge(m, src)
}
func (m *ReleaseExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseExperimentServiceRequest.Size(m)
}
func (m *ReleaseExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseExperimentServiceRequest proto.InternalMessageInfo

func (m *ReleaseExperimentServiceRequest) GetData() *experiment.ExperimentEntity {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateExperimentServiceRequest struct {
	Exp                  string                 `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	Data                 *experiment.Experiment `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateExperimentServiceRequest) Reset()         { *m = UpdateExperimentServiceRequest{} }
func (m *UpdateExperimentServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateExperimentServiceRequest) ProtoMessage()    {}
func (*UpdateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{34}
}

func (m *UpdateExperimentServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExperimentServiceRequest.Unmarshal(m, b)
}
func (m *UpdateExperimentServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExperimentServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateExperimentServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExperimentServiceRequest.Merge(m, src)
}
func (m *UpdateExperimentServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateExperimentServiceRequest.Size(m)
}
func (m *UpdateExperimentServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExperimentServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExperimentServiceRequest proto.InternalMessageInfo

func (m *UpdateExperimentServiceRequest) GetExp() string {
	if m != nil {
		return m.Exp
	}
	return ""
}

func (m *UpdateExperimentServiceRequest) GetData() *experiment.Experiment {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateUniversaltestServiceRequest struct {
	Data                 *universaltest.Universaltest `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CreateUniversaltestServiceRequest) Reset()         { *m = CreateUniversaltestServiceRequest{} }
func (m *CreateUniversaltestServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUniversaltestServiceRequest) ProtoMessage()    {}
func (*CreateUniversaltestServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44707c54fe1f55e4, []int{35}
}

func (m *CreateUniversaltestServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUniversaltestServiceRequest.Unmarshal(m, b)
}
func (m *CreateUniversaltestServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUniversaltestServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateUniversaltestServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUniversaltestServiceRequest.Merge(m, src)
}
func (m *CreateUniversaltestServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUniversaltestServiceRequest.Size(m)
}
func (m *CreateUniversaltestServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUniversaltestServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUniversaltestServiceRequest proto.InternalMessageInfo

func (m *CreateUniversaltestServiceRequest) GetData() *universaltest.Universaltest {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTreeServiceRequest)(nil), "taskmanager.CreateTreeServiceRequest")
	proto.RegisterType((*DeleteTreeServiceRequest)(nil), "taskmanager.DeleteTreeServiceRequest")
	proto.RegisterType((*GetTreeServiceRequest)(nil), "taskmanager.GetTreeServiceRequest")
	proto.RegisterType((*ListTreeServiceRequest)(nil), "taskmanager.ListTreeServiceRequest")
	proto.RegisterType((*UpdateTreeServiceRequest)(nil), "taskmanager.UpdateTreeServiceRequest")
	proto.RegisterType((*GetProjectfilterServiceRequest)(nil), "taskmanager.GetProjectfilterServiceRequest")
	proto.RegisterType((*CreateAuthServiceRequest)(nil), "taskmanager.CreateAuthServiceRequest")
	proto.RegisterType((*DeleteAuthServiceRequest)(nil), "taskmanager.DeleteAuthServiceRequest")
	proto.RegisterType((*GetAuthServiceRequest)(nil), "taskmanager.GetAuthServiceRequest")
	proto.RegisterType((*ListAuthServiceRequest)(nil), "taskmanager.ListAuthServiceRequest")
	proto.RegisterType((*UpdateAuthServiceRequest)(nil), "taskmanager.UpdateAuthServiceRequest")
	proto.RegisterType((*CreatePersonServiceRequest)(nil), "taskmanager.CreatePersonServiceRequest")
	proto.RegisterType((*DeletePersonServiceRequest)(nil), "taskmanager.DeletePersonServiceRequest")
	proto.RegisterType((*GetPersonServiceRequest)(nil), "taskmanager.GetPersonServiceRequest")
	proto.RegisterType((*ListPersonServiceRequest)(nil), "taskmanager.ListPersonServiceRequest")
	proto.RegisterType((*UpdatePersonServiceRequest)(nil), "taskmanager.UpdatePersonServiceRequest")
	proto.RegisterType((*CreateProjectServiceRequest)(nil), "taskmanager.CreateProjectServiceRequest")
	proto.RegisterType((*DeleteProjectServiceRequest)(nil), "taskmanager.DeleteProjectServiceRequest")
	proto.RegisterType((*GetProjectServiceRequest)(nil), "taskmanager.GetProjectServiceRequest")
	proto.RegisterType((*ListProjectServiceRequest)(nil), "taskmanager.ListProjectServiceRequest")
	proto.RegisterType((*UpdateProjectServiceRequest)(nil), "taskmanager.UpdateProjectServiceRequest")
	proto.RegisterType((*ListProjectMembersServiceRequest)(nil), "taskmanager.ListProjectMembersServiceRequest")
	proto.RegisterType((*UnsubscribeProjectMembersServiceRequest)(nil), "taskmanager.UnsubscribeProjectMembersServiceRequest")
	proto.RegisterType((*CreateTaskServiceRequest)(nil), "taskmanager.CreateTaskServiceRequest")
	proto.RegisterType((*DeleteTaskServiceRequest)(nil), "taskmanager.DeleteTaskServiceRequest")
	proto.RegisterType((*GetTaskServiceRequest)(nil), "taskmanager.GetTaskServiceRequest")
	proto.RegisterType((*ListTaskServiceRequest)(nil), "taskmanager.ListTaskServiceRequest")
	proto.RegisterType((*UpdateTaskServiceRequest)(nil), "taskmanager.UpdateTaskServiceRequest")
	proto.RegisterType((*CreateExperimentServiceRequest)(nil), "taskmanager.CreateExperimentServiceRequest")
	proto.RegisterType((*CreateTemplateExperimentServiceRequest)(nil), "taskmanager.CreateTemplateExperimentServiceRequest")
	proto.RegisterType((*DeleteExperimentServiceRequest)(nil), "taskmanager.DeleteExperimentServiceRequest")
	proto.RegisterType((*GetExperimentServiceRequest)(nil), "taskmanager.GetExperimentServiceRequest")
	proto.RegisterType((*ListExperimentServiceRequest)(nil), "taskmanager.ListExperimentServiceRequest")
	proto.RegisterType((*ReleaseExperimentServiceRequest)(nil), "taskmanager.ReleaseExperimentServiceRequest")
	proto.RegisterType((*UpdateExperimentServiceRequest)(nil), "taskmanager.UpdateExperimentServiceRequest")
	proto.RegisterType((*CreateUniversaltestServiceRequest)(nil), "taskmanager.CreateUniversaltestServiceRequest")
}

func init() { proto.RegisterFile("__bundled/BundledService.proto", fileDescriptor_44707c54fe1f55e4) }

var fileDescriptor_44707c54fe1f55e4 = []byte{
	// 1798 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xcf, 0x4f, 0xdc, 0xc6,
	0x17, 0x97, 0x21, 0x5f, 0x12, 0x1e, 0x90, 0x6c, 0x26, 0x40, 0x36, 0x5e, 0xb2, 0x01, 0x43, 0x08,
	0xbf, 0xb2, 0x4e, 0xc8, 0xb7, 0x17, 0x72, 0x69, 0x48, 0x53, 0x0e, 0xa5, 0x12, 0x22, 0x41, 0x69,
	0xa9, 0x14, 0x64, 0xd8, 0x09, 0x31, 0xec, 0xae, 0x8d, 0x67, 0x96, 0x40, 0x08, 0x4a, 0x15, 0xa9,
	0x52, 0x6e, 0x55, 0xd5, 0x63, 0x6f, 0x39, 0xf6, 0xd2, 0x3f, 0xa6, 0xff, 0x42, 0xef, 0xfd, 0x17,
	0x2a, 0xcf, 0x8c, 0x77, 0x3c, 0xf6, 0x8c, 0x77, 0x69, 0x2f, 0xcb, 0xda, 0xfb, 0xe6, 0x7d, 0xde,
	0x7c, 0xde, 0xe7, 0x8d, 0xdf, 0x33, 0x50, 0xdd, 0xd9, 0xd9, 0x6d, 0xb7, 0xea, 0x0d, 0x5c, 0x77,
	0x57, 0xf9, 0xdf, 0xe7, 0x38, 0x3a, 0xf6, 0xf7, 0x70, 0x2d, 0x8c, 0x02, 0x1a, 0xa0, 0x21, 0xea,
	0x91, 0xc3, 0xa6, 0xd7, 0xf2, 0xf6, 0x71, 0x64, 0x4f, 0xec, 0x07, 0xc1, 0x7e, 0x03, 0xbb, 0x5e,
	0xe8, 0xbb, 0x5e, 0xab, 0x15, 0x50, 0x8f, 0xfa, 0x41, 0x8b, 0x70, 0x53, 0xfb, 0x1a, 0x8d, 0x30,
	0x76, 0xe3, 0x0f, 0x71, 0xa3, 0x22, 0xcc, 0xd9, 0xd5, 0x6e, 0xfb, 0xb5, 0x8b, 0x9b, 0x21, 0x3d,
	0x15, 0x3f, 0x4e, 0x85, 0x51, 0x70, 0x80, 0xf7, 0xe8, 0x6b, 0xbf, 0x41, 0x71, 0xe4, 0x2a, 0x57,
	0x89, 0x43, 0xaf, 0x4d, 0xdf, 0xb8, 0xf1, 0x87, 0xb8, 0x71, 0x23, 0xc4, 0x11, 0x09, 0x5a, 0x2e,
	0xff, 0x23, 0x6e, 0x8e, 0x89, 0xa5, 0x89, 0x8b, 0x4e, 0x34, 0x1e, 0x39, 0x74, 0xe3, 0x8f, 0x24,
	0x1a, 0x7c, 0x12, 0xe2, 0xc8, 0x6f, 0xe2, 0x16, 0x75, 0xe5, 0xd7, 0x24, 0x9a, 0x76, 0xcb, 0x3f,
	0xc6, 0x11, 0xf1, 0x1a, 0x14, 0x13, 0xea, 0x2a, 0x57, 0xdc, 0xc4, 0x59, 0x81, 0xf2, 0xd3, 0x08,
	0x7b, 0x14, 0xbf, 0x88, 0x30, 0x16, 0x24, 0x6d, 0xe2, 0xa3, 0x36, 0x26, 0x14, 0x55, 0xe1, 0x52,
	0xdd, 0xa3, 0x5e, 0xd9, 0x9a, 0xb4, 0xe6, 0x86, 0x96, 0xa1, 0xc6, 0x48, 0x88, 0xed, 0x36, 0xd9,
	0x7d, 0xe7, 0x3b, 0x28, 0x7f, 0x85, 0x1b, 0x58, 0xbb, 0xb6, 0x04, 0xfd, 0x34, 0xc2, 0x6c, 0xe9,
	0xe0, 0x66, 0xfc, 0x15, 0x2d, 0x08, 0x6f, 0x7d, 0xcc, 0xdb, 0x78, 0x8d, 0xd3, 0x58, 0x4b, 0x68,
	0xac, 0x3d, 0x8b, 0x69, 0x14, 0x9e, 0xe7, 0x61, 0x6c, 0x0d, 0xd3, 0x5e, 0xdc, 0x3a, 0xb3, 0x30,
	0xbe, 0xee, 0x13, 0x9d, 0xed, 0x30, 0x58, 0x47, 0xc2, 0xd2, 0x3a, 0x72, 0xd6, 0xa1, 0xbc, 0x15,
	0xd6, 0xbd, 0x1e, 0x83, 0xad, 0x2a, 0xc1, 0xe6, 0xb7, 0x3e, 0x09, 0xd5, 0x35, 0x4c, 0x37, 0xd2,
	0xe9, 0x55, 0x7d, 0x4a, 0x62, 0x9f, 0xb4, 0xe9, 0x9b, 0x2e, 0xc4, 0x32, 0x31, 0xc4, 0x76, 0xc2,
	0xfb, 0xd7, 0x09, 0xb1, 0x9a, 0xb5, 0x0b, 0xca, 0xda, 0x5e, 0x68, 0xd4, 0x38, 0x29, 0x41, 0x7f,
	0xdb, 0xaf, 0x27, 0x1b, 0x6e, 0xfb, 0xf5, 0x84, 0x46, 0x8d, 0xad, 0x81, 0xc6, 0x5e, 0xbc, 0xe6,
	0x68, 0xcc, 0x6e, 0xf4, 0x4b, 0xb0, 0x39, 0x49, 0x1b, 0x4c, 0xfb, 0x19, 0x7f, 0x8e, 0xb2, 0xd5,
	0xab, 0x35, 0x51, 0x20, 0xdc, 0x56, 0x78, 0xd8, 0x06, 0x9b, 0x53, 0xa5, 0xf5, 0x50, 0x82, 0xfe,
	0x30, 0x22, 0x49, 0x44, 0x61, 0x44, 0x2e, 0xa4, 0xc2, 0x45, 0xb8, 0x19, 0x27, 0xb9, 0x27, 0xc7,
	0xce, 0x1c, 0x94, 0x63, 0x02, 0xb5, 0xd6, 0x2a, 0x85, 0x9b, 0x60, 0x73, 0x0a, 0x7b, 0x0c, 0xd9,
	0x51, 0x42, 0xd6, 0xd3, 0xf0, 0x14, 0x2a, 0x82, 0x48, 0x2e, 0xc9, 0x8c, 0xd3, 0x19, 0x85, 0xc9,
	0x52, 0x2d, 0x39, 0x54, 0x84, 0xb5, 0x70, 0xf2, 0x03, 0x54, 0x04, 0x97, 0x5a, 0x27, 0x2c, 0xb2,
	0x03, 0x19, 0xd9, 0xc1, 0x85, 0xc8, 0x5c, 0x82, 0xb2, 0xac, 0x98, 0x6e, 0x9e, 0x9d, 0x79, 0xb8,
	0xc5, 0xd8, 0xd4, 0x9a, 0xab, 0x74, 0x6e, 0x41, 0x45, 0xd0, 0xd9, 0x63, 0xd4, 0x33, 0x4a, 0xd4,
	0x26, 0x32, 0x1e, 0xc0, 0x64, 0x2a, 0x82, 0x6f, 0x71, 0x73, 0x17, 0x47, 0xa4, 0x30, 0x90, 0xb7,
	0x70, 0x6f, 0xab, 0x45, 0xda, 0xbb, 0x64, 0x2f, 0xf2, 0x77, 0x71, 0xe1, 0xc2, 0x7c, 0x50, 0x22,
	0xed, 0x7d, 0x32, 0xed, 0x73, 0x22, 0xcc, 0x7e, 0x16, 0xe6, 0xa8, 0x9a, 0xf6, 0x67, 0x2d, 0xea,
	0x77, 0xa8, 0x95, 0x67, 0xb8, 0x47, 0x0e, 0xbb, 0x9d, 0xe1, 0xf1, 0xa3, 0x23, 0xb6, 0xcb, 0x9d,
	0xe1, 0xf9, 0xb5, 0xf1, 0xb1, 0x48, 0x0e, 0x3b, 0xc7, 0x22, 0x39, 0xfc, 0x37, 0x67, 0x78, 0x0f,
	0x6e, 0x9d, 0xcf, 0x96, 0x38, 0xc4, 0xf3, 0xc6, 0xe3, 0x30, 0xf0, 0xda, 0xc7, 0x8d, 0x7a, 0x52,
	0x11, 0xe2, 0x8a, 0xdf, 0x8f, 0x8f, 0x5d, 0x41, 0x99, 0xb8, 0x42, 0xb7, 0xe0, 0x4a, 0x10, 0xd5,
	0x71, 0xb4, 0xb3, 0x7b, 0xca, 0x98, 0x1b, 0xdc, 0xbc, 0xcc, 0xae, 0x57, 0x4f, 0x51, 0x05, 0x06,
	0x43, 0x6f, 0x1f, 0xef, 0x10, 0xff, 0x1d, 0x2e, 0x5f, 0x62, 0xbf, 0x5d, 0x89, 0x6f, 0x3c, 0xf7,
	0xdf, 0x61, 0x9e, 0xca, 0xff, 0x89, 0x54, 0x22, 0x04, 0x97, 0x8e, 0x7d, 0xfc, 0xb6, 0x3c, 0xc0,
	0x6e, 0xb0, 0xef, 0xa9, 0x07, 0x48, 0x2f, 0x4c, 0xe5, 0x1e, 0x20, 0x19, 0xde, 0xd7, 0xa1, 0xca,
	0x73, 0xf6, 0xac, 0xf3, 0xd0, 0xee, 0x72, 0xd0, 0xa7, 0x9e, 0xee, 0x72, 0x8d, 0xf0, 0xf6, 0x02,
	0x66, 0x85, 0x02, 0x70, 0x33, 0x6c, 0x5c, 0xc4, 0x6b, 0x51, 0x06, 0x5f, 0x41, 0x95, 0x6b, 0xc3,
	0xe8, 0xad, 0x04, 0xfd, 0xf8, 0x24, 0x4c, 0xf6, 0x8d, 0x4f, 0xc2, 0x0b, 0x29, 0xc4, 0x85, 0xca,
	0x1a, 0xa6, 0xbd, 0x3b, 0x77, 0x96, 0x60, 0x22, 0x96, 0x89, 0x71, 0x85, 0x5a, 0x8f, 0xcf, 0xe1,
	0xce, 0x26, 0x6e, 0x60, 0x8f, 0x98, 0xe3, 0x7f, 0xa0, 0xb0, 0x31, 0xa1, 0xe7, 0x58, 0xa9, 0xb5,
	0x57, 0x50, 0xe5, 0x2a, 0xf8, 0x0f, 0x9c, 0x14, 0x65, 0x72, 0x0b, 0xa6, 0x78, 0x26, 0xb7, 0xd2,
	0xcd, 0x5a, 0x97, 0xb0, 0xd5, 0xc6, 0x4e, 0x59, 0xc9, 0xdd, 0x2e, 0xff, 0x3d, 0x05, 0x57, 0xd5,
	0x4e, 0x18, 0xd5, 0x01, 0x64, 0xe7, 0x87, 0xee, 0xd6, 0x52, 0x2d, 0x71, 0xcd, 0xd4, 0x12, 0xda,
	0x25, 0xd9, 0x09, 0x71, 0x5a, 0x9c, 0xdb, 0x1f, 0xff, 0xfc, 0xeb, 0xd7, 0xbe, 0x9b, 0xce, 0x35,
	0xb7, 0x19, 0xec, 0x1d, 0xc6, 0x60, 0xac, 0x59, 0x26, 0x2b, 0x0c, 0x18, 0x1d, 0x00, 0xc8, 0x1e,
	0x31, 0x83, 0x62, 0x6a, 0x1e, 0x6d, 0x83, 0x6c, 0x12, 0xac, 0x85, 0xb1, 0x0c, 0x96, 0x7b, 0x46,
	0x23, 0x7c, 0x8e, 0xf6, 0xe1, 0xb2, 0xe8, 0x1a, 0x91, 0xa3, 0x00, 0x69, 0x7b, 0x49, 0xcd, 0x5e,
	0x66, 0x99, 0xff, 0x49, 0x54, 0xd5, 0xfa, 0x77, 0xf7, 0x31, 0xad, 0x1d, 0x90, 0xa0, 0x85, 0x76,
	0x60, 0x30, 0xe9, 0x39, 0x09, 0x9a, 0x56, 0xa0, 0xf4, 0xbd, 0xa8, 0x3d, 0x2a, 0xb1, 0x9e, 0x06,
	0x8d, 0x06, 0xde, 0x8b, 0x47, 0x0c, 0xe7, 0x26, 0xc3, 0xbb, 0x8e, 0xb2, 0xdc, 0xc5, 0xac, 0xc9,
	0x66, 0x35, 0xc3, 0x9a, 0xa9, 0x8b, 0xd5, 0xec, 0x67, 0x9a, 0xf9, 0xbf, 0xbd, 0xac, 0xe7, 0x4b,
	0x64, 0xe8, 0x67, 0x0b, 0x4a, 0xd9, 0x5e, 0x16, 0x2d, 0x66, 0xf9, 0x2b, 0x68, 0x75, 0x6d, 0xa7,
	0xa6, 0xce, 0x39, 0x8a, 0xad, 0x08, 0x65, 0x81, 0x85, 0x32, 0x83, 0x1c, 0x19, 0x8a, 0x58, 0x44,
	0x5c, 0x31, 0x2c, 0xa5, 0xe8, 0x05, 0xd9, 0x3a, 0x6b, 0x95, 0x99, 0x6f, 0x3e, 0xed, 0x92, 0x6c,
	0x2e, 0x05, 0x64, 0x99, 0x41, 0x22, 0x07, 0xf8, 0x64, 0xd7, 0xa6, 0x6f, 0x12, 0x51, 0x6e, 0xc3,
	0xc0, 0x7a, 0xb0, 0x1f, 0xb4, 0xa9, 0x56, 0x90, 0x1a, 0xe7, 0x26, 0x41, 0x5e, 0x67, 0x10, 0x43,
	0x0b, 0x83, 0x1d, 0x08, 0xf4, 0x3d, 0x13, 0x21, 0x8b, 0x3c, 0x27, 0xc2, 0x8b, 0x84, 0x8d, 0x4a,
	0x32, 0x6c, 0xf7, 0xac, 0xed, 0xd7, 0xcf, 0xd1, 0x36, 0x97, 0x5d, 0x6c, 0xab, 0x93, 0x9d, 0xc6,
	0xfb, 0xa8, 0xf4, 0x9e, 0x92, 0x1d, 0x62, 0x08, 0xc3, 0x28, 0x45, 0x0c, 0xc2, 0x89, 0xe2, 0x34,
	0x9c, 0x9b, 0x1a, 0x7e, 0x4d, 0xf0, 0x55, 0xe6, 0xba, 0xbc, 0x9c, 0x0b, 0x5e, 0x30, 0x4f, 0x61,
	0x38, 0xdd, 0xf0, 0xa3, 0x7b, 0x9a, 0xe4, 0xea, 0xda, 0x62, 0x5b, 0xdb, 0xff, 0x38, 0x77, 0x19,
	0xdc, 0x1d, 0x74, 0x3b, 0xa5, 0x2a, 0xf6, 0x3b, 0x71, 0xf7, 0x98, 0x2f, 0x2e, 0xa8, 0xf7, 0x30,
	0x9c, 0x1e, 0x12, 0x32, 0xa8, 0xe6, 0xf9, 0xc1, 0x98, 0xf7, 0x45, 0x86, 0x7b, 0x17, 0x4d, 0xe7,
	0x71, 0xcf, 0xc2, 0x88, 0x9c, 0xbb, 0x75, 0xe6, 0x93, 0xa3, 0x1f, 0xc1, 0x60, 0x67, 0x8c, 0x40,
	0x33, 0xb9, 0xc2, 0xea, 0x7d, 0xb7, 0x73, 0x0c, 0xd5, 0x41, 0x93, 0x26, 0xd4, 0x4e, 0x05, 0x11,
	0x18, 0x92, 0xc3, 0x08, 0xc9, 0xa4, 0xd3, 0x34, 0xa6, 0xd8, 0x65, 0x15, 0x35, 0xa5, 0x18, 0x71,
	0x90, 0xa0, 0x4a, 0x1e, 0xb9, 0xe1, 0x13, 0x01, 0xfa, 0xa3, 0x05, 0xc3, 0xe9, 0xc1, 0x26, 0x43,
	0xb3, 0x79, 0xe6, 0x31, 0x6c, 0xf7, 0x21, 0x03, 0x5d, 0x5c, 0x36, 0x92, 0xdc, 0x66, 0x1e, 0x19,
	0xb8, 0x90, 0xd7, 0x29, 0x8c, 0x28, 0x63, 0x10, 0x9a, 0xd3, 0xe9, 0x4b, 0x37, 0x27, 0xd8, 0xe3,
	0xd9, 0x39, 0xc0, 0xfc, 0x4c, 0xe8, 0x1c, 0x5c, 0x69, 0x8d, 0x7d, 0x80, 0x11, 0x65, 0x78, 0xca,
	0x40, 0x17, 0x0c, 0x56, 0x46, 0x95, 0x2d, 0x31, 0xe8, 0x59, 0x34, 0xa3, 0x81, 0x3e, 0x0b, 0xa3,
	0x03, 0x55, 0x66, 0xc7, 0x00, 0xf2, 0x9c, 0xce, 0xa4, 0xdc, 0x34, 0x79, 0x19, 0x77, 0x3d, 0xcf,
	0xa0, 0xa7, 0xd1, 0x94, 0x11, 0xba, 0xa3, 0xb5, 0x13, 0x18, 0x4e, 0x0d, 0x4a, 0x04, 0xcd, 0xe6,
	0xc5, 0xa6, 0x85, 0xb6, 0xb3, 0xd0, 0x29, 0xbd, 0xcd, 0x30, 0xf8, 0x2a, 0x9a, 0xd0, 0xc0, 0x4b,
	0xc1, 0x7d, 0x80, 0x11, 0x65, 0xf2, 0xcb, 0x50, 0x5e, 0x30, 0x15, 0x1a, 0xf7, 0xdd, 0x9d, 0xf2,
	0x94, 0xe8, 0x50, 0x83, 0x97, 0x99, 0x98, 0xf1, 0xd0, 0x7d, 0xd3, 0xce, 0xb5, 0x43, 0x60, 0x41,
	0xb9, 0x8d, 0xb2, 0x28, 0xae, 0xa2, 0x61, 0x76, 0x8a, 0x36, 0x85, 0xfb, 0x3f, 0x2c, 0x98, 0xec,
	0x36, 0x60, 0xa2, 0xff, 0xab, 0x14, 0xf4, 0x36, 0x8f, 0x16, 0x84, 0xf2, 0x98, 0x85, 0xf2, 0x85,
	0x73, 0x9f, 0x85, 0x92, 0xe1, 0x42, 0x44, 0xc6, 0xcb, 0x71, 0xa5, 0x2d, 0xc1, 0x64, 0xf3, 0x27,
	0x07, 0x53, 0x7d, 0x8b, 0x99, 0x9b, 0xa5, 0xe2, 0x36, 0x26, 0x99, 0x95, 0xd4, 0x36, 0x26, 0x7d,
	0xfa, 0xc4, 0x26, 0x6a, 0xfd, 0x1d, 0x77, 0x1a, 0xcd, 0x3c, 0x96, 0x69, 0xc2, 0x35, 0x56, 0x9e,
	0x46, 0xfe, 0x1c, 0xf1, 0x8c, 0x92, 0x43, 0xb5, 0xec, 0x44, 0xd3, 0x19, 0x83, 0xe6, 0x9b, 0xce,
	0x5e, 0x76, 0xa7, 0x6b, 0x3a, 0x53, 0x58, 0x9d, 0x3a, 0xf3, 0x45, 0xd3, 0x19, 0xff, 0xa6, 0x6b,
	0x3a, 0xf3, 0x58, 0xa3, 0x12, 0x2b, 0x95, 0xd1, 0x29, 0x86, 0x57, 0x41, 0xb7, 0xb2, 0x78, 0xb2,
	0xb0, 0xc2, 0x4e, 0xfb, 0x99, 0xe7, 0xd2, 0x34, 0x03, 0x6b, 0x76, 0xd6, 0x85, 0xc5, 0x74, 0x25,
	0x7d, 0xb4, 0xa0, 0x94, 0x9d, 0x87, 0x33, 0x4d, 0x68, 0xf1, 0xb8, 0x6c, 0x17, 0x0e, 0x6f, 0x89,
	0x84, 0x9c, 0x54, 0x27, 0x2c, 0xcd, 0x93, 0xb6, 0xf0, 0x37, 0xab, 0xf3, 0x22, 0x25, 0x37, 0x46,
	0xa3, 0x47, 0x3a, 0xf5, 0x76, 0x99, 0xb6, 0x6d, 0xc3, 0xac, 0xe7, 0x2c, 0xb3, 0x70, 0x96, 0x9c,
	0x19, 0x7d, 0x38, 0x5c, 0xd7, 0x54, 0x78, 0x17, 0xd1, 0xbd, 0x87, 0x52, 0x76, 0x1a, 0xcf, 0x30,
	0x54, 0x3c, 0xac, 0x1b, 0xc5, 0x2e, 0xb8, 0x59, 0xa8, 0x68, 0x83, 0x71, 0xcf, 0xf0, 0x49, 0x78,
	0x8e, 0x7e, 0xb2, 0x60, 0x44, 0x19, 0xd6, 0x33, 0x87, 0x6d, 0xc1, 0x20, 0xdf, 0x25, 0x35, 0x9a,
	0x23, 0x37, 0x07, 0x2f, 0xab, 0xe0, 0x1c, 0xae, 0xa9, 0xaf, 0x00, 0x08, 0x9a, 0xcf, 0xd5, 0x82,
	0x31, 0x92, 0x49, 0x7d, 0x24, 0xa9, 0xea, 0x10, 0x23, 0x26, 0xd2, 0x0b, 0x05, 0x7d, 0xb2, 0xe0,
	0x7a, 0xee, 0xa5, 0x02, 0x5a, 0x52, 0x22, 0xe8, 0xf2, 0xd2, 0xc1, 0x98, 0x87, 0xfb, 0x0c, 0xfa,
	0x9e, 0x73, 0x47, 0x4f, 0xc4, 0xc3, 0x95, 0x88, 0x3b, 0x16, 0x7a, 0xf8, 0x64, 0x41, 0x29, 0xfb,
	0x2a, 0x22, 0x23, 0x88, 0xe2, 0x37, 0x15, 0x5d, 0xf2, 0x22, 0xaa, 0x77, 0xb9, 0x48, 0x16, 0x22,
	0x94, 0x5f, 0x2c, 0xb8, 0xc1, 0x2b, 0x42, 0x79, 0x13, 0x81, 0x6a, 0x9a, 0x9a, 0x29, 0x78, 0xaf,
	0x61, 0x3b, 0x45, 0x6f, 0x32, 0xd4, 0xe3, 0xd2, 0x29, 0xcb, 0xb0, 0x94, 0x45, 0xa2, 0x98, 0x57,
	0x5f, 0x42, 0xfa, 0x9f, 0x7c, 0xab, 0x57, 0x9e, 0xb4, 0x4e, 0x37, 0x62, 0xbe, 0x37, 0xac, 0xed,
	0xb1, 0xce, 0x7f, 0x07, 0x1f, 0xa7, 0x4c, 0x3e, 0xf7, 0xf5, 0xaf, 0x6d, 0xac, 0xfe, 0xde, 0x57,
	0x5d, 0xe3, 0xd9, 0xd9, 0x48, 0xb2, 0xf3, 0x12, 0x37, 0x1a, 0xdf, 0xb4, 0x82, 0xb7, 0xad, 0x17,
	0xa7, 0x21, 0x26, 0xbb, 0x03, 0x2c, 0x6d, 0x8f, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x87, 0xf9,
	0x8e, 0x1c, 0x64, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BundledServiceClient is the client API for BundledService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BundledServiceClient interface {
	// Creates a new Tree
	CreateTree(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// Delete a Tree
	DeleteTree(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTree(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTrees(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTree(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// The Get method takes zero or more parameters, and returns a ProjectfilterEntity which contains a Projectfilter
	GetProjectfilter(ctx context.Context, in *GetProjectfilterServiceRequest, opts ...grpc.CallOption) (*projectfilter.ProjectfilterEntity, error)
	// Creates a new Auth
	CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// Creates a new Person
	CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// Creates a new Project
	CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// Get a collection with PersonEntities
	ListMembers(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Creates a new Task
	CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error)
	// Updates a Task, partial updates are not supported
	UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// Creates a new Experiment
	CreateExperiment(ctx context.Context, in *CreateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
	// create an experiment template
	CreateTemplateExperiment(ctx context.Context, in *CreateTemplateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.Experiment, error)
	// Delete a Experiment
	DeleteExperiment(ctx context.Context, in *DeleteExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
	GetExperiment(ctx context.Context, in *GetExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
	// The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
	ListExperiments(ctx context.Context, in *ListExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentCollection, error)
	// Releases experiment
	ReleaseExperiment(ctx context.Context, in *ReleaseExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Updates a Experiment, partial updates are supported
	UpdateExperiment(ctx context.Context, in *UpdateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
	// Creates a new universaltest
	Createuniversaltest(ctx context.Context, in *CreateUniversaltestServiceRequest, opts ...grpc.CallOption) (*universaltest.UniversaltestEntity, error)
}

type bundledServiceClient struct {
	cc *grpc.ClientConn
}

func NewBundledServiceClient(cc *grpc.ClientConn) BundledServiceClient {
	return &bundledServiceClient{cc}
}

func (c *bundledServiceClient) CreateTree(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteTree(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetTree(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListTrees(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeCollection, error) {
	out := new(tree.TreeCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListTrees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateTree(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetProjectfilter(ctx context.Context, in *GetProjectfilterServiceRequest, opts ...grpc.CallOption) (*projectfilter.ProjectfilterEntity, error) {
	out := new(projectfilter.ProjectfilterEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetProjectfilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error) {
	out := new(auth.AuthCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeletePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error) {
	out := new(project.ProjectCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListMembers(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UnsubscribeProjectMembersService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error) {
	out := new(task.TaskCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateExperiment(ctx context.Context, in *CreateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateTemplateExperiment(ctx context.Context, in *CreateTemplateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.Experiment, error) {
	out := new(experiment.Experiment)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTemplateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteExperiment(ctx context.Context, in *DeleteExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetExperiment(ctx context.Context, in *GetExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListExperiments(ctx context.Context, in *ListExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentCollection, error) {
	out := new(experiment.ExperimentCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListExperiments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ReleaseExperiment(ctx context.Context, in *ReleaseExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ReleaseExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateExperiment(ctx context.Context, in *UpdateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) Createuniversaltest(ctx context.Context, in *CreateUniversaltestServiceRequest, opts ...grpc.CallOption) (*universaltest.UniversaltestEntity, error) {
	out := new(universaltest.UniversaltestEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/Createuniversaltest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BundledServiceServer is the server API for BundledService service.
type BundledServiceServer interface {
	// Creates a new Tree
	CreateTree(context.Context, *CreateTreeServiceRequest) (*tree.TreeEntity, error)
	// Delete a Tree
	DeleteTree(context.Context, *DeleteTreeServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTree(context.Context, *GetTreeServiceRequest) (*tree.TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTrees(context.Context, *ListTreeServiceRequest) (*tree.TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTree(context.Context, *UpdateTreeServiceRequest) (*tree.TreeEntity, error)
	// The Get method takes zero or more parameters, and returns a ProjectfilterEntity which contains a Projectfilter
	GetProjectfilter(context.Context, *GetProjectfilterServiceRequest) (*projectfilter.ProjectfilterEntity, error)
	// Creates a new Auth
	CreateAuth(context.Context, *CreateAuthServiceRequest) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(context.Context, *DeleteAuthServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(context.Context, *GetAuthServiceRequest) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(context.Context, *ListAuthServiceRequest) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(context.Context, *UpdateAuthServiceRequest) (*auth.AuthEntity, error)
	// Creates a new Person
	CreatePerson(context.Context, *CreatePersonServiceRequest) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(context.Context, *DeletePersonServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(context.Context, *GetPersonServiceRequest) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(context.Context, *ListPersonServiceRequest) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(context.Context, *UpdatePersonServiceRequest) (*person.PersonEntity, error)
	// Creates a new Project
	CreateProject(context.Context, *CreateProjectServiceRequest) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(context.Context, *DeleteProjectServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(context.Context, *GetProjectServiceRequest) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(context.Context, *ListProjectServiceRequest) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(context.Context, *UpdateProjectServiceRequest) (*project.ProjectEntity, error)
	// Get a collection with PersonEntities
	ListMembers(context.Context, *ListProjectMembersServiceRequest) (*person.PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(context.Context, *UnsubscribeProjectMembersServiceRequest) (*person.PersonCollection, error)
	// Creates a new Task
	CreateTask(context.Context, *CreateTaskServiceRequest) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(context.Context, *DeleteTaskServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(context.Context, *GetTaskServiceRequest) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(context.Context, *ListTaskServiceRequest) (*task.TaskCollection, error)
	// Updates a Task, partial updates are not supported
	UpdateTask(context.Context, *UpdateTaskServiceRequest) (*task.TaskEntity, error)
	// Creates a new Experiment
	CreateExperiment(context.Context, *CreateExperimentServiceRequest) (*experiment.ExperimentEntity, error)
	// create an experiment template
	CreateTemplateExperiment(context.Context, *CreateTemplateExperimentServiceRequest) (*experiment.Experiment, error)
	// Delete a Experiment
	DeleteExperiment(context.Context, *DeleteExperimentServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
	GetExperiment(context.Context, *GetExperimentServiceRequest) (*experiment.ExperimentEntity, error)
	// The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
	ListExperiments(context.Context, *ListExperimentServiceRequest) (*experiment.ExperimentCollection, error)
	// Releases experiment
	ReleaseExperiment(context.Context, *ReleaseExperimentServiceRequest) (*empty.Empty, error)
	// Updates a Experiment, partial updates are supported
	UpdateExperiment(context.Context, *UpdateExperimentServiceRequest) (*experiment.ExperimentEntity, error)
	// Creates a new universaltest
	Createuniversaltest(context.Context, *CreateUniversaltestServiceRequest) (*universaltest.UniversaltestEntity, error)
}

func RegisterBundledServiceServer(s *grpc.Server, srv BundledServiceServer) {
	s.RegisterService(&_BundledService_serviceDesc, srv)
}

func _BundledService_CreateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTree(ctx, req.(*CreateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteTree(ctx, req.(*DeleteTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetTree(ctx, req.(*GetTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListTrees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListTrees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListTrees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListTrees(ctx, req.(*ListTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateTree(ctx, req.(*UpdateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetProjectfilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectfilterServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetProjectfilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetProjectfilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetProjectfilter(ctx, req.(*GetProjectfilterServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateAuth(ctx, req.(*CreateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).Logout(ctx, req.(*DeleteAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetAuth(ctx, req.(*GetAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListAuths(ctx, req.(*ListAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateAuth(ctx, req.(*UpdateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreatePerson(ctx, req.(*CreatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeletePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeletePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeletePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeletePerson(ctx, req.(*DeletePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetPerson(ctx, req.(*GetPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListPersons(ctx, req.(*ListPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdatePerson(ctx, req.(*UpdatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateProject(ctx, req.(*CreateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteProject(ctx, req.(*DeleteProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetProject(ctx, req.(*GetProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListProjects(ctx, req.(*ListProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateProject(ctx, req.(*UpdateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListMembers(ctx, req.(*ListProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UnsubscribeProjectMembersService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UnsubscribeProjectMembersService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UnsubscribeProjectMembersService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UnsubscribeProjectMembersService(ctx, req.(*UnsubscribeProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTask(ctx, req.(*CreateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteTask(ctx, req.(*DeleteTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetTask(ctx, req.(*GetTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListTasks(ctx, req.(*ListTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateTask(ctx, req.(*UpdateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateExperiment(ctx, req.(*CreateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateTemplateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTemplateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTemplateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTemplateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTemplateExperiment(ctx, req.(*CreateTemplateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteExperiment(ctx, req.(*DeleteExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetExperiment(ctx, req.(*GetExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListExperiments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListExperiments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListExperiments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListExperiments(ctx, req.(*ListExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ReleaseExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ReleaseExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ReleaseExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ReleaseExperiment(ctx, req.(*ReleaseExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateExperiment(ctx, req.(*UpdateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_Createuniversaltest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUniversaltestServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).Createuniversaltest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/Createuniversaltest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).Createuniversaltest(ctx, req.(*CreateUniversaltestServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BundledService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskmanager.BundledService",
	HandlerType: (*BundledServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTree",
			Handler:    _BundledService_CreateTree_Handler,
		},
		{
			MethodName: "DeleteTree",
			Handler:    _BundledService_DeleteTree_Handler,
		},
		{
			MethodName: "GetTree",
			Handler:    _BundledService_GetTree_Handler,
		},
		{
			MethodName: "ListTrees",
			Handler:    _BundledService_ListTrees_Handler,
		},
		{
			MethodName: "UpdateTree",
			Handler:    _BundledService_UpdateTree_Handler,
		},
		{
			MethodName: "GetProjectfilter",
			Handler:    _BundledService_GetProjectfilter_Handler,
		},
		{
			MethodName: "CreateAuth",
			Handler:    _BundledService_CreateAuth_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _BundledService_Logout_Handler,
		},
		{
			MethodName: "GetAuth",
			Handler:    _BundledService_GetAuth_Handler,
		},
		{
			MethodName: "ListAuths",
			Handler:    _BundledService_ListAuths_Handler,
		},
		{
			MethodName: "UpdateAuth",
			Handler:    _BundledService_UpdateAuth_Handler,
		},
		{
			MethodName: "CreatePerson",
			Handler:    _BundledService_CreatePerson_Handler,
		},
		{
			MethodName: "DeletePerson",
			Handler:    _BundledService_DeletePerson_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _BundledService_GetPerson_Handler,
		},
		{
			MethodName: "ListPersons",
			Handler:    _BundledService_ListPersons_Handler,
		},
		{
			MethodName: "UpdatePerson",
			Handler:    _BundledService_UpdatePerson_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _BundledService_CreateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _BundledService_DeleteProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _BundledService_GetProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _BundledService_ListProjects_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _BundledService_UpdateProject_Handler,
		},
		{
			MethodName: "ListMembers",
			Handler:    _BundledService_ListMembers_Handler,
		},
		{
			MethodName: "UnsubscribeProjectMembersService",
			Handler:    _BundledService_UnsubscribeProjectMembersService_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _BundledService_CreateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _BundledService_DeleteTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _BundledService_GetTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _BundledService_ListTasks_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _BundledService_UpdateTask_Handler,
		},
		{
			MethodName: "CreateExperiment",
			Handler:    _BundledService_CreateExperiment_Handler,
		},
		{
			MethodName: "CreateTemplateExperiment",
			Handler:    _BundledService_CreateTemplateExperiment_Handler,
		},
		{
			MethodName: "DeleteExperiment",
			Handler:    _BundledService_DeleteExperiment_Handler,
		},
		{
			MethodName: "GetExperiment",
			Handler:    _BundledService_GetExperiment_Handler,
		},
		{
			MethodName: "ListExperiments",
			Handler:    _BundledService_ListExperiments_Handler,
		},
		{
			MethodName: "ReleaseExperiment",
			Handler:    _BundledService_ReleaseExperiment_Handler,
		},
		{
			MethodName: "UpdateExperiment",
			Handler:    _BundledService_UpdateExperiment_Handler,
		},
		{
			MethodName: "Createuniversaltest",
			Handler:    _BundledService_Createuniversaltest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "__bundled/BundledService.proto",
}
