// Code generated by furo-proto-gen. DO NOT EDIT.
// generation date: 2019-08-21 11:15:47

syntax = "proto3";
package bundled;



import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/money.proto";
import "google/date.proto";
import "furo/meta.proto";
import "furo/link.proto";
import "furo/reference.proto";




// Navigation tree type with recursive navigation nodes
message Tree {                        
    // description of the tree
    string description = 3;
    
    // String representation of the tree
    string display_name = 2;
    
    // Id of the tree
    string id = 1;
    
    // Rootnode of the tree
    Navigationnode root = 10;

}
// TreeEntity with Tree
message TreeEntity {                    
    // contains a tree.Tree
    Tree data = 1;
    
    // Hateoas links
    repeated furo.Link links = 2;
    
    // Meta for the response
    furo.Meta meta = 3;

}
// Item of the navigationtree
message Navigationnode {                                                    
    // Children of this node
    repeated Navigationnode children = 11;
    
    // description of the node
    string description = 4;
    
    // String representation of the node
    string display_name = 2;
    
    // if node has error
    bool has_error = 8;
    
    // icon of the node
    string icon = 5;
    
    // Id of the node
    string id = 1;
    
    // key words of the node
    string key_words = 7;
    
    // Deeplink information of this node
    furo.Link link = 10;
    
    // node is open or not
    bool open = 9;
    
    // Which panel (i.e. view, edit, display) opens the node type (which is defined in property link)
    string panel = 6;
    
    // Secondary text of the node
    string secondary_text = 3;

}
// TaskEntity with Task
message TaskEntity {                    
    // contains a task.Task
    Task data = 1;
    
    // Hateoas links
    repeated furo.Link links = 2;
    
    // Meta for the response
    furo.Meta meta = 3;

}
// Person message type
message Person {                                
    // Localized String representation of a person
    string display_name = 2;
    
    // First name of a person
    string first_name = 4;
    
    // Identity of a person
    string id = 1;
    
    // Name of a person
    string name = 3;
    
    // Internal phone number
    string phone_nr = 5;
    
    // List of main skills of a person
    repeated string skills = 6;

}
// PersonCollection with repeated PersonEntity
message PersonCollection {                    
    // Contains a person.PersonEntity repeated
    repeated PersonEntity entities = 4;
    
    // Hateoas links
    repeated furo.Link links = 3;
    
    // Meta for the response
    furo.Meta meta = 2;

}
// TreeCollection with repeated TreeEntity
message TreeCollection {                    
    // Contains a tree.TreeEntity repeated
    repeated TreeEntity entities = 4;
    
    // Hateoas links
    repeated furo.Link links = 3;
    
    // Meta for the response
    furo.Meta meta = 2;

}
// TaskCollection with repeated TaskEntity
message TaskCollection {                    
    // Contains a task.TaskEntity repeated
    repeated TaskEntity entities = 4;
    
    // Hateoas links
    repeated furo.Link links = 3;
    
    // Meta for the response
    furo.Meta meta = 2;

}
// Task data description
message Task {                                
    // Short task description
    string description = 3;
    
    // Localized String representation of a task
    ProjectCollection display_name = 2;
    
    // Estimated time in days
    int32 estimated_time = 4;
    
    // Identity of a task
    string id = 1;
    
    // Owner of a task
    furo.Reference owner = 5;
    
    // List of subtasks
    Task subtasks = 6;

}
// ProjectCollection with repeated ProjectEntity
message ProjectCollection {                    
    // Contains a project.ProjectEntity repeated
    repeated ProjectEntity entities = 4;
    
    // Hateoas links
    repeated furo.Link links = 3;
    
    // Meta for the response
    furo.Meta meta = 2;

}
// ProjectEntity with Project
message ProjectEntity {                    
    // contains a project.Project
    Project data = 1;
    
    // Hateoas links
    repeated furo.Link links = 2;
    
    // Meta for the response
    furo.Meta meta = 3;

}
// PersonEntity with Person
message PersonEntity {                    
    // contains a person.Person
    Person data = 1;
    
    // Hateoas links
    repeated furo.Link links = 2;
    
    // Meta for the response
    furo.Meta meta = 3;

}
// Project description
message Project {                                    
    // Project cost limit
    google.Money cost_limit = 7;
    
    // Short project description
    string description = 5;
    
    // Localized String representation of a project
    string display_name = 2;
    
    // Prospective end date of the project
    google.Date end = 4;
    
    // Identity of a project
    string id = 1;
    
    // List of project members
    repeated Person members = 6;
    
    // Start date of the project
    google.Date start = 3;

}
