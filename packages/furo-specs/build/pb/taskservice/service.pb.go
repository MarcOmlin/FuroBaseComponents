// Code generated by protoc-gen-go. DO NOT EDIT.
// source: taskservice/service.proto

package taskservice

import (
	protobuf "../google/protobuf"
	task "../task"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTaskServiceRequest struct {
	Data                 *task.Task `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateTaskServiceRequest) Reset()         { *m = CreateTaskServiceRequest{} }
func (m *CreateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskServiceRequest) ProtoMessage()    {}
func (*CreateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6981bd005514d040, []int{0}
}

func (m *CreateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskServiceRequest.Unmarshal(m, b)
}
func (m *CreateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskServiceRequest.Merge(m, src)
}
func (m *CreateTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskServiceRequest.Size(m)
}
func (m *CreateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskServiceRequest proto.InternalMessageInfo

func (m *CreateTaskServiceRequest) GetData() *task.Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTaskServiceRequest struct {
	Tsk                  string          `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *protobuf.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteTaskServiceRequest) Reset()         { *m = DeleteTaskServiceRequest{} }
func (m *DeleteTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskServiceRequest) ProtoMessage()    {}
func (*DeleteTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6981bd005514d040, []int{1}
}

func (m *DeleteTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTaskServiceRequest.Unmarshal(m, b)
}
func (m *DeleteTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskServiceRequest.Merge(m, src)
}
func (m *DeleteTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTaskServiceRequest.Size(m)
}
func (m *DeleteTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskServiceRequest proto.InternalMessageInfo

func (m *DeleteTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *DeleteTaskServiceRequest) GetData() *protobuf.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskServiceRequest struct {
	Tsk                  string   `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskServiceRequest) Reset()         { *m = GetTaskServiceRequest{} }
func (m *GetTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskServiceRequest) ProtoMessage()    {}
func (*GetTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6981bd005514d040, []int{2}
}

func (m *GetTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskServiceRequest.Unmarshal(m, b)
}
func (m *GetTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskServiceRequest.Merge(m, src)
}
func (m *GetTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskServiceRequest.Size(m)
}
func (m *GetTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskServiceRequest proto.InternalMessageInfo

func (m *GetTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

type ListTaskServiceRequest struct {
	//Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	//Sortierung nach feldern
	//**?filter=-completed** um completed absteigend zu bekommen
	//**?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	//Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	//Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	//Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	//Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	//not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	//not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	//Query term to search a task
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskServiceRequest) Reset()         { *m = ListTaskServiceRequest{} }
func (m *ListTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskServiceRequest) ProtoMessage()    {}
func (*ListTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6981bd005514d040, []int{3}
}

func (m *ListTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTaskServiceRequest.Unmarshal(m, b)
}
func (m *ListTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskServiceRequest.Merge(m, src)
}
func (m *ListTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListTaskServiceRequest.Size(m)
}
func (m *ListTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskServiceRequest proto.InternalMessageInfo

func (m *ListTaskServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListTaskServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListTaskServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTaskServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListTaskServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTaskServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListTaskServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListTaskServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListTaskServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateTaskServiceRequest struct {
	Tsk                  string     `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *task.Task `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateTaskServiceRequest) Reset()         { *m = UpdateTaskServiceRequest{} }
func (m *UpdateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskServiceRequest) ProtoMessage()    {}
func (*UpdateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6981bd005514d040, []int{4}
}

func (m *UpdateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskServiceRequest.Unmarshal(m, b)
}
func (m *UpdateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskServiceRequest.Merge(m, src)
}
func (m *UpdateTaskServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskServiceRequest.Size(m)
}
func (m *UpdateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskServiceRequest proto.InternalMessageInfo

func (m *UpdateTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *UpdateTaskServiceRequest) GetData() *task.Task {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTaskServiceRequest)(nil), "taskservice.CreateTaskServiceRequest")
	proto.RegisterType((*DeleteTaskServiceRequest)(nil), "taskservice.DeleteTaskServiceRequest")
	proto.RegisterType((*GetTaskServiceRequest)(nil), "taskservice.GetTaskServiceRequest")
	proto.RegisterType((*ListTaskServiceRequest)(nil), "taskservice.ListTaskServiceRequest")
	proto.RegisterType((*UpdateTaskServiceRequest)(nil), "taskservice.UpdateTaskServiceRequest")
}

func init() { proto.RegisterFile("taskservice/service.proto", fileDescriptor_6981bd005514d040) }

var fileDescriptor_6981bd005514d040 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xad, 0xed, 0xd6, 0x53, 0x24, 0x26, 0x6b, 0x54, 0x5e, 0x0b, 0x55, 0x97, 0x0a,
	0xd4, 0x71, 0x91, 0x48, 0xe3, 0x8e, 0xdb, 0x31, 0x71, 0xb3, 0xab, 0x00, 0x12, 0xb7, 0x5e, 0xea,
	0x45, 0x5e, 0xfe, 0x38, 0x8d, 0x9d, 0xa2, 0x09, 0x71, 0xc3, 0x2b, 0xf0, 0x30, 0xbc, 0x06, 0x12,
	0xaf, 0xc0, 0x83, 0x20, 0x1f, 0xbb, 0x4a, 0x5b, 0x52, 0xb1, 0x9b, 0xd6, 0xe7, 0xe4, 0xcb, 0xf7,
	0x3b, 0xb6, 0xbf, 0xc0, 0x99, 0x66, 0x2a, 0x55, 0xbc, 0x5a, 0x89, 0x98, 0x87, 0xee, 0x3f, 0x28,
	0x2b, 0xa9, 0x25, 0x19, 0x6c, 0x3c, 0x1a, 0x3d, 0x4f, 0xa4, 0x4c, 0x32, 0x1e, 0xb2, 0x52, 0x84,
	0xac, 0x28, 0xa4, 0x66, 0x5a, 0xc8, 0x42, 0x59, 0xe9, 0xe8, 0xa9, 0x91, 0x86, 0xe6, 0xc7, 0x35,
	0xc6, 0x4e, 0x8e, 0xd5, 0x6d, 0x7d, 0x17, 0xf2, 0xbc, 0xd4, 0x0f, 0xf6, 0xa1, 0xff, 0x16, 0xe8,
	0x55, 0xc5, 0x99, 0xe6, 0x1f, 0x99, 0x4a, 0x3f, 0x58, 0x40, 0xc4, 0x97, 0x35, 0x57, 0x9a, 0x4c,
	0xa0, 0xb3, 0x60, 0x9a, 0x51, 0x6f, 0xea, 0xcd, 0x07, 0x97, 0x10, 0xa0, 0xa7, 0xd1, 0x45, 0xd8,
	0xf7, 0x3f, 0x03, 0x7d, 0xc7, 0x33, 0xde, 0xfa, 0xee, 0x09, 0x1c, 0x6a, 0x95, 0xe2, 0xab, 0xfd,
	0xc8, 0x2c, 0xc9, 0x6b, 0xe7, 0x76, 0x80, 0x6e, 0xc3, 0xc0, 0x4e, 0x15, 0xac, 0xa7, 0x0a, 0xae,
	0xcd, 0x54, 0xce, 0xf9, 0x02, 0x9e, 0xbd, 0xe7, 0xfa, 0x31, 0xb6, 0xfe, 0x2f, 0x0f, 0x86, 0x37,
	0x42, 0xb5, 0x89, 0x87, 0xd0, 0xbb, 0x13, 0x3c, 0x5b, 0x28, 0xa7, 0x77, 0x15, 0x21, 0xd0, 0x51,
	0xb2, 0xd2, 0x38, 0x49, 0x3f, 0xc2, 0xb5, 0xd5, 0x66, 0x9a, 0x57, 0xf4, 0x70, 0xad, 0x35, 0x95,
	0xd1, 0x96, 0x2c, 0xe1, 0xb4, 0x33, 0xf5, 0xe6, 0xdd, 0x08, 0xd7, 0xe4, 0x14, 0xba, 0x99, 0xc8,
	0x85, 0xa6, 0x5d, 0x6c, 0xda, 0xc2, 0x74, 0x63, 0x59, 0x17, 0x9a, 0xf6, 0xa6, 0xde, 0xfc, 0x38,
	0xb2, 0x85, 0x19, 0x58, 0xd5, 0x39, 0x3d, 0xb2, 0x03, 0xab, 0x3a, 0x37, 0x8e, 0x2b, 0xc1, 0xbf,
	0xd0, 0x63, 0x4b, 0x37, 0x6b, 0xf2, 0x04, 0xbc, 0x25, 0x1d, 0x60, 0xc3, 0x5b, 0xfa, 0x37, 0x40,
	0x3f, 0x95, 0x0b, 0xf6, 0xc8, 0x73, 0x9d, 0x6c, 0x9d, 0xeb, 0x3f, 0xb7, 0x74, 0xf9, 0xb3, 0x03,
	0x83, 0x0d, 0x23, 0x72, 0x0f, 0xd0, 0xdc, 0x38, 0x79, 0x19, 0x6c, 0x24, 0x2b, 0xd8, 0x17, 0x85,
	0xd1, 0x49, 0x63, 0x7b, 0x5d, 0x68, 0xa1, 0x1f, 0xfc, 0xd9, 0xf7, 0xdf, 0x7f, 0x7e, 0x1c, 0xbc,
	0x20, 0xe3, 0x30, 0x97, 0x71, 0x6a, 0x48, 0x98, 0x39, 0x15, 0xc6, 0xe8, 0x11, 0xdc, 0x2b, 0x59,
	0x90, 0x15, 0x40, 0x93, 0x90, 0x1d, 0xd6, 0xbe, 0xe8, 0x8c, 0xf6, 0x44, 0xc3, 0xbf, 0x40, 0xe2,
	0x8c, 0x9c, 0xef, 0x12, 0xbf, 0x6a, 0x95, 0x7e, 0x0b, 0x17, 0xe8, 0x67, 0xb9, 0x09, 0x1c, 0xb9,
	0xfc, 0x10, 0x7f, 0x0b, 0xda, 0x9a, 0xaa, 0x96, 0xdd, 0xbd, 0x42, 0xd6, 0x94, 0x4c, 0xda, 0x59,
	0x09, 0xd7, 0x16, 0x24, 0xa0, 0xbf, 0x0e, 0x9f, 0x22, 0xb3, 0x2d, 0x54, 0x7b, 0x28, 0x47, 0xa7,
	0x0d, 0xeb, 0x4a, 0x66, 0x19, 0x8f, 0xcd, 0xb7, 0xeb, 0x9f, 0x23, 0x6f, 0x4c, 0xce, 0x76, 0x79,
	0x99, 0x50, 0x0e, 0x55, 0x02, 0x34, 0xa9, 0xd8, 0x39, 0xcb, 0x7d, 0x71, 0x69, 0xd9, 0xd9, 0x7f,
	0x4e, 0xb1, 0x46, 0x27, 0x24, 0xde, 0xf6, 0xf0, 0x02, 0xde, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x74, 0xc1, 0x16, 0x67, 0x98, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	// Creates a new Task
	CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*protobuf.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error)
	// Updates a Task, partial updates are supported
	UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*protobuf.Empty, error) {
	out := new(protobuf.Empty)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error) {
	out := new(task.TaskCollection)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/ListTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskservice.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	// Creates a new Task
	CreateTask(context.Context, *CreateTaskServiceRequest) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(context.Context, *DeleteTaskServiceRequest) (*protobuf.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(context.Context, *GetTaskServiceRequest) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(context.Context, *ListTaskServiceRequest) (*task.TaskCollection, error)
	// Updates a Task, partial updates are supported
	UpdateTask(context.Context, *UpdateTaskServiceRequest) (*task.TaskEntity, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedTaskServiceServer) DeleteTask(ctx context.Context, req *DeleteTaskServiceRequest) (*protobuf.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedTaskServiceServer) GetTask(ctx context.Context, req *GetTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedTaskServiceServer) ListTasks(ctx context.Context, req *ListTaskServiceRequest) (*task.TaskCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTasks not implemented")
}
func (*UnimplementedTaskServiceServer) UpdateTask(ctx context.Context, req *UpdateTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTask(ctx, req.(*DeleteTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*GetTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).ListTasks(ctx, req.(*ListTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskservice.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskservice.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _TaskService_DeleteTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _TaskService_ListTasks_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "taskservice/service.proto",
}
