{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-text-input`\n\n <sample-furo-text-input></sample-furo-text-input>",
      "summary": "Text input field",
      "path": "packages/furo-input/furo-text-input.js",
      "properties": [
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to disable the input field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Text for errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "f√ºr Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 108,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 118,
              "column": 8
            },
            "end": {
              "line": 135,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 144,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 200,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 213,
              "column": 8
            },
            "end": {
              "line": 493,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 502,
              "column": 8
            },
            "end": {
              "line": 504,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 506,
              "column": 8
            },
            "end": {
              "line": 514,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 516,
              "column": 8
            },
            "end": {
              "line": 530,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 554,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 565,
              "column": 8
            },
            "end": {
              "line": 587,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 605,
              "column": 8
            },
            "end": {
              "line": 607,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-text-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 234,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTextInput",
      "attributes": [
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The label",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Set this attribute to disable the input field",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "errortext",
          "description": "Text for errors",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the component\ndetail payload: {String} the text value",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-text-input",
      "mixins": [
        "FBP"
      ]
    }
  ]
}
